[
    {
        "id": "46a757ab.7b1178",
        "type": "tab",
        "label": "Soggiorno",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f2a638ae.d93ca8",
        "type": "tab",
        "label": "Server Room",
        "disabled": false,
        "info": ""
    },
    {
        "id": "7aa2da03.bd1f7c",
        "type": "tab",
        "label": "Soffitta",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d4025d43.ce8fc",
        "type": "tab",
        "label": "Camera",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5b5ae0eb.cb95b",
        "type": "tab",
        "label": "Cucina",
        "disabled": false,
        "info": ""
    },
    {
        "id": "295673c6.e0b2c4",
        "type": "tab",
        "label": "Sonoff generici",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f6bd4cff.b20c7",
        "type": "tab",
        "label": "Contatore",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e987eb50.a7ba78",
        "type": "tab",
        "label": "Ricarica Nissan",
        "disabled": false,
        "info": ""
    },
    {
        "id": "73b7c891.499c78",
        "type": "tab",
        "label": "Inverter",
        "disabled": true,
        "info": ""
    },
    {
        "id": "af47c860.21273",
        "type": "tab",
        "label": "SolarNode",
        "disabled": false,
        "info": ""
    },
    {
        "id": "92f9eb20.694dc8",
        "type": "tab",
        "label": "Network",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d4fae0b8.1d7718",
        "type": "tab",
        "label": "Abouts",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d0a57a20.e89aa",
        "type": "subflow",
        "name": "energyToCost_F3",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": []
            }
        ],
        "out": [
            {
                "x": 360,
                "y": 80,
                "wires": [
                    {
                        "id": "d0a57a20.e89aa",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "3d691d23.14dac2",
        "type": "subflow",
        "name": "E2€_F1",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "b6391832.531ae"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 360,
                "y": 80,
                "wires": [
                    {
                        "id": "b6391832.531ae",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "c0642d23.ec7808",
        "type": "subflow",
        "name": "Subflow 1",
        "info": "",
        "in": [],
        "out": [
            {
                "x": 1560,
                "y": 380,
                "wires": [
                    {
                        "id": "e8942631.188b88",
                        "port": 0
                    }
                ]
            },
            {
                "x": 920,
                "y": 440,
                "wires": [
                    {
                        "id": "b43c2457.90a1b",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "ee95ae30.7fefe8",
        "type": "mqtt-broker",
        "name": "RasHome",
        "broker": "127.0.0.1",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "d59a5488.4bc118",
        "type": "ui_group",
        "z": "46a757ab.7b1178",
        "name": "Soggiorno",
        "tab": "e0a100eb.d7d428",
        "order": 3,
        "disp": true,
        "width": "9",
        "collapse": false
    },
    {
        "id": "a0262ea6.472a3",
        "type": "ui_group",
        "name": "Stato Dispositivi",
        "tab": "165d9955.913107",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "7b6ab9d.5f695c8",
        "type": "ui_group",
        "name": "Sala Server",
        "tab": "e0a100eb.d7d428",
        "order": 4,
        "disp": true,
        "width": "9",
        "collapse": false
    },
    {
        "id": "165d9955.913107",
        "type": "ui_tab",
        "name": "Network",
        "icon": "important_devices",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6433672e.d1cdd8",
        "type": "ui_group",
        "name": "Speed Test",
        "tab": "f6617fde.60cc8",
        "order": 1,
        "disp": false,
        "width": "5",
        "collapse": false
    },
    {
        "id": "e5f11687.9d23",
        "type": "ui_group",
        "name": "Speed Test 2",
        "tab": "f6617fde.60cc8",
        "order": 2,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "f6617fde.60cc8",
        "type": "ui_tab",
        "name": "Speed Test",
        "icon": "network_cell",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d4d505c6.d93fc8",
        "type": "ui_group",
        "name": "Comandi",
        "tab": "165d9955.913107",
        "order": 2,
        "disp": true,
        "width": "5",
        "collapse": false
    },
    {
        "id": "ce4a15b0.cec888",
        "type": "googlehome-config-node",
        "ipaddress": "192.168.0.101",
        "name": "Google Mini",
        "language": "it"
    },
    {
        "id": "d5d0657e.399e18",
        "type": "googlehome-config-node",
        "ipaddress": "192.168.0.100",
        "name": "Google Nest Hub",
        "language": "it"
    },
    {
        "id": "40011901.675e7",
        "type": "ui_tab",
        "name": "About",
        "icon": "info_outline",
        "order": 9,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "add34066.c25a9",
        "type": "ui_group",
        "name": "Impostazioni  SolarNode",
        "tab": "5c04c4.b7b0db3c",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "ea6aed1e.d46f38",
        "type": "position-config",
        "name": "Alano di Piave",
        "isValide": "true",
        "longitude": "0",
        "latitude": "0",
        "angleType": "deg",
        "timeZoneOffset": "99",
        "timeZoneDST": "0",
        "stateTimeFormat": "3",
        "stateDateFormat": "3"
    },
    {
        "id": "a63d0a.95063af8",
        "type": "ui_group",
        "name": "System",
        "tab": "40011901.675e7",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "85ed0880.30aee8",
        "type": "ui_group",
        "name": "BOINC",
        "tab": "40011901.675e7",
        "order": 3,
        "disp": false,
        "width": "8",
        "collapse": false
    },
    {
        "id": "5c04c4.b7b0db3c",
        "type": "ui_tab",
        "name": "SolarServer Settings",
        "icon": "flash_on",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "380915c3.9fa502",
        "type": "ui_group",
        "name": "Soffitta",
        "tab": "e0a100eb.d7d428",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "e264142d.421a28",
        "type": "nora-config",
        "name": "NoRA",
        "group": "RasHome",
        "notify": true
    },
    {
        "id": "8bd919e9.e2a43",
        "type": "ui_tab",
        "name": "Energy",
        "icon": "flash_on",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "9c73e713.f5be88",
        "type": "ui_group",
        "name": "Dettagli casa",
        "tab": "8bd919e9.e2a43",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "55d9349.0dc764c",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#d73b19",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#4B7930",
                    "value": "#d73b19",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#d73b19",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#ffaa00",
                    "edited": true
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#d73b19",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Welcome to RasHome!!",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "e0a100eb.d7d428",
        "type": "ui_tab",
        "name": "Sinottico",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "75c39fed.9491e8",
        "type": "ui_group",
        "name": "Cortile",
        "tab": "e0a100eb.d7d428",
        "order": 2,
        "disp": true,
        "width": "9",
        "collapse": false
    },
    {
        "id": "dbaa4cb.73b42b",
        "type": "ui_spacer",
        "name": "spacer",
        "group": null,
        "order": 6,
        "width": 3,
        "height": 1
    },
    {
        "id": "a035d1b6.6b2bc8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": null,
        "order": 9,
        "width": 3,
        "height": 1
    },
    {
        "id": "e72636c8.15cc7",
        "type": "ui_group",
        "name": "Dettagli Inverter",
        "tab": "8bd919e9.e2a43",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "1a572bc4.5062c4",
        "type": "ui_group",
        "name": "Inverter",
        "tab": "5c04c4.b7b0db3c",
        "order": 1,
        "disp": true,
        "width": 9,
        "collapse": false
    },
    {
        "id": "99f13696.ef7c58",
        "type": "ui_group",
        "name": "Camera",
        "tab": "e0a100eb.d7d428",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "5aaf39ff.58f93",
        "type": "ui_group",
        "name": "Dettagli Nissan",
        "tab": "8bd919e9.e2a43",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "2616b179.49ac16",
        "type": "ui_group",
        "name": "Contatori",
        "tab": "5058ca3b.b22614",
        "order": 1,
        "disp": true,
        "width": "9",
        "collapse": false
    },
    {
        "id": "ccefbe43.f1aaf8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "d59a5488.4bc118",
        "order": 7,
        "width": 3,
        "height": 1
    },
    {
        "id": "62af3713.e307c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "d59a5488.4bc118",
        "order": 10,
        "width": 3,
        "height": 1
    },
    {
        "id": "b6d3e9ed.dc66e8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "7b6ab9d.5f695c8",
        "order": 7,
        "width": 3,
        "height": 1
    },
    {
        "id": "dc9eaab7.eb2018",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "7b6ab9d.5f695c8",
        "order": 10,
        "width": 3,
        "height": 1
    },
    {
        "id": "18c74c47.61d2bc",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "380915c3.9fa502",
        "order": 4,
        "width": 3,
        "height": 1
    },
    {
        "id": "9ffb6b8f.79fdc",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "380915c3.9fa502",
        "order": 5,
        "width": 3,
        "height": 1
    },
    {
        "id": "a512766f.fcff9",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "380915c3.9fa502",
        "order": 8,
        "width": 3,
        "height": 1
    },
    {
        "id": "be71b7e5.5f1518",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "380915c3.9fa502",
        "order": 11,
        "width": 3,
        "height": 1
    },
    {
        "id": "5058ca3b.b22614",
        "type": "ui_tab",
        "name": "Leaf",
        "icon": "directions_car",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "81745724.cb54f8",
        "type": "ui_group",
        "name": "Energia",
        "tab": "5058ca3b.b22614",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "4f75689c.e4dd2",
        "type": "ui_group",
        "name": "Ricarica",
        "tab": "5058ca3b.b22614",
        "order": 2,
        "disp": true,
        "width": "5",
        "collapse": false
    },
    {
        "id": "589d4e9f.f50178",
        "type": "ui_group",
        "name": "RCE",
        "tab": "40011901.675e7",
        "order": 3,
        "disp": true,
        "width": "17",
        "collapse": false
    },
    {
        "id": "58065d19.b74584",
        "type": "ui_group",
        "name": "Energy",
        "tab": "e0a100eb.d7d428",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "c4e585d7.106718",
        "type": "telegrambot-config",
        "botname": "@RasAlice_bot",
        "usernames": "arduinCodder",
        "chatIds": "",
        "pollInterval": "300"
    },
    {
        "id": "2d75dba2.a41bd4",
        "type": "ui_tab",
        "name": "Luci",
        "icon": "lightbulb_outline",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "261dd92c.ffff5e",
        "type": "ui_group",
        "name": "Piano Terra",
        "tab": "2d75dba2.a41bd4",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "7c9364c.4aa5a1c",
        "type": "ui_group",
        "name": "Primo Piano",
        "tab": "2d75dba2.a41bd4",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "f07457d0.8f2ba8",
        "type": "ui_group",
        "name": "Esterno",
        "tab": "2d75dba2.a41bd4",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "c66d2e37.c9d248",
        "type": "ui_group",
        "name": "Soffitta",
        "tab": "2d75dba2.a41bd4",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "5d0ef44d.6ae5c4",
        "type": "openhab2-controller",
        "name": "OpenHAB",
        "protocol": "http",
        "host": "192.168.0.67",
        "port": "8080",
        "path": "",
        "username": "",
        "password": ""
    },
    {
        "id": "95c76cc2.f1041",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.8-flux",
        "url": "http://localhost:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "dc4f7c3c.a32ee8",
        "type": "ui_gauge",
        "z": "46a757ab.7b1178",
        "name": "Temperatura Sala",
        "group": "d59a5488.4bc118",
        "order": 2,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "Temperatura",
        "label": "°C",
        "format": "{{msg.payload.temperature}}",
        "min": "0",
        "max": "40",
        "colors": [
            "#0044b5",
            "#f1ff00",
            "#ca3838"
        ],
        "seg1": "18",
        "seg2": "25",
        "x": 1170,
        "y": 80,
        "wires": []
    },
    {
        "id": "33ec2d9b.4eb6ba",
        "type": "ui_gauge",
        "z": "46a757ab.7b1178",
        "name": "Umidità Sala",
        "group": "d59a5488.4bc118",
        "order": 3,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "Umidità",
        "label": "%",
        "format": "{{msg.payload.humidity}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "45",
        "seg2": "70",
        "x": 1150,
        "y": 200,
        "wires": []
    },
    {
        "id": "b86fc693.a4c28",
        "type": "ui_gauge",
        "z": "f2a638ae.d93ca8",
        "name": "Temperatura",
        "group": "7b6ab9d.5f695c8",
        "order": 2,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "Temperatura",
        "label": "°C",
        "format": "{{msg.payload.temperature}}",
        "min": "0",
        "max": "50",
        "colors": [
            "#0e00ff",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "18",
        "seg2": "25",
        "x": 1170,
        "y": 60,
        "wires": []
    },
    {
        "id": "34719d4b.3b25ca",
        "type": "ui_gauge",
        "z": "f2a638ae.d93ca8",
        "name": "Umidità",
        "group": "7b6ab9d.5f695c8",
        "order": 3,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "Umidità",
        "label": "%",
        "format": "{{msg.payload.humidity}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "45",
        "seg2": "70",
        "x": 1160,
        "y": 180,
        "wires": []
    },
    {
        "id": "c8499c06.65b2e8",
        "type": "inject",
        "z": "92f9eb20.694dc8",
        "name": "True gen",
        "repeat": "30",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 111,
        "y": 80,
        "wires": [
            [
                "288e7189.789a16",
                "5a28f4f6.64f02c",
                "ff657ca1.3f7e58",
                "7bd52e67.43b7d8",
                "9e1f27a1.2bc25",
                "f073e3a1.85ed68",
                "22ef1a64.a245c6",
                "a000d85f.53e768",
                "4e1c445c.04d264",
                "df286d43.e26208",
                "c8a17bd0.248508",
                "3dce0314.77bf44",
                "a4e94ad7.965628",
                "c4b55fb5.172c58",
                "88356ddb.d49cc8",
                "5b2e0606.aa7ae",
                "ea69fe72.eed0c8",
                "896553b9.978dc8"
            ]
        ]
    },
    {
        "id": "5cc5f125.f16958",
        "type": "mqtt in",
        "z": "46a757ab.7b1178",
        "name": "",
        "topic": "tele/tasmotaSala/SENSOR",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "dff40ef.b2f077"
            ]
        ]
    },
    {
        "id": "97249a85.2b617",
        "type": "function",
        "z": "92f9eb20.694dc8",
        "name": "Online status",
        "func": "if (msg.payload >= 1.0){\n    msg.payload = \"ON\";\n}\nelse{\n    msg.payload = \"OFF\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 780,
        "wires": [
            [
                "c5f08f2a.abde18"
            ]
        ]
    },
    {
        "id": "ea89634c.b66e4",
        "type": "ui_text",
        "z": "46a757ab.7b1178",
        "group": "d59a5488.4bc118",
        "order": 5,
        "width": 3,
        "height": 1,
        "name": "TMAX",
        "label": "Massima: ",
        "format": "{{msg.payload.salaMaxTemp}} °C",
        "layout": "row-center",
        "x": 1130,
        "y": 120,
        "wires": []
    },
    {
        "id": "942c5b80.3baf6",
        "type": "ui_text",
        "z": "46a757ab.7b1178",
        "group": "d59a5488.4bc118",
        "order": 9,
        "width": 3,
        "height": 1,
        "name": "TMIN",
        "label": "Minima",
        "format": "{{msg.payload.salaMinTemp}} °C",
        "layout": "row-center",
        "x": 1130,
        "y": 160,
        "wires": []
    },
    {
        "id": "cfcc574.2335228",
        "type": "ui_text",
        "z": "46a757ab.7b1178",
        "group": "d59a5488.4bc118",
        "order": 6,
        "width": 3,
        "height": 1,
        "name": "H MAX",
        "label": "Massimo: ",
        "format": "{{msg.payload.salaMaxUmid}} %",
        "layout": "row-center",
        "x": 1140,
        "y": 240,
        "wires": []
    },
    {
        "id": "b92922cc.0eb408",
        "type": "ui_text",
        "z": "46a757ab.7b1178",
        "group": "d59a5488.4bc118",
        "order": 8,
        "width": 3,
        "height": 1,
        "name": "H MIN",
        "label": "Minimo: ",
        "format": "{{msg.payload.salaMinUmid}} %",
        "layout": "row-center",
        "x": 1130,
        "y": 280,
        "wires": []
    },
    {
        "id": "6f1ed545.66985c",
        "type": "telegrambot-command",
        "z": "46a757ab.7b1178",
        "name": "",
        "bot": "c4e585d7.106718",
        "command": "/sala",
        "commandType": "str",
        "commandCase": false,
        "x": 150,
        "y": 460,
        "wires": [
            [
                "3b162268.7b5756"
            ]
        ]
    },
    {
        "id": "30c007ff.89edb",
        "type": "telegrambot-command",
        "z": "f2a638ae.d93ca8",
        "name": "",
        "bot": "c4e585d7.106718",
        "command": "/server",
        "commandType": "str",
        "commandCase": false,
        "x": 150,
        "y": 480,
        "wires": [
            [
                "4f849b1e.7fd8c4"
            ]
        ]
    },
    {
        "id": "1ccfd3f9.01f59c",
        "type": "ui_text",
        "z": "f2a638ae.d93ca8",
        "group": "7b6ab9d.5f695c8",
        "order": 5,
        "width": 3,
        "height": 1,
        "name": "TMAX",
        "label": "Massima: ",
        "format": "{{msg.payload.serverMaxTemp}} °C",
        "layout": "row-center",
        "x": 1150,
        "y": 100,
        "wires": []
    },
    {
        "id": "ebf5bd04.0b50d",
        "type": "ui_text",
        "z": "f2a638ae.d93ca8",
        "group": "7b6ab9d.5f695c8",
        "order": 8,
        "width": 3,
        "height": 1,
        "name": "TMIN",
        "label": "Minima",
        "format": "{{msg.payload.serverMinTemp}} °C",
        "layout": "row-center",
        "x": 1150,
        "y": 140,
        "wires": []
    },
    {
        "id": "ccbb4d36.3075f8",
        "type": "ui_text",
        "z": "f2a638ae.d93ca8",
        "group": "7b6ab9d.5f695c8",
        "order": 6,
        "width": 3,
        "height": 1,
        "name": "H MAX",
        "label": "Massimo: ",
        "format": "{{msg.payload.serverMaxUmid}} %",
        "layout": "row-center",
        "x": 1160,
        "y": 220,
        "wires": []
    },
    {
        "id": "5df712ed.890dcc",
        "type": "ui_text",
        "z": "f2a638ae.d93ca8",
        "group": "7b6ab9d.5f695c8",
        "order": 9,
        "width": 3,
        "height": 1,
        "name": "H MIN",
        "label": "Minimo: ",
        "format": "{{msg.payload.serverMinUmid}} %",
        "layout": "row-center",
        "x": 1150,
        "y": 260,
        "wires": []
    },
    {
        "id": "3b162268.7b5756",
        "type": "function",
        "z": "46a757ab.7b1178",
        "name": "Invio misure",
        "func": "var sala_temp=flow.get('sala_temp') || 0;\nvar sala_max_temp=flow.get('sala_max_temp') || 0;\nvar sala_min_temp=flow.get('sala_min_temp') || 50;\nvar sala_umid=flow.get('sala_umid') || 0;\nvar sala_max_umid=flow.get('sala_max_umid') || 0;\nvar sala_min_umid=flow.get('sala_min_umid') || 100;\nvar sala_lum=flow.get('sala_lum') || 0;\n\nvar currentdate = new Date();\nvar datetime = currentdate.getDate() + \"/\" + (currentdate.getMonth()+1) + \"/\" + currentdate.getFullYear() + \" - \" + currentdate.getHours() + \":\" +currentdate.getMinutes() + \":\" + currentdate.getSeconds();\n\nmsg.payload = datetime + '\\nDati Soggiorno:\\nTemperatura: ' + sala_temp + ' °C\\nTemperatura massima: ' + sala_max_temp + ' °C\\nTemperatura minima: ' + sala_min_temp + ' °C\\n\\nUmidità: ' + sala_umid + ' %\\nUmidità massima: ' + sala_max_umid + ' %\\nUmidità minima: ' + sala_min_umid + ' %\\n\\nLuminosità: ' + sala_lum + \" %\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 460,
        "wires": [
            [
                "53674d83.1f4c1c"
            ]
        ]
    },
    {
        "id": "4f849b1e.7fd8c4",
        "type": "function",
        "z": "f2a638ae.d93ca8",
        "name": "Invio misure",
        "func": "var server_temp=flow.get('server_temp') || 0;\nvar server_max_temp=flow.get('server_max_temp') || 0;\nvar server_min_temp=flow.get('server_min_temp') || 50;\nvar server_umid=flow.get('server_umid') || 0;\nvar server_max_umid=flow.get('server_max_umid') || 0;\nvar server_min_umid=flow.get('server_min_umid') || 100;\n\nvar currentdate = new Date();\nvar datetime = currentdate.getDate() + \"/\" + (currentdate.getMonth()+1) + \"/\" + currentdate.getFullYear() + \" - \" + currentdate.getHours() + \":\" +currentdate.getMinutes() + \":\" + currentdate.getSeconds();\n\n\nmsg.payload = datetime + '\\nDati Sala Server:\\nTemperatura: ' + server_temp + ' °C\\nTemperatura massima: ' + server_max_temp + ' °C\\nTemperatura minima: ' + server_min_temp + ' °C\\n\\nUmidità: ' + server_umid + ' %\\nUmidità massima: ' + server_max_umid + ' %\\nUmidità minima: ' + server_min_umid + ' %';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 480,
        "wires": [
            [
                "26be3679.563eb2"
            ]
        ]
    },
    {
        "id": "df546b72.466de8",
        "type": "function",
        "z": "92f9eb20.694dc8",
        "name": "Messaggio su variazione stato NodeMCU Esterno",
        "func": "var online_status=flow.get('online_status') || false;\n\nmsgOffline = \"Conessione con NodeMCU esterno persa\";\nmsgOnline = \"Connessione con NodeMCU esterno OK\"\n\n//Genero la stringa della data\nvar currentdate = new Date();\nvar datetime = currentdate.getDate() + \"/\" + (currentdate.getMonth()+1) + \"/\" + currentdate.getFullYear() + \" - \" + currentdate.getHours() + \":\" +currentdate.getMinutes() + \":\" + currentdate.getSeconds();\n\n\nif ((msg.payload >= 1.0) && !online_status){\n    flow.set('online_status',true);\n    msg.payload = datetime + \"\\n\" + msgOnline;\n    return msg;\n}\nelse if ((msg.payload < 1.0) && online_status){\n    flow.set('online_status',false);\n    msg.payload = datetime + \"\\n\" + msgOffline;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1010,
        "y": 280,
        "wires": [
            [
                "2b6e3d7.b9997c2"
            ]
        ]
    },
    {
        "id": "2b6e3d7.b9997c2",
        "type": "telegrambot-notify",
        "z": "92f9eb20.694dc8",
        "name": "",
        "bot": "c4e585d7.106718",
        "chatId": "282556504",
        "message": "",
        "parseMode": "",
        "x": 1320,
        "y": 280,
        "wires": []
    },
    {
        "id": "6b600d6b.7af62c",
        "type": "comment",
        "z": "46a757ab.7b1178",
        "name": "Comandi Telegram",
        "info": "",
        "x": 330,
        "y": 380,
        "wires": []
    },
    {
        "id": "9e7fd26e.397548",
        "type": "comment",
        "z": "f2a638ae.d93ca8",
        "name": "Telegram commands",
        "info": "",
        "x": 150,
        "y": 400,
        "wires": []
    },
    {
        "id": "eb47cbda.0383f",
        "type": "comment",
        "z": "92f9eb20.694dc8",
        "name": "Sequenza di ping per monitor stato dispositivi",
        "info": "",
        "x": 210,
        "y": 40,
        "wires": []
    },
    {
        "id": "7c234a4.1f1f534",
        "type": "inject",
        "z": "d4fae0b8.1d7718",
        "name": "",
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 130,
        "y": 80,
        "wires": [
            [
                "cc813a9b.7cfe9"
            ]
        ]
    },
    {
        "id": "50da37d3.adf338",
        "type": "change",
        "z": "d4fae0b8.1d7718",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.cpus[0].speed",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 140,
        "wires": [
            [
                "6e84f21c.821cc4"
            ]
        ]
    },
    {
        "id": "98b432d9.62b5",
        "type": "change",
        "z": "d4fae0b8.1d7718",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.memusage",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 220,
        "wires": [
            [
                "81d27fde.3a0dd8"
            ]
        ]
    },
    {
        "id": "71da91cb.d05d88",
        "type": "CPUs",
        "z": "d4fae0b8.1d7718",
        "name": "",
        "x": 370,
        "y": 140,
        "wires": [
            [
                "50da37d3.adf338",
                "ff7a348.c8c4a48"
            ]
        ]
    },
    {
        "id": "4c7d06fd.580db",
        "type": "Memory",
        "z": "d4fae0b8.1d7718",
        "name": "",
        "x": 380,
        "y": 220,
        "wires": [
            [
                "98b432d9.62b5"
            ]
        ]
    },
    {
        "id": "335e28e.9781bd8",
        "type": "ui_template",
        "z": "d4fae0b8.1d7718",
        "group": "85ed0880.30aee8",
        "name": "BOINC widget",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<iframe src=\"https://www.worldcommunitygrid.org/getDynamicImage.do?memberName=AnXel&mnOn=true&stat=3&imageNum=2&rankOn=true&projectsOn=false&special=true&link=2&memberId=528518\" frameborder=\"0\" name=\"di\" scrolling=\"no\" width=\"405px\" height=\"145px\"></iframe>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 320,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "3665377a.8f2028",
        "type": "inject",
        "z": "d4fae0b8.1d7718",
        "name": "Inject once a day",
        "props": [
            {
                "p": "payload",
                "v": "true",
                "vt": "bool"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "86400",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 130,
        "y": 1220,
        "wires": [
            [
                "335e28e.9781bd8"
            ]
        ]
    },
    {
        "id": "79e74f12.c7f1a",
        "type": "Drives",
        "z": "d4fae0b8.1d7718",
        "name": "",
        "x": 370,
        "y": 260,
        "wires": [
            [
                "83bb63bd.9572f"
            ]
        ]
    },
    {
        "id": "83bb63bd.9572f",
        "type": "function",
        "z": "d4fae0b8.1d7718",
        "name": "",
        "func": "var size = msg.payload[0].size;\nvar used = msg.payload[0].used\nvar percentFreeSpace = used/size*100;\nmsg.payload = percentFreeSpace.toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 260,
        "wires": [
            [
                "a30a1fcc.02143"
            ]
        ]
    },
    {
        "id": "56cb5d4e.918f54",
        "type": "comment",
        "z": "d4fae0b8.1d7718",
        "name": "Dati da RasHome",
        "info": "Dati dal sistema operativo",
        "x": 120,
        "y": 40,
        "wires": []
    },
    {
        "id": "3243c731.c388f",
        "type": "comment",
        "z": "d4fae0b8.1d7718",
        "name": "BOINC",
        "info": "",
        "x": 90,
        "y": 1180,
        "wires": []
    },
    {
        "id": "34be0c2e.d43184",
        "type": "trigger",
        "z": "92f9eb20.694dc8",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "4",
        "extend": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "outputs": 1,
        "x": 690,
        "y": 300,
        "wires": [
            [
                "df546b72.466de8"
            ]
        ]
    },
    {
        "id": "4be03a14.4f196c",
        "type": "function",
        "z": "92f9eb20.694dc8",
        "name": "Reset control",
        "func": "var msg2={reset:true}; \n\nif (msg.payload < 1.0){\n    msg2.payload = msg.payload;\n    msg2={reset:false}; \n    return msg2;\n}\nelse{\n    //Invio il ping e il reset\n    return [msg, msg2];\n}",
        "outputs": 2,
        "noerr": 0,
        "x": 510,
        "y": 280,
        "wires": [
            [
                "df546b72.466de8"
            ],
            [
                "34be0c2e.d43184"
            ]
        ]
    },
    {
        "id": "2bef84e4.ab392c",
        "type": "mqtt in",
        "z": "7aa2da03.bd1f7c",
        "name": "",
        "topic": "tele/tasmotaSoffitta/SENSOR",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 160,
        "y": 80,
        "wires": [
            [
                "7664a21e.1ebaa4"
            ]
        ]
    },
    {
        "id": "a8506574.bd489",
        "type": "ui_gauge",
        "z": "7aa2da03.bd1f7c",
        "name": "Umidità",
        "group": "380915c3.9fa502",
        "order": 3,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "Umidità",
        "label": "%",
        "format": "{{msg.payload.humidity}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "70",
        "seg2": "80",
        "x": 1100,
        "y": 200,
        "wires": []
    },
    {
        "id": "ec0f0470.d8fca",
        "type": "ui_gauge",
        "z": "7aa2da03.bd1f7c",
        "name": "Temperatura",
        "group": "380915c3.9fa502",
        "order": 2,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "Temperatura",
        "label": "°C",
        "format": "{{msg.payload.temperature}}",
        "min": "0",
        "max": "50",
        "colors": [
            "#1100b5",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "18",
        "seg2": "25",
        "x": 1110,
        "y": 80,
        "wires": []
    },
    {
        "id": "6def4508.452984",
        "type": "function",
        "z": "7aa2da03.bd1f7c",
        "name": "Esporta dati temperatura",
        "func": "var soffittaTempVal=flow.get('soffitta_temp') || 0;\nvar soffittaMaxTempVal=flow.get('soffitta_max_temp') || 0;\nvar soffittaMinTempVal=flow.get('soffitta_min_temp') || 50;\n\nsoffittaTempVal = msg.payload.temperature;\n\nif (soffittaTempVal<soffittaMinTempVal){\n    soffittaMinTempVal = soffittaTempVal;\n}\n\nif (soffittaTempVal>soffittaMaxTempVal){\n    soffittaMaxTempVal = soffittaTempVal;\n}\n\nflow.set('soffitta_temp', soffittaTempVal);\nflow.set('soffitta_max_temp', soffittaMaxTempVal);\nflow.set('soffitta_min_temp', soffittaMinTempVal);\n\nmsg.payload = {\n    temperature : soffittaTempVal,\n    soffittaMaxTemp : soffittaMaxTempVal,\n    soffittaMinTemp : soffittaMinTempVal\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 810,
        "y": 80,
        "wires": [
            [
                "ec0f0470.d8fca",
                "2b66214b.07064e",
                "3b448349.c5d56c"
            ]
        ]
    },
    {
        "id": "2b66214b.07064e",
        "type": "ui_text",
        "z": "7aa2da03.bd1f7c",
        "group": "380915c3.9fa502",
        "order": 6,
        "width": 3,
        "height": 1,
        "name": "TMAX",
        "label": "Massima: ",
        "format": "{{msg.payload.soffittaMaxTemp}} °C",
        "layout": "row-center",
        "x": 1090,
        "y": 120,
        "wires": []
    },
    {
        "id": "3b448349.c5d56c",
        "type": "ui_text",
        "z": "7aa2da03.bd1f7c",
        "group": "380915c3.9fa502",
        "order": 9,
        "width": 3,
        "height": 1,
        "name": "TMIN",
        "label": "Minima",
        "format": "{{msg.payload.soffittaMinTemp}} °C",
        "layout": "row-center",
        "x": 1090,
        "y": 160,
        "wires": []
    },
    {
        "id": "6ec20f74.848178",
        "type": "function",
        "z": "7aa2da03.bd1f7c",
        "name": "Esporta dati umidità",
        "func": "var soffittaUmidVal=flow.get('soffitta_umid') || 0;\nvar soffittaMaxUmidVal=flow.get('soffitta_max_umid') || 0;\nvar soffittaMinUmidVal=flow.get('soffitta_min_umid') || 50;\n\nsoffittaUmidVal = msg.payload.humidity;\n\nif (soffittaUmidVal<soffittaMinUmidVal){\n    soffittaMinUmidVal = soffittaUmidVal;\n}\n\nif (soffittaUmidVal>soffittaMaxUmidVal){\n    soffittaMaxUmidVal = soffittaUmidVal;\n}\n\nflow.set('soffitta_umid', soffittaUmidVal);\nflow.set('soffitta_max_umid', soffittaMaxUmidVal);\nflow.set('soffitta_min_umid', soffittaMinUmidVal);\n\nmsg.payload = {\n    humidity : soffittaUmidVal,\n    soffittaMaxTemp : soffittaMaxUmidVal,\n    soffittaMinTemp : soffittaMinUmidVal\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 800,
        "y": 200,
        "wires": [
            [
                "d86cefd8.601af8",
                "1dd16f81.41df2",
                "a8506574.bd489"
            ]
        ]
    },
    {
        "id": "d86cefd8.601af8",
        "type": "ui_text",
        "z": "7aa2da03.bd1f7c",
        "group": "380915c3.9fa502",
        "order": 7,
        "width": 3,
        "height": 1,
        "name": "H MAX",
        "label": "Massimo: ",
        "format": "{{msg.payload.soffittaMaxTemp}} %",
        "layout": "row-center",
        "x": 1100,
        "y": 240,
        "wires": []
    },
    {
        "id": "1dd16f81.41df2",
        "type": "ui_text",
        "z": "7aa2da03.bd1f7c",
        "group": "380915c3.9fa502",
        "order": 10,
        "width": 3,
        "height": 1,
        "name": "H MIN",
        "label": "Minimo: ",
        "format": "{{msg.payload.soffittaMinTemp}} %",
        "layout": "row-center",
        "x": 1090,
        "y": 280,
        "wires": []
    },
    {
        "id": "5b97b057.bb532",
        "type": "ui_gauge",
        "z": "46a757ab.7b1178",
        "name": "Luminosità Sala",
        "group": "d59a5488.4bc118",
        "order": 4,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "Luminosità",
        "label": "%",
        "format": "{{msg.payload.luminosity}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1160,
        "y": 320,
        "wires": []
    },
    {
        "id": "fb8b0604.90802",
        "type": "delay",
        "z": "46a757ab.7b1178",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 480,
        "y": 420,
        "wires": [
            [
                "5f3deaad.0d26e4"
            ]
        ]
    },
    {
        "id": "6aee73a9.89d104",
        "type": "ui_gauge",
        "z": "f2a638ae.d93ca8",
        "name": "Luminosità Server Room",
        "group": "7b6ab9d.5f695c8",
        "order": 4,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "Luminosità",
        "label": "%",
        "format": "{{msg.payload.luminosity}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1210,
        "y": 300,
        "wires": []
    },
    {
        "id": "6fe9c13a.3298a",
        "type": "function",
        "z": "f2a638ae.d93ca8",
        "name": "Esporta dati luminosità",
        "func": "flow.set('serverroom_lum', msg.payload.luminosity);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 860,
        "y": 300,
        "wires": [
            [
                "6aee73a9.89d104"
            ]
        ]
    },
    {
        "id": "11370f98.37ce7",
        "type": "ui_button",
        "z": "295673c6.e0b2c4",
        "name": "Pulsante switch interruttore",
        "group": "f07457d0.8f2ba8",
        "order": 1,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Luce Cortile",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "power_settings_new",
        "payload": "2",
        "payloadType": "num",
        "topic": "",
        "x": 640,
        "y": 60,
        "wires": [
            [
                "e3379432.55aa98"
            ]
        ],
        "outputLabels": [
            "msg.background"
        ]
    },
    {
        "id": "42fd84af.c6d0f4",
        "type": "mqtt in",
        "z": "295673c6.e0b2c4",
        "name": "",
        "topic": "stat/tasmotaLuceCortile/POWER",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 170,
        "y": 80,
        "wires": [
            [
                "fdb0eb90.7d5728",
                "75c509dc.2bb598"
            ]
        ]
    },
    {
        "id": "e3379432.55aa98",
        "type": "mqtt out",
        "z": "295673c6.e0b2c4",
        "name": "",
        "topic": "cmnd/tasmotaLuceCortile/POWER",
        "qos": "",
        "retain": "",
        "broker": "ee95ae30.7fefe8",
        "x": 1060,
        "y": 60,
        "wires": []
    },
    {
        "id": "669c92f.9cdd66c",
        "type": "nora-light",
        "z": "295673c6.e0b2c4",
        "devicename": "Luce Cortile",
        "lightcolor": false,
        "brightnesscontrol": false,
        "turnonwhenbrightnesschanges": true,
        "passthru": false,
        "statepayload": true,
        "brightnessoverride": "",
        "roomhint": "Cortile",
        "name": "Luce Cortile",
        "nora": "e264142d.421a28",
        "topic": "",
        "onvalue": "1",
        "onvalueType": "num",
        "offvalue": "0",
        "offvalueType": "num",
        "x": 710,
        "y": 100,
        "wires": [
            [
                "e3379432.55aa98"
            ]
        ]
    },
    {
        "id": "fdb0eb90.7d5728",
        "type": "function",
        "z": "295673c6.e0b2c4",
        "name": "mode",
        "func": "if(msg.payload === \"ON\"){\n    msg.payload = true;\n}\nelse if(msg.payload === \"OFF\"){\n    msg.payload = false;\n}\n\nmsg.payload = \"{\\\"on\\\":\" + msg.payload + \"}\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 100,
        "wires": [
            [
                "40d6cffa.368a1"
            ]
        ]
    },
    {
        "id": "5f3deaad.0d26e4",
        "type": "function",
        "z": "46a757ab.7b1178",
        "name": "Reset statistiche",
        "func": "var sala_max_temp=flow.get('sala_max_temp') || 0;\nvar sala_min_temp=flow.get('sala_min_temp') || 50;\nvar sala_max_umid=flow.get('sala_max_umid') || 0;\nvar sala_min_umid=flow.get('sala_min_umid') || 100;\n\nflow.set('sala_error_count', 0);\nflow.set('sala_max_temp', 0);\nflow.set('sala_min_temp', 50);\nflow.set('sala_max_umid', 0);\nflow.set('sala_min_umid', 100);\n\nreturn;",
        "outputs": 0,
        "noerr": 0,
        "x": 700,
        "y": 420,
        "wires": []
    },
    {
        "id": "5a316a4d.6aca64",
        "type": "influxdb out",
        "z": "46a757ab.7b1178",
        "influxdb": "95c76cc2.f1041",
        "name": "Home database",
        "measurement": "livingRoom",
        "precision": "",
        "retentionPolicy": "",
        "database": "Home",
        "retentionPolicyV18Flux": "",
        "org": "",
        "bucket": "",
        "x": 780,
        "y": 360,
        "wires": []
    },
    {
        "id": "951d377e.4b4cc8",
        "type": "influxdb out",
        "z": "f2a638ae.d93ca8",
        "influxdb": "95c76cc2.f1041",
        "name": "",
        "measurement": "serverRoom",
        "precision": "",
        "retentionPolicy": "",
        "database": "Home",
        "retentionPolicyV18Flux": "",
        "org": "",
        "bucket": "",
        "x": 930,
        "y": 340,
        "wires": []
    },
    {
        "id": "3601ba50.462c1e",
        "type": "telegrambot-command",
        "z": "7aa2da03.bd1f7c",
        "name": "",
        "bot": "c4e585d7.106718",
        "command": "/soffitta",
        "commandType": "str",
        "commandCase": false,
        "x": 130,
        "y": 400,
        "wires": [
            [
                "dfe81aa5.e12ac"
            ]
        ]
    },
    {
        "id": "dfe81aa5.e12ac",
        "type": "function",
        "z": "7aa2da03.bd1f7c",
        "name": "Invio misure",
        "func": "var soffitta_temp=flow.get('soffitta_temp') || 0;\nvar soffitta_max_temp=flow.get('soffitta_max_temp') || 0;\nvar soffitta_min_temp=flow.get('soffitta_min_temp') || 50;\nvar soffitta_umid=flow.get('soffitta_umid') || 0;\nvar soffitta_max_umid=flow.get('soffitta_max_umid') || 0;\nvar soffitta_min_umid=flow.get('soffitta_min_umid') || 100;\n\nvar currentdate = new Date();\nvar datetime = currentdate.getDate() + \"/\" + (currentdate.getMonth()+1) + \"/\" + currentdate.getFullYear() + \" - \" + currentdate.getHours() + \":\" +currentdate.getMinutes() + \":\" + currentdate.getSeconds();\n\nmsg.payload = datetime + \"\\nDati Soffitta:\\nTemperatura: \" + soffitta_temp + \" °C\\nTemperatura massima: \" + soffitta_max_temp + \" °C\\nTemperatura minima: \" + soffitta_min_temp + \" °C\\n\\nUmidità: \" + soffitta_umid +  \"%\\nUmidità massima: \" + soffitta_max_umid + \"%\\nUmidità minima: \" + soffitta_min_umid + \" %\\n\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 400,
        "wires": [
            [
                "b210359e.e80878"
            ]
        ]
    },
    {
        "id": "c1a9f882.57e2e8",
        "type": "comment",
        "z": "7aa2da03.bd1f7c",
        "name": "Comandi Telegram",
        "info": "",
        "x": 130,
        "y": 360,
        "wires": []
    },
    {
        "id": "34e3c111.c09e76",
        "type": "delay",
        "z": "f2a638ae.d93ca8",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 480,
        "y": 440,
        "wires": [
            [
                "b30ce80a.ecfea"
            ]
        ]
    },
    {
        "id": "b30ce80a.ecfea",
        "type": "function",
        "z": "f2a638ae.d93ca8",
        "name": "Reset statistiche",
        "func": "var server_max_temp=flow.get('server_max_temp') || 0;\nvar server_min_temp=flow.get('server_min_temp') || 50;\nvar server_max_umid=flow.get('server_max_umid') || 0;\nvar server_min_umid=flow.get('server_min_umid') || 100;\n\nflow.set('server_error_count', 0);\nflow.set('server_max_temp', 0);\nflow.set('server_min_temp', 50);\nflow.set('server_max_umid', 0);\nflow.set('server_min_umid', 100);\n\nreturn;",
        "outputs": 0,
        "noerr": 0,
        "x": 720,
        "y": 440,
        "wires": []
    },
    {
        "id": "f538af4b.322e68",
        "type": "mqtt out",
        "z": "f6bd4cff.b20c7",
        "name": "",
        "topic": "cmnd/tasmotaContatore/STATUS",
        "qos": "0",
        "retain": "false",
        "broker": "ee95ae30.7fefe8",
        "x": 700,
        "y": 680,
        "wires": []
    },
    {
        "id": "3725c2fa.5176fe",
        "type": "json",
        "z": "f6bd4cff.b20c7",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 390,
        "y": 220,
        "wires": [
            [
                "cb300288.3b174"
            ]
        ]
    },
    {
        "id": "af8bbf22.78ba8",
        "type": "mqtt in",
        "z": "f6bd4cff.b20c7",
        "name": "",
        "topic": "tele/tasmotaContatore/SENSOR",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 170,
        "y": 240,
        "wires": [
            [
                "3725c2fa.5176fe"
            ]
        ]
    },
    {
        "id": "fd8be8fe.4436d8",
        "type": "ui_button",
        "z": "f6bd4cff.b20c7",
        "name": "Manual refresh",
        "group": "9c73e713.f5be88",
        "order": 13,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Refresh",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "8",
        "payloadType": "str",
        "topic": "",
        "x": 440,
        "y": 680,
        "wires": [
            [
                "f538af4b.322e68"
            ]
        ]
    },
    {
        "id": "9e2a3d75.456a8",
        "type": "ui_text",
        "z": "f6bd4cff.b20c7",
        "group": "9c73e713.f5be88",
        "order": 10,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Energia totale",
        "format": "{{msg.payload.totalEnergy.toFixed(2)}} kWh",
        "layout": "row-spread",
        "x": 1740,
        "y": 440,
        "wires": []
    },
    {
        "id": "1c6babc4.b03b5c",
        "type": "ui_text",
        "z": "f6bd4cff.b20c7",
        "group": "9c73e713.f5be88",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Potenza apparente",
        "format": "{{msg.payload.apparentPower}} VA",
        "layout": "row-spread",
        "x": 1050,
        "y": 320,
        "wires": []
    },
    {
        "id": "b5e21944.5245",
        "type": "ui_text",
        "z": "f6bd4cff.b20c7",
        "group": "9c73e713.f5be88",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Potenza reattiva",
        "format": "{{msg.payload.reactivePower}} VAr",
        "layout": "row-spread",
        "x": 1040,
        "y": 280,
        "wires": []
    },
    {
        "id": "ba99394a.c7c87",
        "type": "ui_text",
        "z": "f6bd4cff.b20c7",
        "group": "9c73e713.f5be88",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Cos fi",
        "format": "{{msg.payload.factor}}",
        "layout": "row-spread",
        "x": 1010,
        "y": 360,
        "wires": []
    },
    {
        "id": "e4121ccc.4f7ce8",
        "type": "ui_gauge",
        "z": "f6bd4cff.b20c7",
        "name": "Potenza",
        "group": "9c73e713.f5be88",
        "order": 1,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "Potenza",
        "label": "W",
        "format": "{{msg.payload}}",
        "min": "0",
        "max": "3300",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "13",
        "seg2": "14",
        "x": 1220,
        "y": 200,
        "wires": []
    },
    {
        "id": "cb300288.3b174",
        "type": "function",
        "z": "f6bd4cff.b20c7",
        "name": "SonOff Direct (Full STAT",
        "func": "//flow variables\nvar currentVal = flow.get('currentVal') || 0;\nvar voltageVal = flow.get('voltageVal') || 0;\nvar powerVal = flow.get('powerVal') || 0;\nvar factorVal = flow.get('factorVal') || 0;\nvar reactivePowerVal = flow.get('reactivePowerVal') || 0;\nvar apparentPowerVal = flow.get('apparentPowerVal') || 0;\nvar uptimeVal = flow.get('uptimeVal') || 0;\nvar timeVal = flow.get('timeVal') || 0;\nvar energyTotalVal = flow.get('energyTotalVal') || 0;\nvar energyYesterdayVal = flow.get('energyYesterdayVal') || 0;\nvar energyTodayVal = flow.get('energyTodayVal') || 0;\n\nmsg2 = {};\n\n/*\n    Here I check which proprieties exist.\n    If I interrogate the SonOff directly I'll have a StatusSNS in the proprieties.\n    The telemetry payload doesn't have that propriety. I did this so I can read\n    from multiple sources and output the same date from just one function block\n*/\n\nif('StatusSNS' in msg.payload){\n    factorVal = msg.payload.StatusSNS.ENERGY.Factor;\n    currentVal = msg.payload.StatusSNS.ENERGY.Current;\n    voltageVal = msg.payload.StatusSNS.ENERGY.Voltage;\n\tapparentPowerVal = msg.payload.StatusSNS.ENERGY.ApparentPower;\n\tpowerVal = msg.payload.StatusSNS.ENERGY.Power;\n\treactivePowerVal = msg.payload.StatusSNS.ENERGY.ReactivePower;\n}\nelse if('ENERGY' in msg.payload){\n    factorVal = msg.payload.ENERGY.Factor;\n    currentVal = msg.payload.ENERGY.Current;\n    voltageVal = msg.payload.ENERGY.Voltage;\n    apparentPowerVal = msg.payload.ENERGY.ApparentPower;\n\tpowerVal = msg.payload.ENERGY.Power;\n\treactivePowerVal = msg.payload.ENERGY.ReactivePower;\n\tenergyTotalVal = msg.payload.ENERGY.Total;\n\tenergyYesterdayVal = msg.payload.ENERGY.Yesterday;\n\tenergyTodayVal = msg.payload.ENERGY.Today;\n}\nelse if('UptimeSec' in msg.payload || 'Time' in msg.payload){\n    uptimeVal = msg.payload.UptimeSec;\n    timeVal = msg.payload.Time;\n}\n\n\n//Here I set the flow variables for external use (only this flow)\nflow.set('voltageVal', voltageVal);\nflow.set('currentVal', currentVal);\nflow.set('powerVal', powerVal);\nflow.set('reactivePowerVal', reactivePowerVal);\nflow.set('apparentPowerVal', apparentPowerVal);\nflow.set('factorVal', factorVal);\nflow.set('uptimeVal', uptimeVal);\nflow.set('timeVal', timeVal);\nflow.set('energyTotalVal', energyTotalVal);\nflow.set('energyYesterdayVal', energyYesterdayVal);\nflow.set('energyTodayVal', energyTodayVal);\n\n// Output 1 (for database)\nmsg.payload = {\n    voltage : Number(voltageVal.toFixed(2)),\n    current : Number(currentVal.toFixed(2)),\n    power : Number(powerVal.toFixed(2)),\n    reactivePower : Number(reactivePowerVal.toFixed(2)),\n    apparentPower : Number(apparentPowerVal.toFixed(2)),\n    factor : Number(factorVal.toFixed(2)),\n    energyTotal : Number(energyTotalVal),\n    energyYesterday : Number(energyYesterdayVal),\n    energyToday : Number(energyTodayVal)\n}\n\nmsg2.payload = {\n    uptime : uptimeVal,\n    time : timeVal\n}\nreturn [msg, msg2];",
        "outputs": 2,
        "noerr": 0,
        "x": 650,
        "y": 220,
        "wires": [
            [
                "b5e21944.5245",
                "1c6babc4.b03b5c",
                "ba99394a.c7c87",
                "5dce264c.892fc",
                "9a15db10.6d4e7",
                "583e86dc.540d28",
                "868c51ce.07469",
                "9093f3e5.794cc",
                "291f7b62.684a74"
            ],
            []
        ]
    },
    {
        "id": "81167430.f37ea8",
        "type": "watt2kwh",
        "z": "f6bd4cff.b20c7",
        "format": "wh",
        "maximum": "62",
        "maximumunit": "secs",
        "name": "",
        "x": 1220,
        "y": 400,
        "wires": [
            [
                "25f99fb2.a4d928"
            ]
        ]
    },
    {
        "id": "71242e7a.2736d8",
        "type": "ui_text",
        "z": "f6bd4cff.b20c7",
        "group": "9c73e713.f5be88",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Energia ieri",
        "format": "{{msg.payload.yesterdayEnergy.toFixed(2)}} kWh",
        "layout": "row-spread",
        "x": 1730,
        "y": 400,
        "wires": []
    },
    {
        "id": "d58bc31d.e0af18",
        "type": "ui_text",
        "z": "f6bd4cff.b20c7",
        "group": "9c73e713.f5be88",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Energia oggi",
        "format": "{{msg.payload.todayEnergy.toFixed(2)}} kWh",
        "layout": "row-spread",
        "x": 1730,
        "y": 360,
        "wires": []
    },
    {
        "id": "25f99fb2.a4d928",
        "type": "function",
        "z": "f6bd4cff.b20c7",
        "name": "",
        "func": "var todayEnergyVal = flow.get('todayEnergy') || 0;\nvar yesterdayEnergyVal = flow.get('yesterdayEnergy') || 0;\nvar totalEnergyVal = flow.get('totalEnergy') || 0;\n\nif (msg.payload === \"reset\") {\n    yesterdayEnergyVal = todayEnergyVal;\n    todayEnergyVal = 0;\n\n}\nelse if(!isNaN(msg.payload)){\n    todayEnergyVal += msg.payload;\n    totalEnergyVal += msg.payload;\n}\nelse if('last_todayEnergy' in msg.payload){\n    todayEnergyVal = msg.payload.last_todayEnergy;\n    yesterdayEnergyVal = msg.payload.last_yesterdayEnergy;\n    totalEnergyVal = msg.payload.last_totalEnergy;\n}\n\nflow.set('yesterdayEnergy', yesterdayEnergyVal);\nflow.set('todayEnergy', todayEnergyVal);\nflow.set('totalEnergy', totalEnergyVal);\n    \nmsg.payload = {\n    todayEnergy : todayEnergyVal,\n    yesterdayEnergy : yesterdayEnergyVal,\n    totalEnergy : totalEnergyVal\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1430,
        "y": 400,
        "wires": [
            [
                "d58bc31d.e0af18",
                "9e2a3d75.456a8",
                "71242e7a.2736d8",
                "53e31ec4.00072"
            ]
        ]
    },
    {
        "id": "bf694ada.46edb8",
        "type": "inject",
        "z": "f6bd4cff.b20c7",
        "name": "Daily reset",
        "repeat": "",
        "crontab": "59 23 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "reset",
        "payloadType": "str",
        "x": 1230,
        "y": 360,
        "wires": [
            [
                "25f99fb2.a4d928"
            ]
        ]
    },
    {
        "id": "3f6d4e8d.038e5a",
        "type": "telegrambot-command",
        "z": "f6bd4cff.b20c7",
        "name": "",
        "bot": "c4e585d7.106718",
        "command": "/contatore",
        "commandType": "str",
        "commandCase": false,
        "x": 1650,
        "y": 700,
        "wires": [
            [
                "1409f68d.f3a651"
            ]
        ]
    },
    {
        "id": "1409f68d.f3a651",
        "type": "function",
        "z": "f6bd4cff.b20c7",
        "name": "Invio misure",
        "func": "var currentVal = flow.get('currentVal') || 0;\nvar voltageVal = flow.get('voltageVal') || 0;\nvar powerVal = flow.get('powerVal') || 0;\nvar uptimeVal = flow.get('uptimeVal') || 0;\nvar todayEnergyVal = flow.get('todayEnergy') || 0;\nvar yesterdayEnergyVal = flow.get('yesterdayEnergy') || 0;\nvar totalEnergyVal = flow.get('totalEnergy') || 0;\n\nvar currentdate = new Date();\nvar datetime = currentdate.getDate() + \"/\" + (currentdate.getMonth()+1) + \"/\" + currentdate.getFullYear() + \" - \" + currentdate.getHours() + \":\" +currentdate.getMinutes() + \":\" + currentdate.getSeconds() + \"\\n\";\n\nmsg.payload = datetime + \"\\nDati CONTATORE:\\nTensione: \" + voltageVal + \" V\\nCorrente: \" + currentVal + \" A\\nPotenza Attuale: \" + powerVal.toFixed(2) + \" W\\nEnergia oggi: \" + todayEnergyVal.toFixed(2) + \" kWh\\nEnergia ieri: \" + yesterdayEnergyVal.toFixed(2) + \" kWh\\nEnergia totale: \" + totalEnergyVal.toFixed(2) + \"kWh\\nUptime: \" + uptimeVal +  \" s\\n\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1830,
        "y": 700,
        "wires": [
            [
                "d3448d4c.47663"
            ]
        ]
    },
    {
        "id": "996a2e4c.9c76f",
        "type": "comment",
        "z": "f6bd4cff.b20c7",
        "name": "Comandi Telegram",
        "info": "",
        "x": 1650,
        "y": 660,
        "wires": []
    },
    {
        "id": "40e0f979.312118",
        "type": "comment",
        "z": "f6bd4cff.b20c7",
        "name": "Pulsante refresh",
        "info": "",
        "x": 120,
        "y": 640,
        "wires": []
    },
    {
        "id": "3d527a8.a11f206",
        "type": "mqtt in",
        "z": "f6bd4cff.b20c7",
        "name": "",
        "topic": "tele/tasmotaContatore/STATE",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 160,
        "y": 200,
        "wires": [
            [
                "3725c2fa.5176fe"
            ]
        ]
    },
    {
        "id": "ff657ca1.3f7e58",
        "type": "conf ping",
        "z": "92f9eb20.694dc8",
        "name": "",
        "host": "192.168.0.71",
        "timeout": "5",
        "requests": "1",
        "x": 330,
        "y": 120,
        "wires": [
            [
                "fb4e5f54.f8d5a"
            ]
        ]
    },
    {
        "id": "288e7189.789a16",
        "type": "conf ping",
        "z": "92f9eb20.694dc8",
        "name": "",
        "host": "192.168.0.1",
        "timeout": "5",
        "requests": "1",
        "x": 330,
        "y": 80,
        "wires": [
            [
                "65b8cfd9.c5bcf"
            ]
        ]
    },
    {
        "id": "5a28f4f6.64f02c",
        "type": "conf ping",
        "z": "92f9eb20.694dc8",
        "name": "",
        "host": "192.168.0.250",
        "timeout": "5",
        "requests": "1",
        "x": 340,
        "y": 780,
        "wires": [
            [
                "97249a85.2b617"
            ]
        ]
    },
    {
        "id": "7bd52e67.43b7d8",
        "type": "conf ping",
        "z": "92f9eb20.694dc8",
        "name": "",
        "host": "192.168.0.72",
        "timeout": "5",
        "requests": "1",
        "x": 330,
        "y": 160,
        "wires": [
            [
                "9bfc7fd0.3453f"
            ]
        ]
    },
    {
        "id": "9e1f27a1.2bc25",
        "type": "conf ping",
        "z": "92f9eb20.694dc8",
        "name": "",
        "host": "192.168.0.73",
        "timeout": "5",
        "requests": "1",
        "x": 330,
        "y": 200,
        "wires": [
            [
                "8f63279d.0df24"
            ]
        ]
    },
    {
        "id": "f073e3a1.85ed68",
        "type": "conf ping",
        "z": "92f9eb20.694dc8",
        "name": "192.168.0.74",
        "host": "192.168.0.74",
        "timeout": "10",
        "requests": "1",
        "x": 330,
        "y": 240,
        "wires": [
            [
                "4be03a14.4f196c",
                "46483723.1f3088"
            ]
        ]
    },
    {
        "id": "22ef1a64.a245c6",
        "type": "conf ping",
        "z": "92f9eb20.694dc8",
        "name": "",
        "host": "192.168.0.254",
        "timeout": "5",
        "requests": "1",
        "x": 340,
        "y": 860,
        "wires": [
            [
                "f14400b3.f3bca8"
            ]
        ]
    },
    {
        "id": "a000d85f.53e768",
        "type": "conf ping",
        "z": "92f9eb20.694dc8",
        "name": "",
        "host": "192.168.0.75",
        "timeout": "5",
        "requests": "1",
        "x": 330,
        "y": 340,
        "wires": [
            [
                "bf92cb38.9decb8"
            ]
        ]
    },
    {
        "id": "4e1c445c.04d264",
        "type": "conf ping",
        "z": "92f9eb20.694dc8",
        "name": "",
        "host": "192.168.0.76",
        "timeout": "5",
        "requests": "1",
        "x": 330,
        "y": 380,
        "wires": [
            [
                "48c1400d.65522"
            ]
        ]
    },
    {
        "id": "df286d43.e26208",
        "type": "conf ping",
        "z": "92f9eb20.694dc8",
        "name": "",
        "host": "192.168.0.77",
        "timeout": "5",
        "requests": "1",
        "x": 330,
        "y": 420,
        "wires": [
            [
                "82413e86.2a9a08"
            ]
        ]
    },
    {
        "id": "5dce264c.892fc",
        "type": "influxdb out",
        "z": "f6bd4cff.b20c7",
        "influxdb": "95c76cc2.f1041",
        "name": "",
        "measurement": "contatore",
        "precision": "",
        "retentionPolicy": "",
        "database": "Energy",
        "retentionPolicyV18Flux": "",
        "org": "",
        "bucket": "",
        "x": 1120,
        "y": 440,
        "wires": []
    },
    {
        "id": "9a15db10.6d4e7",
        "type": "change",
        "z": "f6bd4cff.b20c7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.power",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 400,
        "wires": [
            [
                "81167430.f37ea8"
            ]
        ]
    },
    {
        "id": "53e31ec4.00072",
        "type": "influxdb out",
        "z": "f6bd4cff.b20c7",
        "influxdb": "95c76cc2.f1041",
        "name": "",
        "measurement": "contatore",
        "precision": "",
        "retentionPolicy": "",
        "database": "Energy",
        "retentionPolicyV18Flux": "",
        "org": "",
        "bucket": "",
        "x": 1830,
        "y": 480,
        "wires": []
    },
    {
        "id": "40d6cffa.368a1",
        "type": "json",
        "z": "295673c6.e0b2c4",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 100,
        "wires": [
            [
                "669c92f.9cdd66c"
            ]
        ]
    },
    {
        "id": "dff40ef.b2f077",
        "type": "json",
        "z": "46a757ab.7b1178",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 370,
        "y": 80,
        "wires": [
            [
                "3cd64e98.023c8a"
            ]
        ]
    },
    {
        "id": "c8a17bd0.248508",
        "type": "conf ping",
        "z": "92f9eb20.694dc8",
        "name": "",
        "host": "192.168.0.78",
        "timeout": "5",
        "requests": "1",
        "x": 330,
        "y": 460,
        "wires": [
            [
                "7098657.4d2b19c"
            ]
        ]
    },
    {
        "id": "348f0f68.33",
        "type": "comment",
        "z": "7aa2da03.bd1f7c",
        "name": "Soffitta - 192.168.0.72",
        "info": "",
        "x": 600,
        "y": 40,
        "wires": []
    },
    {
        "id": "7664a21e.1ebaa4",
        "type": "json",
        "z": "7aa2da03.bd1f7c",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 390,
        "y": 80,
        "wires": [
            [
                "7368671b.5c0a3"
            ]
        ]
    },
    {
        "id": "7368671b.5c0a3",
        "type": "function",
        "z": "7aa2da03.bd1f7c",
        "name": "DHT11 only",
        "func": "var temperatureVal;\nvar humidityVal;\n\nif('StatusSNS' in msg.payload){\n    temperatureVal = msg.payload.StatusSNS.DHT11.Temperature;\n    humidityVal = msg.payload.StatusSNS.DHT11.Humidity;\n}\nelse{\n    temperatureVal = msg.payload.DHT11.Temperature;\n    humidityVal = msg.payload.DHT11.Humidity;\n}\n\n\nmsg.payload = {\n    temperature : temperatureVal,\n    humidity : humidityVal\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 530,
        "y": 80,
        "wires": [
            [
                "6def4508.452984",
                "6ec20f74.848178",
                "27f1efc7.af3298"
            ]
        ]
    },
    {
        "id": "ee5374e0.86da58",
        "type": "comment",
        "z": "f2a638ae.d93ca8",
        "name": "Server Room - 192.168.0.71",
        "info": "",
        "x": 560,
        "y": 20,
        "wires": []
    },
    {
        "id": "f13242fd.1b1c48",
        "type": "mqtt in",
        "z": "f2a638ae.d93ca8",
        "name": "",
        "topic": "tele/tasmotaServerRoom/SENSOR",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 200,
        "y": 60,
        "wires": [
            [
                "720fc4d3.5bc07c"
            ]
        ]
    },
    {
        "id": "720fc4d3.5bc07c",
        "type": "json",
        "z": "f2a638ae.d93ca8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 430,
        "y": 60,
        "wires": [
            [
                "36774f.001aa8b2"
            ]
        ]
    },
    {
        "id": "36774f.001aa8b2",
        "type": "function",
        "z": "f2a638ae.d93ca8",
        "name": "DHT11+Photoresistor",
        "func": "var temperatureVal;\nvar humidityVal;\nvar luminosityVal\n\nif('StatusSNS' in msg.payload){\n    temperatureVal = msg.payload.StatusSNS.DHT11.Temperature;\n    humidityVal = msg.payload.StatusSNS.DHT11.Humidity;\n    luminosityVal = msg.payload.StatusSNS.ANALOG.A0;\n}\nelse{\n    temperatureVal = msg.payload.DHT11.Temperature;\n    humidityVal = msg.payload.DHT11.Humidity;\n    luminosityVal = msg.payload.ANALOG.A0;\n}\n\nluminosityVal = -(luminosityVal - 1024) * 100 / 1024;\n\nmsg.payload = {\n    temperature : temperatureVal,\n    humidity : humidityVal,\n    luminosity : luminosityVal\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 60,
        "wires": [
            [
                "d3f1018d.e5a5d8",
                "40dcf2b3.2e95e4",
                "6fe9c13a.3298a",
                "951d377e.4b4cc8"
            ]
        ]
    },
    {
        "id": "27f1efc7.af3298",
        "type": "influxdb out",
        "z": "7aa2da03.bd1f7c",
        "influxdb": "95c76cc2.f1041",
        "name": "",
        "measurement": "soffitta",
        "precision": "",
        "retentionPolicy": "",
        "database": "Home",
        "retentionPolicyV18Flux": "",
        "org": "",
        "bucket": "",
        "x": 850,
        "y": 320,
        "wires": []
    },
    {
        "id": "d3f1018d.e5a5d8",
        "type": "function",
        "z": "f2a638ae.d93ca8",
        "name": "Esporta dati temperatura",
        "func": "var serverTempVal=flow.get('server_temp') || 0;\nvar serverMaxTempVal=flow.get('server_max_temp') || 0;\nvar serverMinTempVal=flow.get('server_min_temp') || 50;\n\nserverTempVal = msg.payload.temperature;\n\nif (serverTempVal<serverMinTempVal){\n    serverMinTempVal = serverTempVal;\n}\n\nif (serverTempVal>serverMaxTempVal){\n    serverMaxTempVal = serverTempVal;\n}\n\nflow.set('server_temp', serverTempVal);\nflow.set('server_max_temp', serverMaxTempVal);\nflow.set('server_min_temp', serverMinTempVal);\n\nmsg.payload = {\n    temperature : serverTempVal,\n    serverMaxTemp : serverMaxTempVal,\n    serverMinTemp : serverMinTempVal\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 870,
        "y": 60,
        "wires": [
            [
                "b86fc693.a4c28",
                "1ccfd3f9.01f59c",
                "ebf5bd04.0b50d"
            ]
        ]
    },
    {
        "id": "40dcf2b3.2e95e4",
        "type": "function",
        "z": "f2a638ae.d93ca8",
        "name": "Esporta dati umidità",
        "func": "var serverUmidVal=flow.get('server_umid') || 0;\nvar serverMaxUmidVal=flow.get('server_max_umid') || 0;\nvar serverMinUmidVal=flow.get('server_min_umid') || 50;\n\nserverUmidVal = msg.payload.humidity;\n\nif (serverUmidVal<serverMinUmidVal){\n    serverMinUmidVal = serverUmidVal;\n}\n\nif (serverUmidVal>serverMaxUmidVal){\n    serverMaxUmidVal = serverUmidVal;\n}\n\nflow.set('server_umid', serverUmidVal);\nflow.set('server_max_umid', serverMaxUmidVal);\nflow.set('server_min_umid', serverMinUmidVal);\n\nmsg.payload = {\n    humidity : serverUmidVal,\n    serverMaxUmid : serverMaxUmidVal,\n    serverMinUmid : serverMinUmidVal\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 860,
        "y": 180,
        "wires": [
            [
                "ccbb4d36.3075f8",
                "34719d4b.3b25ca",
                "5df712ed.890dcc"
            ]
        ]
    },
    {
        "id": "263e3a1a.5452c6",
        "type": "comment",
        "z": "46a757ab.7b1178",
        "name": "Soggiorno - 192.168.0.73",
        "info": "",
        "x": 650,
        "y": 40,
        "wires": []
    },
    {
        "id": "3cd64e98.023c8a",
        "type": "function",
        "z": "46a757ab.7b1178",
        "name": "DHT11+Photoresistor",
        "func": "var temperatureVal;\nvar humidityVal;\nvar luminosityVal\n\nif('StatusSNS' in msg.payload){\n    temperatureVal = msg.payload.StatusSNS.DHT11.Temperature;\n    humidityVal = msg.payload.StatusSNS.DHT11.Humidity;\n    luminosityVal = msg.payload.StatusSNS.ANALOG.A0;\n}\nelse{\n    temperatureVal = msg.payload.DHT11.Temperature;\n    humidityVal = msg.payload.DHT11.Humidity;\n    luminosityVal = msg.payload.ANALOG.A0;\n}\n\nluminosityVal = -(luminosityVal - 1024) * 100 / 1024;\n\nmsg.payload = {\n    temperature : temperatureVal,\n    humidity : humidityVal,\n    luminosity : Number(luminosityVal.toFixed(0))\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 540,
        "y": 80,
        "wires": [
            [
                "72fc6816.c61578",
                "dd16b312.3a358",
                "60746f85.3995b",
                "5a316a4d.6aca64"
            ]
        ]
    },
    {
        "id": "34b775a.b28e08a",
        "type": "mqtt in",
        "z": "46a757ab.7b1178",
        "name": "",
        "topic": "stat/tasmotaSala/STATUS8",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 150,
        "y": 120,
        "wires": [
            [
                "dff40ef.b2f077"
            ]
        ]
    },
    {
        "id": "72fc6816.c61578",
        "type": "function",
        "z": "46a757ab.7b1178",
        "name": "Esporta dati temperatura",
        "func": "var salaTempVal=flow.get('sala_temp') || 0;\nvar salaMaxTempVal=flow.get('sala_max_temp') || 0;\nvar salaMinTempVal=flow.get('sala_min_temp') || 50;\n\nsalaTempVal = msg.payload.temperature;\n\nif (salaTempVal<salaMinTempVal){\n    salaMinTempVal = salaTempVal;\n}\n\nif (salaTempVal>salaMaxTempVal){\n    salaMaxTempVal = salaTempVal;\n}\n\nflow.set('sala_temp', salaTempVal);\nflow.set('sala_max_temp', salaMaxTempVal);\nflow.set('sala_min_temp', salaMinTempVal);\n\nmsg.payload = {\n    temperature : salaTempVal,\n    salaMaxTemp : salaMaxTempVal,\n    salaMinTemp : salaMinTempVal\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 810,
        "y": 80,
        "wires": [
            [
                "942c5b80.3baf6",
                "ea89634c.b66e4",
                "dc4f7c3c.a32ee8"
            ]
        ]
    },
    {
        "id": "dd16b312.3a358",
        "type": "function",
        "z": "46a757ab.7b1178",
        "name": "Esporta dati umidità",
        "func": "var salaUmidVal=flow.get('sala_umid') || 0;\nvar salaMaxUmidVal=flow.get('sala_max_umid') || 0;\nvar salaMinUmidVal=flow.get('sala_min_umid') || 50;\n\nsalaUmidVal = msg.payload.humidity;\n\nif (salaUmidVal<salaMinUmidVal){\n    salaMinUmidVal = salaUmidVal;\n}\n\nif (salaUmidVal>salaMaxUmidVal){\n    salaMaxUmidVal = salaUmidVal;\n}\n\nflow.set('sala_umid', salaUmidVal);\nflow.set('sala_max_umid', salaMaxUmidVal);\nflow.set('sala_min_umid', salaMinUmidVal);\n\nmsg.payload = {\n    humidity : salaUmidVal,\n    salaMaxUmid : salaMaxUmidVal,\n    salaMinUmid : salaMinUmidVal\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 800,
        "y": 200,
        "wires": [
            [
                "33ec2d9b.4eb6ba",
                "b92922cc.0eb408",
                "cfcc574.2335228"
            ]
        ]
    },
    {
        "id": "60746f85.3995b",
        "type": "function",
        "z": "46a757ab.7b1178",
        "name": "Esporta dati luminosità",
        "func": "flow.set('sala_lum', msg.payload.luminosity);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 800,
        "y": 320,
        "wires": [
            [
                "5b97b057.bb532"
            ]
        ]
    },
    {
        "id": "fac1715e.e5cd6",
        "type": "comment",
        "z": "295673c6.e0b2c4",
        "name": "Switch ESP-01S Cortile - 192.168.0.75",
        "info": "",
        "x": 670,
        "y": 20,
        "wires": []
    },
    {
        "id": "ddbe7d73.d0a8e",
        "type": "comment",
        "z": "c0642d23.ec7808",
        "name": "Comandi Telegram",
        "info": "",
        "x": 210,
        "y": 260,
        "wires": []
    },
    {
        "id": "73b6064c.cecd7",
        "type": "telegrambot-command",
        "z": "c0642d23.ec7808",
        "name": "/solar_node",
        "bot": "c4e585d7.106718",
        "command": "/solar_node",
        "commandType": "str",
        "commandCase": false,
        "x": 190,
        "y": 340,
        "wires": [
            [
                "ef3bcf3b.5615e"
            ]
        ]
    },
    {
        "id": "ef3bcf3b.5615e",
        "type": "telegrambot-switch",
        "z": "c0642d23.ec7808",
        "name": "",
        "bot": "c4e585d7.106718",
        "chatId": "282556504",
        "question": "Cosa vuoi sapere?",
        "answers": [
            "Carico",
            "Misure Ambientali"
        ],
        "outputs": 3,
        "autoAnswerCallback": true,
        "timeoutValue": "5",
        "timeoutUnits": "s",
        "x": 440,
        "y": 340,
        "wires": [
            [
                "4cfed194.a90c38"
            ],
            [
                "b43c2457.90a1b"
            ],
            []
        ]
    },
    {
        "id": "4cfed194.a90c38",
        "type": "telegrambot-switch",
        "z": "c0642d23.ec7808",
        "name": "Carico",
        "bot": "c4e585d7.106718",
        "chatId": "282556504",
        "question": "Impostazioni uscita",
        "answers": [
            "Cambia stato",
            "Stato"
        ],
        "outputs": 3,
        "autoAnswerCallback": true,
        "timeoutValue": "5",
        "timeoutUnits": "s",
        "x": 740,
        "y": 340,
        "wires": [
            [
                "e366aade.12788"
            ],
            [
                "48eabac7.fa1fac"
            ],
            []
        ]
    },
    {
        "id": "fbab9ff2.28e1e8",
        "type": "trigger",
        "z": "c0642d23.ec7808",
        "name": "",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "4",
        "extend": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "outputs": 1,
        "x": 1200,
        "y": 380,
        "wires": [
            [
                "e8942631.188b88"
            ]
        ]
    },
    {
        "id": "e8942631.188b88",
        "type": "function",
        "z": "c0642d23.ec7808",
        "name": "Messaggio stato carico",
        "func": "var relay_status=flow.get('relay_status') || 0;\nmsg.payload = \"Alimentazione carico: \" + relay_status;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1380,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "e366aade.12788",
        "type": "change",
        "z": "c0642d23.ec7808",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "2",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 340,
        "wires": [
            [
                "fbab9ff2.28e1e8",
                "afd35d9d.8737a"
            ]
        ]
    },
    {
        "id": "a2a3f8b0.a023d8",
        "type": "mqtt out",
        "z": "73b7c891.499c78",
        "name": "",
        "topic": "cmnd/tasmotaInverter/STATUS",
        "qos": "0",
        "retain": "false",
        "broker": "ee95ae30.7fefe8",
        "x": 870,
        "y": 880,
        "wires": []
    },
    {
        "id": "faa617f.90f48e8",
        "type": "json",
        "z": "73b7c891.499c78",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 200,
        "wires": [
            [
                "2ccfc029.1f9ec8"
            ]
        ]
    },
    {
        "id": "b21678f8.e4d46",
        "type": "mqtt in",
        "z": "73b7c891.499c78",
        "name": "",
        "topic": "tele/tasmotaInverter/SENSOR",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 180,
        "y": 220,
        "wires": [
            [
                "faa617f.90f48e8"
            ]
        ]
    },
    {
        "id": "ff558125.b24ab",
        "type": "ui_gauge",
        "z": "73b7c891.499c78",
        "name": "Tensione",
        "group": "1a572bc4.5062c4",
        "order": 3,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "Tensione",
        "label": "V",
        "format": "{{msg.payload.voltage}}",
        "min": "210",
        "max": "250",
        "colors": [
            "#e6e600",
            "#00b500",
            "#ca3838"
        ],
        "seg1": "220",
        "seg2": "240",
        "x": 1040,
        "y": 100,
        "wires": []
    },
    {
        "id": "cf9c178f.9dd7b8",
        "type": "ui_gauge",
        "z": "73b7c891.499c78",
        "name": "Corrente",
        "group": "1a572bc4.5062c4",
        "order": 4,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "Corrente",
        "label": "A",
        "format": "{{msg.payload.current}}",
        "min": "0",
        "max": "17",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "13",
        "seg2": "14",
        "x": 1040,
        "y": 140,
        "wires": []
    },
    {
        "id": "5948a3fe.06968c",
        "type": "ui_button",
        "z": "73b7c891.499c78",
        "name": "Manual refresh",
        "group": "e72636c8.15cc7",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Refresh",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "8",
        "payloadType": "str",
        "topic": "",
        "x": 440,
        "y": 880,
        "wires": [
            [
                "f68b7339.bac22",
                "51facb59.204044"
            ]
        ]
    },
    {
        "id": "c4d3f4e3.47f8b",
        "type": "ui_text",
        "z": "73b7c891.499c78",
        "group": "e72636c8.15cc7",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Energia totale",
        "format": "{{msg.payload.energyTotal}} kWh",
        "layout": "row-spread",
        "x": 1060,
        "y": 580,
        "wires": []
    },
    {
        "id": "693d09b4.950808",
        "type": "ui_text",
        "z": "73b7c891.499c78",
        "group": "e72636c8.15cc7",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Potenza",
        "format": "{{msg.payload.power}} W",
        "layout": "row-spread",
        "x": 1040,
        "y": 220,
        "wires": []
    },
    {
        "id": "3129efca.45ad78",
        "type": "ui_text",
        "z": "73b7c891.499c78",
        "group": "e72636c8.15cc7",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Potenza apparente",
        "format": "{{msg.payload.apparentPower}} VA",
        "layout": "row-spread",
        "x": 1070,
        "y": 340,
        "wires": []
    },
    {
        "id": "2e6904b6.85784c",
        "type": "ui_text",
        "z": "73b7c891.499c78",
        "group": "e72636c8.15cc7",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Potenza reattiva",
        "format": "{{msg.payload.reactivePower}} VAr",
        "layout": "row-spread",
        "x": 1060,
        "y": 300,
        "wires": []
    },
    {
        "id": "627e6ca5.e052ec",
        "type": "ui_text",
        "z": "73b7c891.499c78",
        "group": "e72636c8.15cc7",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Cos fi",
        "format": "{{msg.payload.factor}}",
        "layout": "row-spread",
        "x": 1030,
        "y": 380,
        "wires": []
    },
    {
        "id": "9f432317.09ba48",
        "type": "ui_gauge",
        "z": "73b7c891.499c78",
        "name": "Potenza",
        "group": "1a572bc4.5062c4",
        "order": 2,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "Potenza",
        "label": "W",
        "format": "{{msg.payload.power}}",
        "min": "0",
        "max": "3300",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "13",
        "seg2": "14",
        "x": 1040,
        "y": 180,
        "wires": []
    },
    {
        "id": "2ccfc029.1f9ec8",
        "type": "function",
        "z": "73b7c891.499c78",
        "name": "SonOff Direct (Full STAT",
        "func": "//flow variables\nvar currentVal = flow.get('currentVal') || 0;\nvar voltageVal = flow.get('voltageVal') || 0;\nvar powerVal = flow.get('powerVal') || 0;\nvar factorVal = flow.get('factorVal') || 0;\nvar reactivePowerVal = flow.get('reactivePowerVal') || 0;\nvar apparentPowerVal = flow.get('apparentPowerVal') || 0;\nvar uptimeVal = flow.get('uptimeVal') || 0;\nvar timeVal = flow.get('timeVal') || 0;\nvar energyTotalVal = flow.get('energyTotalVal') || 0;\nvar energyYesterdayVal = flow.get('energyYesterdayVal') || 0;\nvar energyTodayVal = flow.get('energyTodayVal') || 0;\n\nmsg2 = {};\n\n/*\n    Here I check which proprieties exist.\n    If I interrogate the SonOff directly I'll have a StatusSNS in the proprieties.\n    The telemetry payload doesn't have that propriety. I did this so I can read\n    from multiple sources and output the same date from just one function block\n*/\n\nif('StatusSNS' in msg.payload){\n    factorVal = msg.payload.StatusSNS.ENERGY.Factor;\n    currentVal = msg.payload.StatusSNS.ENERGY.Current;\n    voltageVal = msg.payload.StatusSNS.ENERGY.Voltage;\n\tapparentPowerVal = msg.payload.StatusSNS.ENERGY.ApparentPower;\n\tpowerVal = msg.payload.StatusSNS.ENERGY.Power;\n\treactivePowerVal = msg.payload.StatusSNS.ENERGY.ReactivePower;\n}\nelse if('ENERGY' in msg.payload){\n    factorVal = msg.payload.ENERGY.Factor;\n    currentVal = msg.payload.ENERGY.Current;\n    voltageVal = msg.payload.ENERGY.Voltage;\n    apparentPowerVal = msg.payload.ENERGY.ApparentPower;\n\tpowerVal = msg.payload.ENERGY.Power;\n\treactivePowerVal = msg.payload.ENERGY.ReactivePower;\n\tenergyTotalVal = msg.payload.ENERGY.Total;\n\tenergyYesterdayVal = msg.payload.ENERGY.Yesterday;\n\tenergyTodayVal = msg.payload.ENERGY.Today;\n}\nelse if('UptimeSec' in msg.payload || 'Time' in msg.payload){\n    uptimeVal = msg.payload.UptimeSec;\n    timeVal = msg.payload.Time;\n}\n\n\n//Here I set the flow variables for external use (only this flow)\nflow.set('voltageVal', voltageVal);\nflow.set('currentVal', currentVal);\nflow.set('powerVal', powerVal);\nflow.set('reactivePowerVal', reactivePowerVal);\nflow.set('apparentPowerVal', apparentPowerVal);\nflow.set('factorVal', factorVal);\nflow.set('uptimeVal', uptimeVal);\nflow.set('timeVal', timeVal);\nflow.set('energyTotalVal', energyTotalVal);\nflow.set('energyYesterdayVal', energyYesterdayVal);\nflow.set('energyTodayVal', energyTodayVal);\n\n// Output 1 (for database)\nmsg.payload = {\n    voltage : Number(voltageVal.toFixed(2)),\n    current : Number(currentVal.toFixed(2)),\n    power : Number(powerVal.toFixed(2)),\n    reactivePower : Number(reactivePowerVal.toFixed(2)),\n    apparentPower : Number(apparentPowerVal.toFixed(2)),\n    factor : Number(factorVal.toFixed(2)),\n    energyTotal : Number(energyTotalVal),\n    energyYesterday : Number(energyYesterdayVal),\n    energyToday : Number(energyTodayVal)\n}\n\nmsg2.payload = {\n    uptime : uptimeVal,\n    time : timeVal\n}\nreturn [msg, msg2];",
        "outputs": 2,
        "noerr": 0,
        "x": 670,
        "y": 200,
        "wires": [
            [
                "ff558125.b24ab",
                "cf9c178f.9dd7b8",
                "693d09b4.950808",
                "3129efca.45ad78",
                "2e6904b6.85784c",
                "627e6ca5.e052ec",
                "9f432317.09ba48",
                "22a8acfb.adb10c",
                "1bd593a6.21e40c",
                "c4d3f4e3.47f8b",
                "d9fd1484.401be",
                "33f96552.cf0aca",
                "6b65cbf1.15d28c",
                "f1c1f3b0.d26b88",
                "5ccc4ea0.5d25f8",
                "147f1d2.4ef9563"
            ],
            []
        ]
    },
    {
        "id": "1bd593a6.21e40c",
        "type": "ui_text",
        "z": "73b7c891.499c78",
        "group": "e72636c8.15cc7",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Energia ieri",
        "format": "{{msg.payload.energyYesterday}} kWh",
        "layout": "row-spread",
        "x": 1050,
        "y": 500,
        "wires": []
    },
    {
        "id": "22a8acfb.adb10c",
        "type": "ui_text",
        "z": "73b7c891.499c78",
        "group": "e72636c8.15cc7",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Energia oggi",
        "format": "{{msg.payload.energyToday}} kWh",
        "layout": "row-spread",
        "x": 1050,
        "y": 420,
        "wires": []
    },
    {
        "id": "75725472.4fff64",
        "type": "comment",
        "z": "73b7c891.499c78",
        "name": "Pulsante refresh",
        "info": "",
        "x": 140,
        "y": 840,
        "wires": []
    },
    {
        "id": "d8338d98.1b30f",
        "type": "mqtt in",
        "z": "73b7c891.499c78",
        "name": "",
        "topic": "tele/tasmotaInverter/STATE",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 180,
        "y": 180,
        "wires": [
            [
                "faa617f.90f48e8"
            ]
        ]
    },
    {
        "id": "d9fd1484.401be",
        "type": "influxdb out",
        "z": "73b7c891.499c78",
        "influxdb": "95c76cc2.f1041",
        "name": "",
        "measurement": "inverter",
        "precision": "",
        "retentionPolicy": "",
        "database": "Energy",
        "retentionPolicyV18Flux": "",
        "org": "",
        "bucket": "",
        "x": 1130,
        "y": 660,
        "wires": []
    },
    {
        "id": "c4b58d8a.c0e16",
        "type": "mqtt out",
        "z": "73b7c891.499c78",
        "name": "",
        "topic": "cmnd/tasmotaInverter/POWER0",
        "qos": "0",
        "retain": "false",
        "broker": "ee95ae30.7fefe8",
        "x": 870,
        "y": 920,
        "wires": []
    },
    {
        "id": "2eaefff7.7e2ed",
        "type": "comment",
        "z": "73b7c891.499c78",
        "name": "SonOff Inverter - 192.168.0.78",
        "info": "",
        "x": 820,
        "y": 40,
        "wires": []
    },
    {
        "id": "412e04eb.c14454",
        "type": "comment",
        "z": "73b7c891.499c78",
        "name": "Comandi Telegram",
        "info": "",
        "x": 150,
        "y": 1160,
        "wires": []
    },
    {
        "id": "f763e77.520d998",
        "type": "telegrambot-command",
        "z": "73b7c891.499c78",
        "name": "/inverter",
        "bot": "c4e585d7.106718",
        "command": "/inverter",
        "commandType": "str",
        "commandCase": false,
        "x": 120,
        "y": 1220,
        "wires": [
            [
                "3aac99eb.a78e76"
            ]
        ]
    },
    {
        "id": "3aac99eb.a78e76",
        "type": "telegrambot-switch",
        "z": "73b7c891.499c78",
        "name": "",
        "bot": "c4e585d7.106718",
        "chatId": "282556504",
        "question": "Cosa vuoi sapere?",
        "answers": [
            "Carico",
            "Misure Elettriche"
        ],
        "outputs": 3,
        "autoAnswerCallback": true,
        "timeoutValue": "5",
        "timeoutUnits": "s",
        "x": 380,
        "y": 1220,
        "wires": [
            [
                "6dddcbde.0aa3fc"
            ],
            [
                "cd4f8fd1.9bcd58"
            ],
            []
        ]
    },
    {
        "id": "6dddcbde.0aa3fc",
        "type": "telegrambot-switch",
        "z": "73b7c891.499c78",
        "name": "Carico",
        "bot": "c4e585d7.106718",
        "chatId": "282556504",
        "question": "Cosa vuoi che faccia con il carico?",
        "answers": [
            "Cambia stato",
            "Stato"
        ],
        "outputs": 3,
        "autoAnswerCallback": true,
        "timeoutValue": "5",
        "timeoutUnits": "s",
        "x": 550,
        "y": 1220,
        "wires": [
            [
                "e47185aa.691088"
            ],
            [
                "f23be1c2.d523c8"
            ],
            []
        ]
    },
    {
        "id": "2e737c3e.92fd14",
        "type": "trigger",
        "z": "73b7c891.499c78",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "4",
        "extend": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "outputs": 1,
        "x": 910,
        "y": 1240,
        "wires": [
            [
                "b3540537.281608"
            ]
        ]
    },
    {
        "id": "b3540537.281608",
        "type": "function",
        "z": "73b7c891.499c78",
        "name": "Messaggio stato carico",
        "func": "var relay_status=flow.get('relay_status') || 0;\nmsg.payload = \"Alimentazione carico: \" + relay_status;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1090,
        "y": 1240,
        "wires": [
            [
                "fb69601c.3518d"
            ]
        ]
    },
    {
        "id": "e47185aa.691088",
        "type": "change",
        "z": "73b7c891.499c78",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "2",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 1200,
        "wires": [
            [
                "2e737c3e.92fd14",
                "fbd8e298.49684"
            ]
        ]
    },
    {
        "id": "cd4f8fd1.9bcd58",
        "type": "function",
        "z": "73b7c891.499c78",
        "name": "Invio misure",
        "func": "var currentVal = flow.get('currentVal') || 0;\nvar voltageVal = flow.get('voltageVal') || 0;\nvar powerVal = flow.get('powerVal') || 0;\nvar uptimeVal = flow.get('uptimeVal') || 0;\nvar energyTodayVal = flow.get('energyTodayVal') || 0;\nvar energyYesterdayVal = flow.get('energyYesterdayVal') || 0;\nvar energyTotalVal = flow.get('energyTotalVal') || 0;\n\nvar currentdate = new Date();\nvar datetime = currentdate.getDate() + \"/\" + (currentdate.getMonth()+1) + \"/\" + currentdate.getFullYear() + \" - \" + currentdate.getHours() + \":\" +currentdate.getMinutes() + \":\" + currentdate.getSeconds() + \"\\n\";\n\nmsg.payload = datetime + \"\\nDati INVERTER:\\nTensione: \" + voltageVal + \" V\\nCorrente: \" + currentVal + \" A\\nPotenza Attuale: \" + powerVal.toFixed(2) + \" W\\nEnergia oggi: \" + energyTodayVal.toFixed(2) + \" kWh\\nEnergia ieri: \" + energyYesterdayVal.toFixed(2) + \" kWh\\nEnergia totale: \" + energyTotalVal.toFixed(2) + \"kWh\\nUptime: \" + uptimeVal +  \" s\\n\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 1280,
        "wires": [
            [
                "fb69601c.3518d"
            ]
        ]
    },
    {
        "id": "f68b7339.bac22",
        "type": "function",
        "z": "73b7c891.499c78",
        "name": "empty payload",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 920,
        "wires": [
            [
                "c4b58d8a.c0e16"
            ]
        ]
    },
    {
        "id": "51facb59.204044",
        "type": "trigger",
        "z": "73b7c891.499c78",
        "name": "STATUS 8 & 11",
        "op1": "8",
        "op2": "11",
        "op1type": "str",
        "op2type": "str",
        "duration": "500",
        "extend": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "outputs": 1,
        "x": 640,
        "y": 880,
        "wires": [
            [
                "a2a3f8b0.a023d8"
            ]
        ]
    },
    {
        "id": "fbd8e298.49684",
        "type": "mqtt out",
        "z": "73b7c891.499c78",
        "name": "",
        "topic": "cmnd/tasmotaInverter/POWER0",
        "qos": "0",
        "retain": "false",
        "broker": "ee95ae30.7fefe8",
        "x": 1000,
        "y": 1200,
        "wires": []
    },
    {
        "id": "d73eaa97.0f1418",
        "type": "ui_button",
        "z": "73b7c891.499c78",
        "name": "Manual refresh",
        "group": "1a572bc4.5062c4",
        "order": 8,
        "width": 4,
        "height": 1,
        "passthru": true,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "replay",
        "payload": "8",
        "payloadType": "str",
        "topic": "",
        "x": 440,
        "y": 920,
        "wires": [
            [
                "f68b7339.bac22",
                "51facb59.204044"
            ]
        ]
    },
    {
        "id": "afd35d9d.8737a",
        "type": "mqtt out",
        "z": "c0642d23.ec7808",
        "name": "",
        "topic": "cmnd/tasmotSolarNode/POWER",
        "qos": "",
        "retain": "",
        "broker": "ee95ae30.7fefe8",
        "x": 1270,
        "y": 340,
        "wires": []
    },
    {
        "id": "e8c9c617.5649e8",
        "type": "comment",
        "z": "73b7c891.499c78",
        "name": "Switch",
        "info": "",
        "x": 110,
        "y": 980,
        "wires": []
    },
    {
        "id": "4b844ba5.07291c",
        "type": "mqtt out",
        "z": "73b7c891.499c78",
        "name": "",
        "topic": "cmnd/tasmotaInverter/POWER0",
        "qos": "0",
        "retain": "false",
        "broker": "ee95ae30.7fefe8",
        "x": 650,
        "y": 1060,
        "wires": []
    },
    {
        "id": "6b852cad.de4a64",
        "type": "mqtt out",
        "z": "73b7c891.499c78",
        "name": "",
        "topic": "cmnd/tasmotaInverter/STATUS",
        "qos": "0",
        "retain": "false",
        "broker": "ee95ae30.7fefe8",
        "x": 770,
        "y": 1020,
        "wires": []
    },
    {
        "id": "3200adb2.62039a",
        "type": "trigger",
        "z": "73b7c891.499c78",
        "name": "8",
        "op1": "8",
        "op2": "",
        "op1type": "str",
        "op2type": "nul",
        "duration": "250",
        "extend": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "outputs": 1,
        "x": 570,
        "y": 1020,
        "wires": [
            [
                "6b852cad.de4a64"
            ]
        ]
    },
    {
        "id": "e4cab2e0.64869",
        "type": "change",
        "z": "73b7c891.499c78",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "inverter_relay_status",
                "pt": "flow",
                "to": "payload.POWER",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.POWER",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 1380,
        "wires": [
            [
                "cf2aff4e.9d3588"
            ]
        ]
    },
    {
        "id": "7e3624c4.6639d4",
        "type": "mqtt in",
        "z": "73b7c891.499c78",
        "name": "",
        "topic": "stat/tasmotaInverter/RESULT",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 180,
        "y": 1380,
        "wires": [
            [
                "2a3d8b4d.05227c"
            ]
        ]
    },
    {
        "id": "2a3d8b4d.05227c",
        "type": "json",
        "z": "73b7c891.499c78",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 390,
        "y": 1380,
        "wires": [
            [
                "e4cab2e0.64869"
            ]
        ]
    },
    {
        "id": "d9c1b2a.205695",
        "type": "comment",
        "z": "73b7c891.499c78",
        "name": "Diagnostica",
        "info": "",
        "x": 130,
        "y": 1340,
        "wires": []
    },
    {
        "id": "4a03085e.222bb",
        "type": "function",
        "z": "af47c860.21273",
        "name": "",
        "func": "var outside_umid=flow.get('outside_umid') || 0;\nvar outside_max_umid=flow.get('outside_max_umid') || 0;\nvar outside_min_umid=flow.get('outside_min_umid') || 100;\n\nflow.set('outside_umid',msg.payload.humidity);\n\nif (msg.payload.humidity<outside_min_umid){\n    flow.set('outside_min_umid',msg.payload.humidity);\n}\n\nif (msg.payload.humidity>outside_max_umid){\n    flow.set('outside_max_umid',msg.payload.humidity);\n}\n\nmsg.outside_umid = outside_umid;\nmsg.outside_min_umid = outside_min_umid;\nmsg.outside_max_umid = outside_max_umid;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 890,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "b43c2457.90a1b",
        "type": "function",
        "z": "c0642d23.ec7808",
        "name": "Invio misure",
        "func": "var server_outside_temp=flow.get('server_outside_temp') || 0;\nvar server_outside_max_temp=flow.get('server_outside_max_temp') || 0;\nvar server_outside_min_temp=flow.get('server_outside_min_temp') || 50;\nvar server_outside_umid=flow.get('server_outside_umid') || 0;\nvar server_outside_max_umid=flow.get('server_outside_max_umid') || 0;\nvar server_outside_min_umid=flow.get('server_outside_min_umid') || 100;\nvar server_outside_pressure=flow.get('server_outside_pressure') || 0;\nvar server_outside_max_pressure=flow.get('server_outside_max_pressure') || 0;\nvar server_outside_min_pressure=flow.get('server_outside_min_pressure') || 100;\n\n//Genero la stringa della data\nvar currentdate = new Date();\nvar datetime = currentdate.getDate() + \"/\" + (currentdate.getMonth()+1) + \"/\" + currentdate.getFullYear() + \" - \" + currentdate.getHours() + \":\" +currentdate.getMinutes() + \":\" + currentdate.getSeconds();\n\nmsg_text = datetime + '\\nDati Esterno Solar Server:\\nTemperatura: ' + server_outside_temp + ' °C\\nTemperatura massima: ' + server_outside_max_temp + ' °C\\nTemperatura minima: ' + server_outside_min_temp + ' °C\\n\\nUmidità: ' + server_outside_umid + ' %\\nUmidità massima: ' + server_outside_max_umid + ' %\\nUmidità minima: ' + server_outside_min_umid + ' %\\n\\nPressione atmosferica: ' + server_outside_pressure + \" hPa\\nPressione massima: \" + server_outside_max_pressure + \" hPa\\nPressione minima: \" + server_outside_max_pressure + \" hPa\";\nmsg.payload = msg_text;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "d9c0c610.602188",
        "type": "function",
        "z": "af47c860.21273",
        "name": "",
        "func": "var outside_temp=flow.get('outside_temp') || 0;\nvar outside_max_temp=flow.get('outside_max_temp') || 0;\nvar outside_min_temp=flow.get('outside_min_temp') || 50;\n\nflow.set('outside_temp',msg.payload.temperature);\noutside_temp = msg.payload.temperature;\n\nif (msg.payload.temperature<outside_min_temp){\n    outside_min_temp = msg.payload.temperature;\n    flow.set('outside_min_temp',msg.payload.temperature);\n}\n\nif (msg.payload.temperature>outside_max_temp){\n    outside_max_temp = msg.payload.temperature;\n    flow.set('outside_max_temp',msg.payload.temperature);\n}\n\nmsg.outside_temp_text = \"NOW: \" + outside_temp + \" °C<br><font color = blue ><b> MIN </b></font>\" + outside_min_temp + \" %C<br><font color = red ><b> MAX </b></font>\" + outside_max_temp + \" %C<br>\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 890,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "3dfaca5b.bcc036",
        "type": "function",
        "z": "c0642d23.ec7808",
        "name": "Reset MIN/MAX",
        "func": "flow.set('server_outside_max_pressure',0);\nflow.set('server_outside_min_pressure',1100);\nflow.set('server_outside_max_umid',0);\nflow.set('server_outside_min_umid',100);\nflow.set('server_outside_max_temp',-30);\nflow.set('server_outside_min_temp',50);\n\nreturn;",
        "outputs": 0,
        "noerr": 0,
        "x": 1000,
        "y": 480,
        "wires": []
    },
    {
        "id": "5b83fb59.062034",
        "type": "delay",
        "z": "c0642d23.ec7808",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 760,
        "y": 480,
        "wires": [
            [
                "3dfaca5b.bcc036"
            ]
        ]
    },
    {
        "id": "48ca3099.6f0ec",
        "type": "ui_gauge",
        "z": "af47c860.21273",
        "name": "",
        "group": "75c39fed.9491e8",
        "order": 2,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "Temperatura",
        "label": "°C",
        "format": "{{msg.payload.temperature}}",
        "min": "-10",
        "max": "40",
        "colors": [
            "#3600b5",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "15",
        "seg2": "25",
        "x": 910,
        "y": 80,
        "wires": []
    },
    {
        "id": "3eca5251.0f30c6",
        "type": "ui_gauge",
        "z": "af47c860.21273",
        "name": "",
        "group": "75c39fed.9491e8",
        "order": 3,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "Umidità",
        "label": "%",
        "format": "{{msg.payload.humidity}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#ff7400",
            "#e6e600",
            "#4c38ca"
        ],
        "seg1": "35",
        "seg2": "65",
        "x": 900,
        "y": 160,
        "wires": []
    },
    {
        "id": "2aa0a906.37244e",
        "type": "ui_gauge",
        "z": "af47c860.21273",
        "name": "",
        "group": "75c39fed.9491e8",
        "order": 4,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "Pressione",
        "label": "hPa",
        "format": "{{msg.payload.pressure}}",
        "min": "800",
        "max": "1200",
        "colors": [
            "#ca3838",
            "#e6e600",
            "#00b500"
        ],
        "seg1": "",
        "seg2": "",
        "x": 900,
        "y": 240,
        "wires": []
    },
    {
        "id": "537541b3.b03828",
        "type": "mqtt in",
        "z": "af47c860.21273",
        "name": "",
        "topic": "tele/tasmotaMeteoCortile/SENSOR",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 220,
        "y": 160,
        "wires": [
            [
                "ab24b5b7.bd5408"
            ]
        ]
    },
    {
        "id": "ab24b5b7.bd5408",
        "type": "json",
        "z": "af47c860.21273",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 430,
        "y": 160,
        "wires": [
            [
                "2c7c38.62b2d3c8"
            ]
        ]
    },
    {
        "id": "b32fb244.38ed58",
        "type": "influxdb out",
        "z": "af47c860.21273",
        "influxdb": "95c76cc2.f1041",
        "name": "",
        "measurement": "Cortile",
        "precision": "",
        "retentionPolicy": "",
        "database": "Meteo",
        "retentionPolicyV18Flux": "",
        "org": "",
        "bucket": "",
        "x": 990,
        "y": 280,
        "wires": []
    },
    {
        "id": "753b2a52.977f0c",
        "type": "comment",
        "z": "af47c860.21273",
        "name": "SolarNode - 192.168.0.74",
        "info": "",
        "x": 630,
        "y": 60,
        "wires": []
    },
    {
        "id": "e1595177.c0a7b",
        "type": "comment",
        "z": "c0642d23.ec7808",
        "name": "Pulsante Refresh",
        "info": "",
        "x": 200,
        "y": 140,
        "wires": []
    },
    {
        "id": "822600a4.403b6",
        "type": "mqtt out",
        "z": "c0642d23.ec7808",
        "name": "",
        "topic": "cmnd/tasmotaSolarNode/STATUS",
        "qos": "0",
        "retain": "false",
        "broker": "ee95ae30.7fefe8",
        "x": 1020,
        "y": 180,
        "wires": []
    },
    {
        "id": "5fb90353.f5efd4",
        "type": "trigger",
        "z": "c0642d23.ec7808",
        "name": "STATUS 7 & 11",
        "op1": "7",
        "op2": "11",
        "op1type": "str",
        "op2type": "str",
        "duration": "500",
        "extend": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "outputs": 1,
        "x": 780,
        "y": 180,
        "wires": [
            [
                "822600a4.403b6"
            ]
        ]
    },
    {
        "id": "8eda742.f286688",
        "type": "ui_button",
        "z": "c0642d23.ec7808",
        "name": "Manual refresh",
        "group": "add34066.c25a9",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Refresh",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "{}",
        "payloadType": "json",
        "topic": "",
        "x": 500,
        "y": 180,
        "wires": [
            [
                "5fb90353.f5efd4",
                "a1dc1aa6.6e438"
            ]
        ]
    },
    {
        "id": "ec043f2e.6a2ec",
        "type": "ui_button",
        "z": "73b7c891.499c78",
        "name": "Pulsante switch interruttore",
        "group": "1a572bc4.5062c4",
        "order": 9,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "power_settings_new",
        "payload": "2",
        "payloadType": "num",
        "topic": "hmiSwitch",
        "x": 200,
        "y": 1100,
        "wires": [
            [
                "34b74c20.cc6c0c"
            ]
        ],
        "outputLabels": [
            "msg.background"
        ]
    },
    {
        "id": "48eabac7.fa1fac",
        "type": "function",
        "z": "c0642d23.ec7808",
        "name": "empty payload",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1000,
        "y": 380,
        "wires": [
            [
                "fbab9ff2.28e1e8"
            ]
        ]
    },
    {
        "id": "f23be1c2.d523c8",
        "type": "function",
        "z": "73b7c891.499c78",
        "name": "empty payload",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 730,
        "y": 1240,
        "wires": [
            [
                "2e737c3e.92fd14"
            ]
        ]
    },
    {
        "id": "3dce0314.77bf44",
        "type": "conf ping",
        "z": "92f9eb20.694dc8",
        "name": "",
        "host": "192.168.0.79",
        "timeout": "5",
        "requests": "1",
        "x": 330,
        "y": 500,
        "wires": [
            [
                "265f5634.d821fa"
            ]
        ]
    },
    {
        "id": "68c942e9.48d6cc",
        "type": "mqtt in",
        "z": "d4025d43.ce8fc",
        "name": "",
        "topic": "tele/tasmotaCamera/SENSOR",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 160,
        "y": 100,
        "wires": [
            [
                "265c2b66.ff6bf4"
            ]
        ]
    },
    {
        "id": "bcb918ff.5447b8",
        "type": "ui_gauge",
        "z": "d4025d43.ce8fc",
        "name": "Umidità",
        "group": "99f13696.ef7c58",
        "order": 3,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "Umidità",
        "label": "%",
        "format": "{{msg.payload.humidity}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "70",
        "seg2": "80",
        "x": 1100,
        "y": 220,
        "wires": []
    },
    {
        "id": "c5deda27.2751f",
        "type": "ui_gauge",
        "z": "d4025d43.ce8fc",
        "name": "Temperatura",
        "group": "99f13696.ef7c58",
        "order": 2,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "Temperatura",
        "label": "°C",
        "format": "{{msg.payload.temperature}}",
        "min": "0",
        "max": "50",
        "colors": [
            "#1100b5",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "18",
        "seg2": "25",
        "x": 1110,
        "y": 100,
        "wires": []
    },
    {
        "id": "8c0585b6.241ec",
        "type": "function",
        "z": "d4025d43.ce8fc",
        "name": "Esporta dati temperatura",
        "func": "var soffittaTempVal=flow.get('soffitta_temp') || 0;\nvar soffittaMaxTempVal=flow.get('soffitta_max_temp') || 0;\nvar soffittaMinTempVal=flow.get('soffitta_min_temp') || 50;\n\nsoffittaTempVal = msg.payload.temperature;\n\nif (soffittaTempVal<soffittaMinTempVal){\n    soffittaMinTempVal = soffittaTempVal;\n}\n\nif (soffittaTempVal>soffittaMaxTempVal){\n    soffittaMaxTempVal = soffittaTempVal;\n}\n\nflow.set('soffitta_temp', soffittaTempVal);\nflow.set('soffitta_max_temp', soffittaMaxTempVal);\nflow.set('soffitta_min_temp', soffittaMinTempVal);\n\nmsg.payload = {\n    temperature : soffittaTempVal,\n    soffittaMaxTemp : soffittaMaxTempVal,\n    soffittaMinTemp : soffittaMinTempVal\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 830,
        "y": 100,
        "wires": [
            [
                "c5deda27.2751f",
                "d82bab4b.a94868",
                "240ed2f0.00ad76"
            ]
        ]
    },
    {
        "id": "d82bab4b.a94868",
        "type": "ui_text",
        "z": "d4025d43.ce8fc",
        "group": "99f13696.ef7c58",
        "order": 4,
        "width": 3,
        "height": 1,
        "name": "TMAX",
        "label": "Massima: ",
        "format": "{{msg.payload.soffittaMaxTemp}} °C",
        "layout": "row-center",
        "x": 1090,
        "y": 140,
        "wires": []
    },
    {
        "id": "240ed2f0.00ad76",
        "type": "ui_text",
        "z": "d4025d43.ce8fc",
        "group": "99f13696.ef7c58",
        "order": 6,
        "width": 3,
        "height": 1,
        "name": "TMIN",
        "label": "Minima",
        "format": "{{msg.payload.soffittaMinTemp}} °C",
        "layout": "row-center",
        "x": 1090,
        "y": 180,
        "wires": []
    },
    {
        "id": "e1e9c27a.2f01e8",
        "type": "function",
        "z": "d4025d43.ce8fc",
        "name": "Esporta dati umidità",
        "func": "var soffittaUmidVal=flow.get('soffitta_umid') || 0;\nvar soffittaMaxUmidVal=flow.get('soffitta_max_umid') || 0;\nvar soffittaMinUmidVal=flow.get('soffitta_min_umid') || 50;\n\nsoffittaUmidVal = msg.payload.humidity;\n\nif (soffittaUmidVal<soffittaMinUmidVal){\n    soffittaMinUmidVal = soffittaUmidVal;\n}\n\nif (soffittaUmidVal>soffittaMaxUmidVal){\n    soffittaMaxUmidVal = soffittaUmidVal;\n}\n\nflow.set('soffitta_umid', soffittaUmidVal);\nflow.set('soffitta_max_umid', soffittaMaxUmidVal);\nflow.set('soffitta_min_umid', soffittaMinUmidVal);\n\nmsg.payload = {\n    humidity : soffittaUmidVal,\n    soffittaMaxTemp : soffittaMaxUmidVal,\n    soffittaMinTemp : soffittaMinUmidVal\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 820,
        "y": 220,
        "wires": [
            [
                "42cfd901.ee6328",
                "a077ca6d.783138",
                "bcb918ff.5447b8"
            ]
        ]
    },
    {
        "id": "42cfd901.ee6328",
        "type": "ui_text",
        "z": "d4025d43.ce8fc",
        "group": "99f13696.ef7c58",
        "order": 5,
        "width": 3,
        "height": 1,
        "name": "H MAX",
        "label": "Massimo: ",
        "format": "{{msg.payload.soffittaMaxTemp}} %",
        "layout": "row-center",
        "x": 1100,
        "y": 260,
        "wires": []
    },
    {
        "id": "a077ca6d.783138",
        "type": "ui_text",
        "z": "d4025d43.ce8fc",
        "group": "99f13696.ef7c58",
        "order": 7,
        "width": 3,
        "height": 1,
        "name": "H MIN",
        "label": "Minimo: ",
        "format": "{{msg.payload.soffittaMinTemp}} %",
        "layout": "row-center",
        "x": 1090,
        "y": 300,
        "wires": []
    },
    {
        "id": "dea035bf.dda548",
        "type": "telegrambot-command",
        "z": "d4025d43.ce8fc",
        "name": "",
        "bot": "c4e585d7.106718",
        "command": "/soffitta",
        "commandType": "str",
        "commandCase": false,
        "x": 130,
        "y": 460,
        "wires": [
            [
                "95b9a260.bc3c7"
            ]
        ]
    },
    {
        "id": "95b9a260.bc3c7",
        "type": "function",
        "z": "d4025d43.ce8fc",
        "name": "Invio misure",
        "func": "var soffitta_temp=flow.get('soffitta_temp') || 0;\nvar soffitta_max_temp=flow.get('soffitta_max_temp') || 0;\nvar soffitta_min_temp=flow.get('soffitta_min_temp') || 50;\nvar soffitta_umid=flow.get('soffitta_umid') || 0;\nvar soffitta_max_umid=flow.get('soffitta_max_umid') || 0;\nvar soffitta_min_umid=flow.get('soffitta_min_umid') || 100;\n\nvar currentdate = new Date();\nvar datetime = currentdate.getDate() + \"/\" + (currentdate.getMonth()+1) + \"/\" + currentdate.getFullYear() + \" - \" + currentdate.getHours() + \":\" +currentdate.getMinutes() + \":\" + currentdate.getSeconds();\n\nmsg.payload = datetime + \"\\nDati Soffitta:\\nTemperatura: \" + soffitta_temp + \" °C\\nTemperatura massima: \" + soffitta_max_temp + \" °C\\nTemperatura minima: \" + soffitta_min_temp + \" °C\\n\\nUmidità: \" + soffitta_umid +  \"%\\nUmidità massima: \" + soffitta_max_umid + \"%\\nUmidità minima: \" + soffitta_min_umid + \" %\\n\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 460,
        "wires": [
            [
                "7befb976.e0de"
            ]
        ]
    },
    {
        "id": "d9702195.a34848",
        "type": "comment",
        "z": "d4025d43.ce8fc",
        "name": "Comandi Telegram",
        "info": "",
        "x": 130,
        "y": 420,
        "wires": []
    },
    {
        "id": "b4c92b79.1ecbb8",
        "type": "comment",
        "z": "d4025d43.ce8fc",
        "name": "Camera - 192.168.0.79",
        "info": "",
        "x": 600,
        "y": 40,
        "wires": []
    },
    {
        "id": "265c2b66.ff6bf4",
        "type": "json",
        "z": "d4025d43.ce8fc",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 430,
        "y": 100,
        "wires": [
            [
                "c61615bd.dc8298"
            ]
        ]
    },
    {
        "id": "c61615bd.dc8298",
        "type": "function",
        "z": "d4025d43.ce8fc",
        "name": "DHT11",
        "func": "var temperatureVal;\nvar humidityVal;\n\nif('StatusSNS' in msg.payload){\n    temperatureVal = msg.payload.StatusSNS.DHT11.Temperature;\n    humidityVal = msg.payload.StatusSNS.DHT11.Humidity;\n}\nelse{\n    temperatureVal = msg.payload.DHT11.Temperature;\n    humidityVal = msg.payload.DHT11.Humidity;\n}\n\n\nmsg.payload = {\n    temperature : temperatureVal,\n    humidity : humidityVal\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 100,
        "wires": [
            [
                "8c0585b6.241ec",
                "e1e9c27a.2f01e8",
                "706391fc.5eae"
            ]
        ]
    },
    {
        "id": "706391fc.5eae",
        "type": "influxdb out",
        "z": "d4025d43.ce8fc",
        "influxdb": "95c76cc2.f1041",
        "name": "",
        "measurement": "camera",
        "precision": "",
        "retentionPolicy": "",
        "database": "Home",
        "retentionPolicyV18Flux": "",
        "org": "",
        "bucket": "",
        "x": 870,
        "y": 340,
        "wires": []
    },
    {
        "id": "bd84034.ab2fd",
        "type": "mqtt in",
        "z": "c0642d23.ec7808",
        "name": "",
        "topic": "stat/tasmotaSolarNode/RESULT",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 250,
        "y": 600,
        "wires": [
            [
                "985f7f47.2ea308"
            ]
        ]
    },
    {
        "id": "985f7f47.2ea308",
        "type": "json",
        "z": "c0642d23.ec7808",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 450,
        "y": 600,
        "wires": [
            [
                "6f058ffb.719ee"
            ]
        ]
    },
    {
        "id": "2313f09f.4897d8",
        "type": "comment",
        "z": "c0642d23.ec7808",
        "name": "Diagnostica",
        "info": "",
        "x": 190,
        "y": 560,
        "wires": []
    },
    {
        "id": "6f058ffb.719ee",
        "type": "join",
        "z": "c0642d23.ec7808",
        "name": "",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "1",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 590,
        "y": 600,
        "wires": [
            [
                "de8e8a55.88a938",
                "600739f0.cbec2"
            ]
        ]
    },
    {
        "id": "de8e8a55.88a938",
        "type": "function",
        "z": "c0642d23.ec7808",
        "name": "",
        "func": "var FV1Status;\nvar FV2Status;\nvar BATStatus;\nvar PHONStatus;\nvar VENTStatus;\n\nFV1 = {};\nFV2 = {};\nBAT = {};\nPHON = {};\nVENT = {};\n\n//FV1\nif(\"POWER1\" && \"POWER2\" in msg.payload){\n    if(msg.payload.POWER1 === \"OFF\" && msg.payload.POWER2 === \"OFF\"){\n        FV1Status = 0;\n    }\n    else if(msg.payload.POWER1 === \"ON\" && msg.payload.POWER2 === \"ON\"){\n        FV1Status = 1;\n    }\n    else{\n        FV1Status = 2\n    }\n}\n//FV2\nif(\"POWER3\" && \"POWER4\" in msg.payload){\n    if(msg.payload.POWER3 === \"OFF\" && msg.payload.POWER4 === \"OFF\"){\n        FV2Status = 0\n    }\n    else if(msg.payload.POWER3 === \"ON\" && msg.payload.POWER4 === \"ON\"){\n        FV2Status = 1\n    }\n    else{\n        FV2Status = 2\n    }\n}\n\n//BAT\nif(\"POWER5\" && \"POWER6\" in msg.payload){\n    if(msg.payload.POWER5 === \"OFF\" && msg.payload.POWER6 === \"OFF\"){\n        BATStatus = 0\n    }\n    else if(msg.payload.POWER5 === \"ON\" && msg.payload.POWER6 === \"ON\"){\n        BATStatus = 1;\n    }\n    else{\n        BATStatus = 2;\n    }\n}\n\n//PHONE\nif(\"POWER7\" in msg.payload){\n    if(msg.payload.POWER7 === \"OFF\"){\n        PHONStatus = 0\n    }\n    else if(msg.payload.POWER7 === \"ON\"){\n        PHONStatus = 1\n    }\n}\n\n//VENT\nif(\"POWER7\" in msg.payload){\n    if(msg.payload.POWER8 === \"OFF\"){\n        VENTStatus = 0\n    }\n    else if(msg.payload.POWER8 === \"ON\"){\n        VENTStatus = 1\n    }\n}\n\nFV1.payload = FV1Status;\nFV2.payload = FV2Status;\nBAT.payload = BATStatus;\nPHON.payload = PHONStatus;\nVENT.payload = VENTStatus;\n\nreturn [FV1, FV2, BAT, PHON, VENT];",
        "outputs": 5,
        "noerr": 0,
        "x": 770,
        "y": 600,
        "wires": [
            [],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "a1dc1aa6.6e438",
        "type": "mqtt out",
        "z": "c0642d23.ec7808",
        "name": "",
        "topic": "cmnd/tasmotaSolarNode/POWER0",
        "qos": "0",
        "retain": "false",
        "broker": "ee95ae30.7fefe8",
        "x": 1020,
        "y": 220,
        "wires": []
    },
    {
        "id": "1a24e0c1.1225d7",
        "type": "comment",
        "z": "d4fae0b8.1d7718",
        "name": "RCE",
        "info": "",
        "x": 90,
        "y": 480,
        "wires": []
    },
    {
        "id": "6c3db28e.3651b4",
        "type": "mqtt in",
        "z": "d4fae0b8.1d7718",
        "name": "",
        "topic": "rashome/rce",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 110,
        "y": 560,
        "wires": [
            [
                "36afdfa8.2f71c8"
            ]
        ]
    },
    {
        "id": "b04d4776.165a18",
        "type": "mqtt out",
        "z": "73b7c891.499c78",
        "name": "",
        "topic": "rashome/inverter/rce",
        "qos": "0",
        "retain": "false",
        "broker": "ee95ae30.7fefe8",
        "x": 780,
        "y": 1100,
        "wires": []
    },
    {
        "id": "560928d.007c9d8",
        "type": "comment",
        "z": "92f9eb20.694dc8",
        "name": "Speedtest",
        "info": "",
        "x": 120,
        "y": 980,
        "wires": []
    },
    {
        "id": "acbd84b8.5ff8e",
        "type": "ui_text",
        "z": "92f9eb20.694dc8",
        "group": "6433672e.d1cdd8",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Download",
        "format": "{{msg.payload.speeds.download}} Mbps",
        "layout": "row-spread",
        "x": 720,
        "y": 1100,
        "wires": []
    },
    {
        "id": "e7fa6778.8f28f8",
        "type": "ui_text",
        "z": "92f9eb20.694dc8",
        "group": "6433672e.d1cdd8",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Upload",
        "format": "{{msg.payload.speeds.upload}} Mbps",
        "layout": "row-spread",
        "x": 720,
        "y": 1140,
        "wires": []
    },
    {
        "id": "9dc610d0.3efc2",
        "type": "ui_text",
        "z": "92f9eb20.694dc8",
        "group": "6433672e.d1cdd8",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "IP",
        "format": "{{msg.payload.client.ip}}",
        "layout": "row-spread",
        "x": 710,
        "y": 1220,
        "wires": []
    },
    {
        "id": "7a995ac8.eefd2c",
        "type": "ui_text",
        "z": "92f9eb20.694dc8",
        "group": "6433672e.d1cdd8",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "ISP",
        "format": "{{msg.payload.client.isp}}",
        "layout": "row-spread",
        "x": 710,
        "y": 1260,
        "wires": []
    },
    {
        "id": "834d5654.7c4408",
        "type": "ui_text",
        "z": "92f9eb20.694dc8",
        "group": "6433672e.d1cdd8",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "<font color= lime > Client </font>",
        "format": "",
        "layout": "row-spread",
        "x": 800,
        "y": 1180,
        "wires": []
    },
    {
        "id": "aae692ed.a0bff",
        "type": "ui_text",
        "z": "92f9eb20.694dc8",
        "group": "6433672e.d1cdd8",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "<font color= lime > Speed </font>",
        "format": "",
        "layout": "row-spread",
        "x": 800,
        "y": 1060,
        "wires": []
    },
    {
        "id": "2e8b8379.fc71fc",
        "type": "ui_text",
        "z": "92f9eb20.694dc8",
        "group": "6433672e.d1cdd8",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "<font color = red ><b> CONNESSIONE </b></font>",
        "format": "",
        "layout": "row-spread",
        "x": 850,
        "y": 1020,
        "wires": []
    },
    {
        "id": "fe859a0.1b663e8",
        "type": "ui_button",
        "z": "92f9eb20.694dc8",
        "name": "",
        "group": "6433672e.d1cdd8",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Avvia Speed Test",
        "tooltip": "",
        "color": "red",
        "bgcolor": "lime",
        "icon": "",
        "payload": "Speed Test avviato",
        "payloadType": "str",
        "topic": "",
        "x": 150,
        "y": 1120,
        "wires": [
            [
                "fbb85211.39792",
                "1987623f.b2f2de"
            ]
        ]
    },
    {
        "id": "24ba01db.d46af6",
        "type": "ui_text",
        "z": "92f9eb20.694dc8",
        "group": "e5f11687.9d23",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Country",
        "format": "{{msg.payload.server.country}}",
        "layout": "row-spread",
        "x": 720,
        "y": 1460,
        "wires": []
    },
    {
        "id": "4527be3e.c136d",
        "type": "ui_text",
        "z": "92f9eb20.694dc8",
        "group": "e5f11687.9d23",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Distance",
        "format": "{{msg.payload.server.distance}} km",
        "layout": "row-spread",
        "x": 720,
        "y": 1420,
        "wires": []
    },
    {
        "id": "3c478cef.e4644c",
        "type": "ui_text",
        "z": "92f9eb20.694dc8",
        "group": "e5f11687.9d23",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Location",
        "format": "{{msg.payload.server.location}}",
        "layout": "row-spread",
        "x": 720,
        "y": 1380,
        "wires": []
    },
    {
        "id": "5719c03d.75cea8",
        "type": "ui_text",
        "z": "92f9eb20.694dc8",
        "group": "e5f11687.9d23",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Host",
        "format": "{{msg.payload.server.host}}",
        "layout": "row-spread",
        "x": 710,
        "y": 1340,
        "wires": []
    },
    {
        "id": "94802070.4aad38",
        "type": "ui_text",
        "z": "92f9eb20.694dc8",
        "group": "e5f11687.9d23",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "<font color= lime > Test Server </font>",
        "format": "",
        "layout": "row-spread",
        "x": 810,
        "y": 1300,
        "wires": []
    },
    {
        "id": "591dc4d8.3b710c",
        "type": "inject",
        "z": "92f9eb20.694dc8",
        "name": "restart (15s delay)",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "90",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 170,
        "y": 1080,
        "wires": [
            [
                "fbb85211.39792"
            ]
        ]
    },
    {
        "id": "f8ec710.22a979",
        "type": "mqtt out",
        "z": "e987eb50.a7ba78",
        "name": "",
        "topic": "cmnd/tasmotaRicaricaNissan/STATUS",
        "qos": "0",
        "retain": "false",
        "broker": "ee95ae30.7fefe8",
        "x": 910,
        "y": 880,
        "wires": []
    },
    {
        "id": "2ad3b99c.6bb386",
        "type": "mqtt in",
        "z": "e987eb50.a7ba78",
        "name": "",
        "topic": "stat/tasmotaRicaricaNissan/STATUS8",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 210,
        "y": 200,
        "wires": [
            [
                "72a56144.6e403"
            ]
        ]
    },
    {
        "id": "72a56144.6e403",
        "type": "json",
        "z": "e987eb50.a7ba78",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 450,
        "y": 200,
        "wires": [
            [
                "c2e5cc3a.32c5e8",
                "a01d8694.b2bef"
            ]
        ]
    },
    {
        "id": "51b486be.cef798",
        "type": "mqtt in",
        "z": "e987eb50.a7ba78",
        "name": "",
        "topic": "tele/tasmotaRicaricaNissan/SENSOR",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 210,
        "y": 260,
        "wires": [
            [
                "72a56144.6e403"
            ]
        ]
    },
    {
        "id": "7e7193ee.c7c72c",
        "type": "ui_gauge",
        "z": "e987eb50.a7ba78",
        "name": "Tensione",
        "group": "2616b179.49ac16",
        "order": 2,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "Tensione",
        "label": "V",
        "format": "{{msg.payload}}",
        "min": "210",
        "max": "250",
        "colors": [
            "#e6e600",
            "#00b500",
            "#ca3838"
        ],
        "seg1": "220",
        "seg2": "240",
        "x": 1240,
        "y": 40,
        "wires": []
    },
    {
        "id": "cd25c7c6.6062d",
        "type": "ui_gauge",
        "z": "e987eb50.a7ba78",
        "name": "Corrente",
        "group": "2616b179.49ac16",
        "order": 3,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "Corrente",
        "label": "A",
        "format": "{{msg.payload}}",
        "min": "0",
        "max": "17",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "13",
        "seg2": "14",
        "x": 1160,
        "y": 140,
        "wires": []
    },
    {
        "id": "4434b330.12340c",
        "type": "ui_button",
        "z": "e987eb50.a7ba78",
        "name": "Manual refresh",
        "group": "5aaf39ff.58f93",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Refresh",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "8",
        "payloadType": "str",
        "topic": "",
        "x": 440,
        "y": 880,
        "wires": [
            [
                "77686a88.4c70f4",
                "e8a64a5c.eece88"
            ]
        ]
    },
    {
        "id": "9b0769cb.b950d8",
        "type": "ui_text",
        "z": "e987eb50.a7ba78",
        "group": "5aaf39ff.58f93",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Energia totale",
        "format": "{{msg.payload.energyTotal}} kWh",
        "layout": "row-spread",
        "x": 1060,
        "y": 540,
        "wires": []
    },
    {
        "id": "714fe196.c8d6d",
        "type": "ui_text",
        "z": "e987eb50.a7ba78",
        "group": "5aaf39ff.58f93",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Potenza",
        "format": "{{msg.payload}} W",
        "layout": "row-spread",
        "x": 1400,
        "y": 280,
        "wires": []
    },
    {
        "id": "d233702d.ba8b2",
        "type": "ui_text",
        "z": "e987eb50.a7ba78",
        "group": "5aaf39ff.58f93",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Potenza apparente",
        "format": "{{msg.payload.apparentPower}} VA",
        "layout": "row-spread",
        "x": 1070,
        "y": 300,
        "wires": []
    },
    {
        "id": "b3bfa2f4.aaf278",
        "type": "ui_text",
        "z": "e987eb50.a7ba78",
        "group": "5aaf39ff.58f93",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Potenza reattiva",
        "format": "{{msg.payload.reactivePower}} VAr",
        "layout": "row-spread",
        "x": 1060,
        "y": 260,
        "wires": []
    },
    {
        "id": "acb6a601.2d00e",
        "type": "ui_text",
        "z": "e987eb50.a7ba78",
        "group": "5aaf39ff.58f93",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Cos fi",
        "format": "{{msg.payload.factor}}",
        "layout": "row-spread",
        "x": 1030,
        "y": 340,
        "wires": []
    },
    {
        "id": "6f7e6b6a.86c174",
        "type": "ui_gauge",
        "z": "e987eb50.a7ba78",
        "name": "Potenza",
        "group": "2616b179.49ac16",
        "order": 4,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "Potenza",
        "label": "W",
        "format": "{{msg.payload}}",
        "min": "0",
        "max": "3300",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "13",
        "seg2": "14",
        "x": 1400,
        "y": 240,
        "wires": []
    },
    {
        "id": "c2e5cc3a.32c5e8",
        "type": "function",
        "z": "e987eb50.a7ba78",
        "name": "SonOff Direct (Full STAT",
        "func": "//flow variables\nvar currentVal = flow.get('currentVal') || 0;\nvar voltageVal = flow.get('voltageVal') || 0;\nvar powerVal = flow.get('powerVal') || 0;\nvar factorVal = flow.get('factorVal') || 0;\nvar reactivePowerVal = flow.get('reactivePowerVal') || 0;\nvar apparentPowerVal = flow.get('apparentPowerVal') || 0;\nvar uptimeVal = flow.get('uptimeVal') || 0;\nvar timeVal = flow.get('timeVal') || 0;\nvar energyTotalVal = flow.get('energyTotalVal') || 0;\nvar energyYesterdayVal = flow.get('energyYesterdayVal') || 0;\nvar energyTodayVal = flow.get('energyTodayVal') || 0;\n\nmsg2 = {};\n\n/*\n    Here I check which proprieties exist.\n    If I interrogate the SonOff directly I'll have a StatusSNS in the proprieties.\n    The telemetry payload doesn't have that propriety. I did this so I can read\n    from multiple sources and output the same date from just one function block\n*/\n\nif('StatusSNS' in msg.payload){\n    factorVal = msg.payload.StatusSNS.ENERGY.Factor;\n    currentVal = msg.payload.StatusSNS.ENERGY.Current;\n    voltageVal = msg.payload.StatusSNS.ENERGY.Voltage;\n\tapparentPowerVal = msg.payload.StatusSNS.ENERGY.ApparentPower;\n\tpowerVal = msg.payload.StatusSNS.ENERGY.Power;\n\treactivePowerVal = msg.payload.StatusSNS.ENERGY.ReactivePower;\n}\nelse if('ENERGY' in msg.payload){\n    factorVal = msg.payload.ENERGY.Factor;\n    currentVal = msg.payload.ENERGY.Current;\n    voltageVal = msg.payload.ENERGY.Voltage;\n    apparentPowerVal = msg.payload.ENERGY.ApparentPower;\n\tpowerVal = msg.payload.ENERGY.Power;\n\treactivePowerVal = msg.payload.ENERGY.ReactivePower;\n\tenergyTotalVal = msg.payload.ENERGY.Total;\n\tenergyYesterdayVal = msg.payload.ENERGY.Yesterday;\n\tenergyTodayVal = msg.payload.ENERGY.Today;\n}\nelse if('UptimeSec' in msg.payload || 'Time' in msg.payload){\n    uptimeVal = msg.payload.UptimeSec;\n    timeVal = msg.payload.Time;\n}\n\n\n//Here I set the flow variables for external use (only this flow)\nflow.set('voltageVal', voltageVal);\nflow.set('currentVal', currentVal);\nflow.set('powerVal', powerVal);\nflow.set('reactivePowerVal', reactivePowerVal);\nflow.set('apparentPowerVal', apparentPowerVal);\nflow.set('factorVal', factorVal);\nflow.set('uptimeVal', uptimeVal);\nflow.set('timeVal', timeVal);\nflow.set('energyTotalVal', energyTotalVal);\nflow.set('energyYesterdayVal', energyYesterdayVal);\nflow.set('energyTodayVal', energyTodayVal);\n\n// Output 1 (for database)\nmsg.payload = {\n    voltage : Number(voltageVal.toFixed(2)),\n    current : Number(currentVal.toFixed(2)),\n    power : Number(powerVal.toFixed(2)),\n    reactivePower : Number(reactivePowerVal.toFixed(2)),\n    apparentPower : Number(apparentPowerVal.toFixed(2)),\n    factor : Number(factorVal.toFixed(2)),\n    energyTotal : Number(energyTotalVal),\n    energyYesterday : Number(energyYesterdayVal),\n    energyToday : Number(energyTodayVal)\n}\n\nmsg2.payload = {\n    uptime : uptimeVal,\n    time : timeVal\n}\nreturn [msg, msg2];",
        "outputs": 2,
        "noerr": 0,
        "x": 670,
        "y": 200,
        "wires": [
            [
                "d233702d.ba8b2",
                "b3bfa2f4.aaf278",
                "acb6a601.2d00e",
                "29eacfd0.d54b28",
                "cf44ca1.f64d938",
                "9b0769cb.b950d8",
                "147628ce.91a337",
                "ca40e9b4.5fb278",
                "f2516948.10ae58",
                "5e697145.af8e5",
                "f66b8b09.3198c",
                "fdbf09a2.72ddb8",
                "550f4339.42b544",
                "b537b18e.1e8948",
                "37426923.391d76",
                "c9c346e3.bbe86"
            ],
            []
        ]
    },
    {
        "id": "cf44ca1.f64d938",
        "type": "ui_text",
        "z": "e987eb50.a7ba78",
        "group": "5aaf39ff.58f93",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Energia ieri",
        "format": "{{msg.payload.energyYesterday}} kWh",
        "layout": "row-spread",
        "x": 1050,
        "y": 460,
        "wires": []
    },
    {
        "id": "29eacfd0.d54b28",
        "type": "ui_text",
        "z": "e987eb50.a7ba78",
        "group": "5aaf39ff.58f93",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Energia oggi",
        "format": "{{msg.payload.energyToday}} kWh",
        "layout": "row-spread",
        "x": 1050,
        "y": 380,
        "wires": []
    },
    {
        "id": "ef87e7a4.5b6aa8",
        "type": "comment",
        "z": "e987eb50.a7ba78",
        "name": "Pulsante refresh",
        "info": "",
        "x": 140,
        "y": 840,
        "wires": []
    },
    {
        "id": "add01fe8.1fde6",
        "type": "mqtt in",
        "z": "e987eb50.a7ba78",
        "name": "",
        "topic": "tele/tasmotaRicaricaNissan/STATE",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 200,
        "y": 140,
        "wires": [
            [
                "72a56144.6e403"
            ]
        ]
    },
    {
        "id": "147628ce.91a337",
        "type": "influxdb out",
        "z": "e987eb50.a7ba78",
        "influxdb": "95c76cc2.f1041",
        "name": "",
        "measurement": "Ricarica Nissan",
        "precision": "",
        "retentionPolicy": "",
        "database": "Energy",
        "retentionPolicyV18Flux": "",
        "org": "",
        "bucket": "",
        "x": 1170,
        "y": 740,
        "wires": []
    },
    {
        "id": "9c1103bf.2f5dd",
        "type": "mqtt out",
        "z": "e987eb50.a7ba78",
        "name": "",
        "topic": "cmnd/tasmotaRicaricaNissan/POWER0",
        "qos": "0",
        "retain": "false",
        "broker": "ee95ae30.7fefe8",
        "x": 920,
        "y": 920,
        "wires": []
    },
    {
        "id": "318436cd.9de0c2",
        "type": "comment",
        "z": "e987eb50.a7ba78",
        "name": "SonOff Nissan - 192.168.0.80",
        "info": "",
        "x": 820,
        "y": 40,
        "wires": []
    },
    {
        "id": "77686a88.4c70f4",
        "type": "function",
        "z": "e987eb50.a7ba78",
        "name": "empty payload",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 920,
        "wires": [
            [
                "9c1103bf.2f5dd"
            ]
        ]
    },
    {
        "id": "e8a64a5c.eece88",
        "type": "trigger",
        "z": "e987eb50.a7ba78",
        "name": "STATUS 8 & 11",
        "op1": "8",
        "op2": "11",
        "op1type": "str",
        "op2type": "str",
        "duration": "500",
        "extend": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "outputs": 1,
        "x": 640,
        "y": 880,
        "wires": [
            [
                "f8ec710.22a979"
            ]
        ]
    },
    {
        "id": "301f6475.6bdd14",
        "type": "comment",
        "z": "e987eb50.a7ba78",
        "name": "Switch",
        "info": "",
        "x": 110,
        "y": 980,
        "wires": []
    },
    {
        "id": "798b25a1.311f3c",
        "type": "mqtt out",
        "z": "e987eb50.a7ba78",
        "name": "",
        "topic": "cmnd/tasmotaRicaricaNissan/POWER0",
        "qos": "0",
        "retain": "false",
        "broker": "ee95ae30.7fefe8",
        "x": 1100,
        "y": 1020,
        "wires": []
    },
    {
        "id": "c52eb7a.f330548",
        "type": "mqtt out",
        "z": "e987eb50.a7ba78",
        "name": "",
        "topic": "cmnd/tasmotaRicaricaNissan/STATUS",
        "qos": "0",
        "retain": "false",
        "broker": "ee95ae30.7fefe8",
        "x": 1270,
        "y": 1060,
        "wires": []
    },
    {
        "id": "c7341eef.59b9d8",
        "type": "mqtt in",
        "z": "e987eb50.a7ba78",
        "name": "",
        "topic": "stat/tasmotaRicaricaNissan/RESULT",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 200,
        "y": 400,
        "wires": [
            [
                "4f07fc90.943eec"
            ]
        ]
    },
    {
        "id": "79718c3c.10446c",
        "type": "mqtt in",
        "z": "e987eb50.a7ba78",
        "name": "",
        "topic": "stat/tasmotaRicaricaNissan/POWER",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 200,
        "y": 1020,
        "wires": [
            [
                "1c9cd7ac.771198"
            ]
        ]
    },
    {
        "id": "3bf372ef.d6a7ee",
        "type": "ui_button",
        "z": "e987eb50.a7ba78",
        "name": "Pulsante switch interruttore",
        "group": "4f75689c.e4dd2",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "Interruttore ricarica",
        "color": "",
        "bgcolor": "",
        "icon": "power_settings_new",
        "payload": "2",
        "payloadType": "num",
        "topic": "hmiSwitch",
        "x": 640,
        "y": 1100,
        "wires": [
            [
                "47b4975.6e0d968"
            ]
        ],
        "outputLabels": [
            "msg.background"
        ]
    },
    {
        "id": "1e3ac765.3fa791",
        "type": "mqtt out",
        "z": "e987eb50.a7ba78",
        "name": "",
        "topic": "rasYard/ricaricaNissan/rce",
        "qos": "0",
        "retain": "false",
        "broker": "ee95ae30.7fefe8",
        "x": 910,
        "y": 1620,
        "wires": []
    },
    {
        "id": "6910d81a.8485f8",
        "type": "comment",
        "z": "e987eb50.a7ba78",
        "name": "Diagnostica",
        "info": "",
        "x": 130,
        "y": 320,
        "wires": []
    },
    {
        "id": "7363b082.ae7c2",
        "type": "change",
        "z": "e987eb50.a7ba78",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "relayStatus",
                "pt": "flow",
                "to": "payload.POWER",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.POWER",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 400,
        "wires": [
            [
                "f9f3406e.719e2"
            ]
        ]
    },
    {
        "id": "4f07fc90.943eec",
        "type": "json",
        "z": "e987eb50.a7ba78",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 400,
        "wires": [
            [
                "7363b082.ae7c2"
            ]
        ]
    },
    {
        "id": "1c9cd7ac.771198",
        "type": "function",
        "z": "e987eb50.a7ba78",
        "name": "mode",
        "func": "if(msg.payload === \"ON\"){\n    msg.payload = true;\n}\nelse if(msg.payload === \"OFF\"){\n    msg.payload = false;\n}\n\nmsg.payload = \"{\\\"on\\\":\" + msg.payload + \"}\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 530,
        "y": 1020,
        "wires": [
            [
                "91bc66f9.2b5f98"
            ]
        ]
    },
    {
        "id": "91bc66f9.2b5f98",
        "type": "nora-outlet",
        "z": "e987eb50.a7ba78",
        "devicename": "Ricarica Nissan",
        "roomhint": "Cortile",
        "name": "",
        "passthru": false,
        "nora": "e264142d.421a28",
        "topic": "googleHome",
        "onvalue": "1",
        "onvalueType": "num",
        "offvalue": "0",
        "offvalueType": "num",
        "x": 680,
        "y": 1020,
        "wires": [
            [
                "47b4975.6e0d968"
            ]
        ]
    },
    {
        "id": "ca40e9b4.5fb278",
        "type": "ui_text",
        "z": "e987eb50.a7ba78",
        "group": "81745724.cb54f8",
        "order": 1,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "Energia totale",
        "format": "{{msg.payload.energyTotal}} kWh",
        "layout": "row-spread",
        "x": 1060,
        "y": 580,
        "wires": []
    },
    {
        "id": "f347d7d1.57c6b",
        "type": "ui_text",
        "z": "e987eb50.a7ba78",
        "group": "5aaf39ff.58f93",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Costo totale",
        "format": "{{msg.payload}} €",
        "layout": "row-spread",
        "x": 1470,
        "y": 660,
        "wires": []
    },
    {
        "id": "f2516948.10ae58",
        "type": "change",
        "z": "e987eb50.a7ba78",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "energyTotalVal",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 660,
        "wires": [
            [
                "832964b1.d133d8"
            ]
        ]
    },
    {
        "id": "d7eae73c.ccf818",
        "type": "ui_text",
        "z": "e987eb50.a7ba78",
        "group": "81745724.cb54f8",
        "order": 2,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "Costo totale",
        "format": "{{msg.payload}} €",
        "layout": "row-spread",
        "x": 1470,
        "y": 700,
        "wires": []
    },
    {
        "id": "92066fbf.987e3",
        "type": "mqtt out",
        "z": "f6bd4cff.b20c7",
        "name": "",
        "topic": "cmnd/tasmotaRicaricaNissan/POWER0",
        "qos": "0",
        "retain": "false",
        "broker": "ee95ae30.7fefe8",
        "x": 1820,
        "y": 520,
        "wires": []
    },
    {
        "id": "583e86dc.540d28",
        "type": "function",
        "z": "f6bd4cff.b20c7",
        "name": "Sgancio Nissan",
        "func": "var maxPower = 3400;\nif (msg.payload.hasOwnProperty('power')){\n    if(msg.payload.power > maxPower){\n        msg.rce = \"RICARICA NISSAN: Richiesta sgancio per potenza totale elevata (\" + msg.payload.power + \" kW)\";\n        msg.payload = 0;\n        return msg;\n    }\n}\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "x": 1040,
        "y": 520,
        "wires": [
            [
                "46e6fbd.324e284"
            ]
        ]
    },
    {
        "id": "a4e94ad7.965628",
        "type": "conf ping",
        "z": "92f9eb20.694dc8",
        "name": "",
        "host": "192.168.0.80",
        "timeout": "5",
        "requests": "1",
        "x": 330,
        "y": 540,
        "wires": [
            [
                "885220ca.cfb5b8"
            ]
        ]
    },
    {
        "id": "1e232f93.0c843",
        "type": "change",
        "z": "f6bd4cff.b20c7",
        "name": "Msg text google",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Sgancio ricarica EV per massima potenza",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1740,
        "y": 560,
        "wires": [
            [
                "dc911276.ae62d8"
            ]
        ]
    },
    {
        "id": "4d875189.8793e8",
        "type": "trigger",
        "z": "e987eb50.a7ba78",
        "name": "STATUS 8 & 11",
        "op1": "8",
        "op2": "11",
        "op1type": "str",
        "op2type": "str",
        "duration": "500",
        "extend": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "outputs": 1,
        "x": 1020,
        "y": 1060,
        "wires": [
            [
                "c52eb7a.f330548"
            ]
        ]
    },
    {
        "id": "46e6fbd.324e284",
        "type": "delay",
        "z": "f6bd4cff.b20c7",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "4",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 1320,
        "y": 520,
        "wires": [
            [
                "92066fbf.987e3",
                "1e232f93.0c843",
                "e9dfe549.fe0678",
                "93b14f51.77b228"
            ]
        ]
    },
    {
        "id": "db843270.a24648",
        "type": "mqtt out",
        "z": "f6bd4cff.b20c7",
        "name": "",
        "topic": "rasYard/ricaricaNissan/rce",
        "qos": "0",
        "retain": "false",
        "broker": "ee95ae30.7fefe8",
        "x": 1950,
        "y": 600,
        "wires": []
    },
    {
        "id": "33f96552.cf0aca",
        "type": "ui_text",
        "z": "73b7c891.499c78",
        "group": "1a572bc4.5062c4",
        "order": 6,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "Energia totale",
        "format": "{{msg.payload.energyTotal}} kWh",
        "layout": "row-spread",
        "x": 1060,
        "y": 620,
        "wires": []
    },
    {
        "id": "ae16a399.4da198",
        "type": "ui_numeric",
        "z": "e987eb50.a7ba78",
        "name": "",
        "label": "% to charge",
        "tooltip": "",
        "group": "4f75689c.e4dd2",
        "order": 7,
        "width": 0,
        "height": 0,
        "wrap": true,
        "passthru": true,
        "topic": "",
        "format": "{{value}} %",
        "min": 0,
        "max": "100",
        "step": "10",
        "x": 330,
        "y": 1240,
        "wires": [
            [
                "90659800.6af918",
                "864575db.8f2878",
                "10e5d09e.22d8f7",
                "150daf55.592a19",
                "64cf5bb.64248a4"
            ]
        ]
    },
    {
        "id": "90659800.6af918",
        "type": "function",
        "z": "e987eb50.a7ba78",
        "name": "Calc Charge Data",
        "func": "var energyStartChargeVal = flow.get('energyTotalVal');\nvar energyStopChargeVal = Number((40.0 / 100.0 * msg.payload + energyStartChargeVal).toFixed(2));\nflow.set('energyStartChargeVal', energyStartChargeVal);\nflow.set('energyStopChargeVal', energyStopChargeVal);\nflow.set('energyToChargeVal', energyStopChargeVal-energyStartChargeVal);\nflow.set('energyPercToChargeVal', msg.payload);\nif(msg.payload > 0){\n    flow.set('chargeComplete', false);\n}",
        "outputs": 0,
        "noerr": 0,
        "x": 530,
        "y": 1260,
        "wires": []
    },
    {
        "id": "3095758a.6ff95a",
        "type": "function",
        "z": "e987eb50.a7ba78",
        "d": true,
        "name": "Charge Control v3.0",
        "func": "const MAX_BATTERY_CAPACITY = 40.0;\nconst ENERGY_1_PERC = MAX_BATTERY_CAPACITY / 100.0;\n\nfunction ChargerController(){\n    this.isCharged = false;\n    this.energyPercToCharge = 0;\n    this.energyToCharge = 0;\n    this.energyValue = 0;\n    this.chargeValAtStart = 0;\n    this.chargeValAtStop = 0;\n    \n    this.update = function(){\n        this.energyValue = flow.get('energyTotalVal') || 0;\n        this.energyPercToCharge = flow.get('energyPercToChargeVal');\n    }\n    this.startCharge = function(){\n        this.isCharged = false;\n        this.energyPercToCharge = flow.get('energyPercToChargeVal');\n        this.chargeValAtStart =  this.energyValue;\n        this.chargeValAtStop = Number((ENERGY_1_PERC * this.energyPercToCharge + this.chargeValAtStart).toFixed(2));\n        msg.rce = \"CHARGE CONTROLLER: Ricarica avviata\";\n    }\n    this.stopCharge = function(){\n        this.isCharged = true;\n        this.chargeValAtStop =  this.energyValue;\n        msg.rce = \"CHARGE CONTROLLER: Ricarica arrestata: Caricati \" + (this.energyValue - this.chargeValAtStart) + \"kWh\";\n    }\n}\n\nconst STANDBY_POWER = 5;\nconst POWER_CHARGING_STATE = 2000;\n\nclass PowerMonitor{\n    this.powerVal = 0;\n    this.isBalancing = false\n    this.isCharging = false;\n    this.isStandby = false;\n    this.update = function(){\n        this.powerVal = flow.get('powerVal') || 0;\n        if (powerVal < STANDBY_POWER){\n            this.isBalancing = false\n            this.isCharging = false;\n            this.isStandby = true;\n        }\n        else if(powerVal > POWER_CHARGING_STATE){\n            this.isBalancing = false\n            this.isCharging = true;\n            this.isStandby = false;\n        }\n        else{\n            this.isBalancing = true\n            this.isCharging = true;\n            this.isStandby = false;\n        }\n    }\n}\n\n\nvar chargerController =  new ChargerController();\nchargerController.update();\n\nif (chargerController.isCharged){\n    chargerController.stopCharge().update();\n    msg.payload = 0;\n}\nelse if(chargerController.energyPercToCharge >0){\n    chargerController.startCharge().update();\n    msg.payload = 1;\n}\n\nvar powerMonitor = context.get('powerMonitor') || new PowerMonitor();\nvar waitingLoad = context.get('waitingLoad') || 0;\nvar timoutWaitingLoad = context.get('timoutWaitingLoad') || 0;\n\nif (powerMonitor.isStandby) {\n    if (powerMonitor.powerVal >0){\n        if(!waitingLoad){\n        timoutWaitingLoad = setTimeout(function(){\n\t\t    msg.rce = \"RICARICA NISSAN: Sgancio per assenza carico collegato\";\n            msg.payload = 0;\n            waitingLoad = 0;\n            node.send(msg);}, 300000);}\n        waitingLoad = 1;\n\t\tcontext.set('timeoutForLoadWaiting', timeoutForLoadWaiting);\n    }\n    else{\n        clearTimeout(timoutWaitingLoad);\n        waitingLoad = 0;\n    }\n}\n\ncontext.set('powerMonitor', powerMonitor);\ncontext.set('chargerController', chargerController);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 580,
        "y": 1760,
        "wires": [
            [
                "9664fd3c.68c368"
            ]
        ]
    },
    {
        "id": "a0c1da59.eb17c",
        "type": "function",
        "z": "e987eb50.a7ba78",
        "name": "calcChargeRemaining",
        "func": "var energyStartChargeVal = flow.get('energyStartChargeVal');\nvar energyStopChargeVal = flow.get('energyStopChargeVal');\nvar energyTotalVal = flow.get('energyTotalVal');\nvar relay = flow.get('relayStatus');\n\n//return percentage \nvar percentage = (energyTotalVal-energyStartChargeVal) / (energyStopChargeVal-energyStartChargeVal) * 100;\nif (percentage < 0 || isNaN(percentage)){\n    percentage = 0;\n} else if (percentage > 100){\n    percentage = 100;\n}\nflow.set('percentageVal', percentage);\nmsg.payload = Math.round(percentage);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 1540,
        "wires": [
            [
                "2c1b8a7a.e7bb66"
            ]
        ]
    },
    {
        "id": "2c1b8a7a.e7bb66",
        "type": "ui_level",
        "z": "e987eb50.a7ba78",
        "group": "4f75689c.e4dd2",
        "order": 11,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Quota recharged",
        "colorHi": "#00e600",
        "colorWarn": "#ff9900",
        "colorNormal": "#b30200",
        "colorOff": "#595959",
        "min": 0,
        "max": 100,
        "segWarn": "",
        "segHigh": "",
        "unit": "%",
        "layout": "sh",
        "channelA": "",
        "channelB": "",
        "decimals": "1",
        "animations": "off",
        "shape": "3",
        "colorschema": "fixed",
        "textoptions": "default",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "segments",
        "peakmode": false,
        "peaktime": 3000,
        "x": 690,
        "y": 1540,
        "wires": []
    },
    {
        "id": "864575db.8f2878",
        "type": "trigger",
        "z": "e987eb50.a7ba78",
        "name": "",
        "op1": "",
        "op2": "energyStopChargeVal",
        "op1type": "nul",
        "op2type": "flow",
        "duration": "250",
        "extend": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "outputs": 1,
        "x": 520,
        "y": 1300,
        "wires": [
            [
                "78217602.71f5"
            ]
        ]
    },
    {
        "id": "fd105f8.dbe9ea",
        "type": "ui_button",
        "z": "e987eb50.a7ba78",
        "name": "Refresh icon",
        "group": "4f75689c.e4dd2",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": true,
        "label": "",
        "tooltip": "Aggiorna dati",
        "color": "",
        "bgcolor": "",
        "icon": "refresh",
        "payload": "8",
        "payloadType": "str",
        "topic": "",
        "x": 430,
        "y": 920,
        "wires": [
            [
                "77686a88.4c70f4",
                "e8a64a5c.eece88"
            ]
        ]
    },
    {
        "id": "78217602.71f5",
        "type": "ui_text",
        "z": "e987eb50.a7ba78",
        "group": "81745724.cb54f8",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Fine ricarica",
        "format": "{{msg.payload}} kWh",
        "layout": "row-spread",
        "x": 690,
        "y": 1300,
        "wires": []
    },
    {
        "id": "6b65cbf1.15d28c",
        "type": "ui_text",
        "z": "73b7c891.499c78",
        "group": "1a572bc4.5062c4",
        "order": 5,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "Energia oggi",
        "format": "{{msg.payload.energyToday}} kWh",
        "layout": "row-spread",
        "x": 1050,
        "y": 460,
        "wires": []
    },
    {
        "id": "f1c1f3b0.d26b88",
        "type": "ui_text",
        "z": "73b7c891.499c78",
        "group": "1a572bc4.5062c4",
        "order": 7,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "Energia ieri",
        "format": "{{msg.payload.energyYesterday}} kWh",
        "layout": "row-spread",
        "x": 1050,
        "y": 540,
        "wires": []
    },
    {
        "id": "6e84f21c.821cc4",
        "type": "ui_level",
        "z": "d4fae0b8.1d7718",
        "group": "a63d0a.95063af8",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "CPU 0",
        "label": "CPU",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": "1600",
        "segWarn": "",
        "segHigh": "",
        "unit": "",
        "layout": "sh",
        "channelA": "",
        "channelB": "",
        "decimals": 0,
        "animations": "soft",
        "shape": "3",
        "colorschema": "fixed",
        "textoptions": "default",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "segments",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 690,
        "y": 140,
        "wires": []
    },
    {
        "id": "81d27fde.3a0dd8",
        "type": "ui_level",
        "z": "d4fae0b8.1d7718",
        "group": "a63d0a.95063af8",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "MEM",
        "label": "RAM",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": 100,
        "segWarn": "",
        "segHigh": "",
        "unit": "",
        "layout": "sh",
        "channelA": "",
        "channelB": "",
        "decimals": 0,
        "animations": "off",
        "shape": "3",
        "colorschema": "fixed",
        "textoptions": "default",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "auto",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 690,
        "y": 220,
        "wires": []
    },
    {
        "id": "a30a1fcc.02143",
        "type": "ui_level",
        "z": "d4fae0b8.1d7718",
        "group": "a63d0a.95063af8",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "SSD",
        "label": "SDD",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": 100,
        "segWarn": "",
        "segHigh": "",
        "unit": "",
        "layout": "sh",
        "channelA": "",
        "channelB": "",
        "decimals": 0,
        "animations": "off",
        "shape": "3",
        "colorschema": "rainbow",
        "textoptions": "default",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "auto",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 690,
        "y": 260,
        "wires": []
    },
    {
        "id": "10e5d09e.22d8f7",
        "type": "trigger",
        "z": "e987eb50.a7ba78",
        "name": "",
        "op1": "",
        "op2": "energyToChargeVal",
        "op1type": "nul",
        "op2type": "flow",
        "duration": "250",
        "extend": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "outputs": 1,
        "x": 520,
        "y": 1340,
        "wires": [
            [
                "bd6613f4.4f9a58"
            ]
        ]
    },
    {
        "id": "48fccdbf.62ffc4",
        "type": "ui_text",
        "z": "e987eb50.a7ba78",
        "group": "4f75689c.e4dd2",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Energia da ricaricare",
        "format": "{{msg.payload.toFixed(2)}} kW",
        "layout": "row-spread",
        "x": 960,
        "y": 1340,
        "wires": []
    },
    {
        "id": "5e697145.af8e5",
        "type": "ui_text",
        "z": "e987eb50.a7ba78",
        "group": "81745724.cb54f8",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Energia oggi",
        "format": "{{msg.payload.energyToday}} kWh",
        "layout": "row-spread",
        "x": 1050,
        "y": 420,
        "wires": []
    },
    {
        "id": "f66b8b09.3198c",
        "type": "ui_text",
        "z": "e987eb50.a7ba78",
        "group": "81745724.cb54f8",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Energia ieri",
        "format": "{{msg.payload.energyYesterday}} kWh",
        "layout": "row-spread",
        "x": 1050,
        "y": 500,
        "wires": []
    },
    {
        "id": "fdbf09a2.72ddb8",
        "type": "trigger",
        "z": "e987eb50.a7ba78",
        "name": "",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "250",
        "extend": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "outputs": 1,
        "x": 1060,
        "y": 620,
        "wires": [
            [
                "7b7c91b8.784b7"
            ]
        ]
    },
    {
        "id": "7b7c91b8.784b7",
        "type": "function",
        "z": "e987eb50.a7ba78",
        "name": "",
        "func": "var energyYesterdayVal = flow.get('energyYesterdayVal');\nvar energyTodayVal = flow.get('energyTodayVal');\nmsg.payload = Number(energyYesterdayVal + energyTodayVal).toFixed(1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1210,
        "y": 620,
        "wires": [
            [
                "ad760248.d17128"
            ]
        ]
    },
    {
        "id": "ad760248.d17128",
        "type": "ui_text",
        "z": "e987eb50.a7ba78",
        "group": "81745724.cb54f8",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Energia ultime 24H",
        "format": "{{msg.payload.toFixed(2)}} kWh",
        "layout": "row-spread",
        "x": 1490,
        "y": 620,
        "wires": []
    },
    {
        "id": "150daf55.592a19",
        "type": "trigger",
        "z": "e987eb50.a7ba78",
        "name": "",
        "op1": "",
        "op2": "energyToChargeVal",
        "op1type": "nul",
        "op2type": "flow",
        "duration": "250",
        "extend": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "outputs": 1,
        "x": 520,
        "y": 1420,
        "wires": [
            [
                "9d9dae1b.65f218"
            ]
        ]
    },
    {
        "id": "430bfe57.9b21",
        "type": "ui_text",
        "z": "e987eb50.a7ba78",
        "group": "4f75689c.e4dd2",
        "order": 10,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Costo stimato",
        "format": "{{msg.payload}} €",
        "layout": "row-spread",
        "x": 940,
        "y": 1420,
        "wires": []
    },
    {
        "id": "96874be2.6c0c3",
        "type": "buffer-array",
        "z": "d4fae0b8.1d7718",
        "name": "rceArray",
        "bufferLen": "20",
        "startWhenFilled": false,
        "x": 620,
        "y": 520,
        "wires": [
            [
                "7ca247be.6ea7d"
            ]
        ]
    },
    {
        "id": "7ca247be.6ea7d",
        "type": "change",
        "z": "d4fae0b8.1d7718",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rceArray",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 520,
        "wires": [
            [
                "385a7abd.9e41de"
            ]
        ]
    },
    {
        "id": "ea14255b.1df758",
        "type": "ui_table",
        "z": "d4fae0b8.1d7718",
        "group": "589d4e9f.f50178",
        "name": "",
        "order": 1,
        "width": "17",
        "height": "6",
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 830,
        "y": 560,
        "wires": []
    },
    {
        "id": "502db862.bb04f8",
        "type": "comment",
        "z": "d4fae0b8.1d7718",
        "name": "Restart-node-red",
        "info": "",
        "x": 120,
        "y": 760,
        "wires": []
    },
    {
        "id": "3884c8e7.c23d38",
        "type": "ui_button",
        "z": "d4fae0b8.1d7718",
        "name": "Restart Node-Red",
        "group": "a63d0a.95063af8",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "RIAVVIA NODERED",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "autorenew",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 130,
        "y": 800,
        "wires": [
            [
                "e1ceaa9c.09fe"
            ]
        ]
    },
    {
        "id": "385a7abd.9e41de",
        "type": "function",
        "z": "d4fae0b8.1d7718",
        "name": "Array2Table",
        "func": "var rceArray = flow.get('rceArray');\nvar i;\nvar output = \"[\";\nfor (i=rceArray.length; i>0 ;i--){\n    output += \"{\";\n    output += \"\\\"Message\\\":\\\"\" + rceArray[i] + \"\\\"}\";\n    if (i>1){\n        output = output + \",\";\n    }\n}\nmsg.payload = output + \"]\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 560,
        "wires": [
            [
                "7c2cf42e.273e44"
            ]
        ]
    },
    {
        "id": "7c2cf42e.273e44",
        "type": "json",
        "z": "d4fae0b8.1d7718",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 710,
        "y": 560,
        "wires": [
            [
                "ea14255b.1df758"
            ]
        ]
    },
    {
        "id": "e1ceaa9c.09fe",
        "type": "exec",
        "z": "d4fae0b8.1d7718",
        "command": "node-red-restart",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 320,
        "y": 800,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "8cae199b.898e4",
        "type": "ui_button",
        "z": "e987eb50.a7ba78",
        "name": "Reset",
        "group": "4f75689c.e4dd2",
        "order": 5,
        "width": "2",
        "height": "1",
        "passthru": true,
        "label": "",
        "tooltip": "Reset ricarica",
        "color": "",
        "bgcolor": "",
        "icon": "delete_forever",
        "payload": "0",
        "payloadType": "num",
        "topic": "",
        "x": 170,
        "y": 1280,
        "wires": [
            [
                "ae16a399.4da198"
            ]
        ],
        "outputLabels": [
            "msg.background"
        ]
    },
    {
        "id": "3cf2916d.539cc6",
        "type": "ui_button",
        "z": "e987eb50.a7ba78",
        "name": "Full",
        "group": "4f75689c.e4dd2",
        "order": 6,
        "width": "2",
        "height": "1",
        "passthru": true,
        "label": "",
        "tooltip": "Ricarica 100%",
        "color": "",
        "bgcolor": "",
        "icon": "battery_charging_full",
        "payload": "100",
        "payloadType": "num",
        "topic": "",
        "x": 170,
        "y": 1320,
        "wires": [
            [
                "ae16a399.4da198"
            ]
        ],
        "outputLabels": [
            "msg.background"
        ]
    },
    {
        "id": "e37340c4.dbef4",
        "type": "ui_button",
        "z": "d4fae0b8.1d7718",
        "name": "",
        "group": "589d4e9f.f50178",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "REFRESH",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "Aggiornamento Array",
        "payloadType": "str",
        "topic": "",
        "x": 110,
        "y": 520,
        "wires": [
            [
                "36afdfa8.2f71c8"
            ]
        ]
    },
    {
        "id": "6d756d07.55bcb4",
        "type": "mqtt out",
        "z": "d4fae0b8.1d7718",
        "name": "",
        "topic": "rashome/rce",
        "qos": "0",
        "retain": "false",
        "broker": "ee95ae30.7fefe8",
        "x": 250,
        "y": 720,
        "wires": []
    },
    {
        "id": "ed3fc117.716ba",
        "type": "inject",
        "z": "d4fae0b8.1d7718",
        "name": "Boot",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "RASPBERRY: sistema avviato",
        "payloadType": "str",
        "x": 90,
        "y": 720,
        "wires": [
            [
                "6d756d07.55bcb4"
            ]
        ]
    },
    {
        "id": "64cf5bb.64248a4",
        "type": "within-time-switch",
        "z": "e987eb50.a7ba78",
        "name": "",
        "nameInt": "",
        "positionConfig": "ea6aed1e.d46f38",
        "startTime": "07:00",
        "startTimeType": "entered",
        "startOffset": 0,
        "startOffsetType": "none",
        "startOffsetMultiplier": 60000,
        "endTime": "23:00",
        "endTimeType": "entered",
        "endOffset": 0,
        "endOffsetType": "none",
        "endOffsetMultiplier": 60000,
        "timeDays": "1,2,3,4,5,6",
        "timeOnlyOddDays": false,
        "timeOnlyEvenDays": false,
        "timeMonths": "*",
        "timedatestart": "",
        "timedateend": "",
        "propertyStart": "",
        "propertyStartType": "none",
        "propertyStartCompare": "true",
        "propertyStartThreshold": "",
        "propertyStartThresholdType": "num",
        "startTimeAlt": "",
        "startTimeAltType": "entered",
        "startOffsetAlt": 0,
        "startOffsetAltType": "none",
        "startOffsetAltMultiplier": 60000,
        "propertyEnd": "",
        "propertyEndType": "none",
        "propertyEndCompare": "true",
        "propertyEndThreshold": "",
        "propertyEndThresholdType": "num",
        "endTimeAlt": "",
        "endTimeAltType": "entered",
        "endOffsetAlt": 0,
        "endOffsetAltType": "none",
        "endOffsetAltMultiplier": 60000,
        "tsCompare": "0",
        "x": 510,
        "y": 1220,
        "wires": [
            [
                "ddd05b95.37f6c8"
            ],
            [
                "77e97bc.f94c384"
            ]
        ]
    },
    {
        "id": "955cf66b.a03a6",
        "type": "comment",
        "z": "e987eb50.a7ba78",
        "name": "Avvio ricarica",
        "info": "",
        "x": 110,
        "y": 1160,
        "wires": []
    },
    {
        "id": "5ccc4ea0.5d25f8",
        "type": "change",
        "z": "73b7c891.499c78",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.energyTotal",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 700,
        "wires": [
            [
                "8fead9b7.594978"
            ]
        ]
    },
    {
        "id": "5e0d9995.7c6ff8",
        "type": "ui_text",
        "z": "73b7c891.499c78",
        "group": "e72636c8.15cc7",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Spesa risparmiata",
        "format": "{{msg.payload.energyCost}} €",
        "layout": "row-spread",
        "x": 1410,
        "y": 700,
        "wires": []
    },
    {
        "id": "b1102ee3.06eba8",
        "type": "within-time-switch",
        "z": "d4fae0b8.1d7718",
        "name": "",
        "nameInt": "",
        "positionConfig": "ea6aed1e.d46f38",
        "startTime": "8:00",
        "startTimeType": "entered",
        "startOffset": 0,
        "startOffsetType": "none",
        "startOffsetMultiplier": 60000,
        "endTime": "22:00",
        "endTimeType": "entered",
        "endOffset": 0,
        "endOffsetType": "none",
        "endOffsetMultiplier": 60000,
        "timeDays": "*",
        "timeOnlyOddDays": false,
        "timeOnlyEvenDays": false,
        "timeMonths": "*",
        "timedatestart": "",
        "timedateend": "",
        "propertyStart": "",
        "propertyStartType": "none",
        "propertyStartCompare": "true",
        "propertyStartThreshold": "",
        "propertyStartThresholdType": "num",
        "startTimeAlt": "",
        "startTimeAltType": "entered",
        "startOffsetAlt": 0,
        "startOffsetAltType": "none",
        "startOffsetAltMultiplier": 60000,
        "propertyEnd": "",
        "propertyEndType": "none",
        "propertyEndCompare": "true",
        "propertyEndThreshold": "",
        "propertyEndThresholdType": "num",
        "endTimeAlt": "",
        "endTimeAltType": "entered",
        "endOffsetAlt": 0,
        "endOffsetAltType": "none",
        "endOffsetAltMultiplier": 60000,
        "tsCompare": "0",
        "x": 350,
        "y": 880,
        "wires": [
            [
                "2a0b2027.c6136",
                "f70e77ec.bf51a8"
            ],
            []
        ]
    },
    {
        "id": "2a0b2027.c6136",
        "type": "googlehome-notify",
        "z": "d4fae0b8.1d7718",
        "server": "ce4a15b0.cec888",
        "name": "Google Mini",
        "x": 530,
        "y": 880,
        "wires": []
    },
    {
        "id": "f70e77ec.bf51a8",
        "type": "googlehome-notify",
        "z": "d4fae0b8.1d7718",
        "server": "d5d0657e.399e18",
        "name": "Google Nest Hub",
        "x": 550,
        "y": 920,
        "wires": []
    },
    {
        "id": "f2d41079.b60818",
        "type": "comment",
        "z": "d4fae0b8.1d7718",
        "name": "Notifiche audio",
        "info": "",
        "x": 120,
        "y": 840,
        "wires": []
    },
    {
        "id": "8e60d8b.3296228",
        "type": "mqtt in",
        "z": "d4fae0b8.1d7718",
        "name": "",
        "topic": "rashome/googleNotify",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 140,
        "y": 880,
        "wires": [
            [
                "b1102ee3.06eba8"
            ]
        ]
    },
    {
        "id": "dc911276.ae62d8",
        "type": "mqtt out",
        "z": "f6bd4cff.b20c7",
        "name": "",
        "topic": "rashome/googleNotify",
        "qos": "",
        "retain": "",
        "broker": "ee95ae30.7fefe8",
        "x": 1940,
        "y": 560,
        "wires": []
    },
    {
        "id": "1987623f.b2f2de",
        "type": "mqtt out",
        "z": "92f9eb20.694dc8",
        "name": "",
        "topic": "rashome/googleNotify",
        "qos": "",
        "retain": "",
        "broker": "ee95ae30.7fefe8",
        "x": 360,
        "y": 1160,
        "wires": []
    },
    {
        "id": "735951a0.c00aa8",
        "type": "mqtt out",
        "z": "e987eb50.a7ba78",
        "name": "",
        "topic": "rasYard/ricaricaNissan/rce",
        "qos": "0",
        "retain": "false",
        "broker": "ee95ae30.7fefe8",
        "x": 1170,
        "y": 1200,
        "wires": []
    },
    {
        "id": "36afdfa8.2f71c8",
        "type": "function",
        "z": "d4fae0b8.1d7718",
        "name": "RCE timestamp",
        "func": "//Genero la stringa della data\nvar currentdate = new Date();\nvar datetimeStr = currentdate.getDate() + \"/\" + (currentdate.getMonth()+1) + \"/\" + currentdate.getFullYear() + \" - \" + currentdate.getHours() + \":\" +currentdate.getMinutes() + \":\" + currentdate.getSeconds();\n\nmsg.payload = datetimeStr + \" \" + msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 520,
        "wires": [
            [
                "96874be2.6c0c3"
            ]
        ]
    },
    {
        "id": "550f4339.42b544",
        "type": "function",
        "z": "e987eb50.a7ba78",
        "name": "Time left",
        "func": "var energyStopChargeVal = flow.get('energyStopChargeVal');\nvar energyLeft = energyStopChargeVal - msg.payload.energyTotal;\nvar timeLeft = energyLeft * 1000 / msg.payload.power;\nvar relayStatus = flow.get('relayStatus');\n\nif (timeLeft <= 0 || relayStatus === \"OFF\"){\n    msg.payload = \"Ricarica completata\";\n} else{\n    var hourLeft = Math.floor(timeLeft);\n    var minuteLeft = timeLeft - Math.floor(timeLeft);\n    minuteLeft = 60 * minuteLeft;\n    msg.payload = hourLeft + \"h \" + minuteLeft.toFixed(0) + \"m\";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1040,
        "y": 780,
        "wires": [
            [
                "808b32d8.8ea79"
            ]
        ]
    },
    {
        "id": "808b32d8.8ea79",
        "type": "ui_text",
        "z": "e987eb50.a7ba78",
        "group": "4f75689c.e4dd2",
        "order": 1,
        "width": 5,
        "height": 2,
        "name": "",
        "label": "Tempo rimasto",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1260,
        "y": 780,
        "wires": []
    },
    {
        "id": "9093f3e5.794cc",
        "type": "ui_text",
        "z": "f6bd4cff.b20c7",
        "group": "9c73e713.f5be88",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Corrente",
        "format": "{{msg.payload.current}} A",
        "layout": "row-spread",
        "x": 1020,
        "y": 160,
        "wires": []
    },
    {
        "id": "868c51ce.07469",
        "type": "ui_text",
        "z": "f6bd4cff.b20c7",
        "group": "9c73e713.f5be88",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Tensione",
        "format": "{{msg.payload.voltage}} V",
        "layout": "row-spread",
        "x": 1020,
        "y": 120,
        "wires": []
    },
    {
        "id": "49be6c5.5b61f94",
        "type": "ui_level",
        "z": "f6bd4cff.b20c7",
        "group": "58065d19.b74584",
        "order": 10,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Potenza Casa",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": "4500",
        "segWarn": "",
        "segHigh": "",
        "unit": "W",
        "layout": "sh",
        "channelA": "",
        "channelB": "",
        "decimals": "1",
        "animations": "reactive",
        "shape": 2,
        "colorschema": "fixed",
        "textoptions": "default",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "",
        "colorFromTheme": true,
        "textAnimations": true,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": true,
        "peaktime": "3000",
        "x": 1210,
        "y": 240,
        "wires": []
    },
    {
        "id": "a4d26f85.762d48",
        "type": "ui_level",
        "z": "73b7c891.499c78",
        "group": "58065d19.b74584",
        "order": 10,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Potenza Inverter",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": "200",
        "segWarn": "",
        "segHigh": "",
        "unit": "W",
        "layout": "sh",
        "channelA": "",
        "channelB": "",
        "decimals": "1",
        "animations": "soft",
        "shape": 2,
        "colorschema": "fixed",
        "textoptions": "default",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": true,
        "peaktime": "3000",
        "x": 1230,
        "y": 60,
        "wires": []
    },
    {
        "id": "147f1d2.4ef9563",
        "type": "change",
        "z": "73b7c891.499c78",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.power",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 60,
        "wires": [
            [
                "a4d26f85.762d48"
            ]
        ]
    },
    {
        "id": "9dbfdd80.edef5",
        "type": "ui_level",
        "z": "e987eb50.a7ba78",
        "group": "58065d19.b74584",
        "order": 10,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Potenza Nissan",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": "2300",
        "segWarn": "",
        "segHigh": "",
        "unit": "W",
        "layout": "sh",
        "channelA": "",
        "channelB": "",
        "decimals": "1",
        "animations": "soft",
        "shape": 2,
        "colorschema": "fixed",
        "textoptions": "default",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "peaktime": "3000",
        "x": 1390,
        "y": 160,
        "wires": []
    },
    {
        "id": "18e8ca9a.bcb28d",
        "type": "time-inject",
        "z": "73b7c891.499c78",
        "d": true,
        "name": "Turn ON on sunrise",
        "nameInt": "turnOnSunrise:⏲ blue hour dawn start↷ = 1",
        "positionConfig": "ea6aed1e.d46f38",
        "props": [
            {
                "p": "",
                "pt": "msgPayload",
                "v": "1",
                "vt": "num",
                "o": "",
                "oT": "none",
                "oM": "60000",
                "f": 0,
                "fS": 0,
                "fT": "UNIX timestamp (ms)",
                "fI": "0",
                "next": true,
                "days": ""
            },
            {
                "p": "",
                "pt": "msgTopic",
                "v": "turnOnSunrise",
                "vt": "str",
                "o": "",
                "oT": "none",
                "oM": "60000",
                "f": 0,
                "fS": 0,
                "fT": "UNIX timestamp (ms)",
                "fI": "0",
                "next": true,
                "days": ""
            }
        ],
        "injectTypeSelect": "time",
        "intervalCount": 1,
        "intervalCountType": "num",
        "intervalCountMultiplier": 60000,
        "time": "blueHourDawnStart",
        "timeType": "pdsTime",
        "offset": "60",
        "offsetType": "num",
        "offsetMultiplier": 60000,
        "timeEnd": "",
        "timeEndType": "entered",
        "timeEndOffset": 0,
        "timeEndOffsetType": "none",
        "timeEndOffsetMultiplier": 60000,
        "timeDays": "*",
        "timeOnlyOddDays": false,
        "timeOnlyEvenDays": false,
        "timeMonths": "*",
        "timedatestart": "",
        "timedateend": "",
        "property": "",
        "propertyType": "none",
        "propertyCompare": "true",
        "propertyThreshold": "",
        "propertyThresholdType": "num",
        "timeAlt": "",
        "timeAltType": "entered",
        "timeAltDays": "*",
        "timeAltOnlyOddDays": false,
        "timeAltOnlyEvenDays": false,
        "timeAltMonths": "*",
        "timeAltOffset": 0,
        "timeAltOffsetType": "none",
        "timeAltOffsetMultiplier": 60000,
        "once": false,
        "onceDelay": 0.1,
        "recalcTime": 2,
        "x": 170,
        "y": 1020,
        "wires": [
            [
                "34b74c20.cc6c0c"
            ]
        ]
    },
    {
        "id": "88b5800f.79cf88",
        "type": "time-inject",
        "z": "73b7c891.499c78",
        "d": true,
        "name": "Turn OFF on sunset",
        "nameInt": "turnOffSunset:⏲ sunset↶ = 0",
        "positionConfig": "ea6aed1e.d46f38",
        "props": [
            {
                "p": "",
                "pt": "msgPayload",
                "v": "0",
                "vt": "num",
                "o": "",
                "oT": "none",
                "oM": "60000",
                "f": 0,
                "fS": 0,
                "fT": "UNIX timestamp (ms)",
                "fI": "0",
                "next": true,
                "days": ""
            },
            {
                "p": "",
                "pt": "msgTopic",
                "v": "turnOffSunset",
                "vt": "str",
                "o": "",
                "oT": "none",
                "oM": "60000",
                "f": 0,
                "fS": 0,
                "fT": "UNIX timestamp (ms)",
                "fI": "0",
                "next": true,
                "days": ""
            }
        ],
        "injectTypeSelect": "time",
        "intervalCount": 1,
        "intervalCountType": "num",
        "intervalCountMultiplier": 60000,
        "time": "sunset",
        "timeType": "pdsTime",
        "offset": "-90",
        "offsetType": "num",
        "offsetMultiplier": 60000,
        "timeEnd": "",
        "timeEndType": "entered",
        "timeEndOffset": 0,
        "timeEndOffsetType": "none",
        "timeEndOffsetMultiplier": 60000,
        "timeDays": "*",
        "timeOnlyOddDays": false,
        "timeOnlyEvenDays": false,
        "timeMonths": "*",
        "timedatestart": "",
        "timedateend": "",
        "property": "",
        "propertyType": "none",
        "propertyCompare": "true",
        "propertyThreshold": "",
        "propertyThresholdType": "num",
        "timeAlt": "",
        "timeAltType": "entered",
        "timeAltDays": "*",
        "timeAltOnlyOddDays": false,
        "timeAltOnlyEvenDays": false,
        "timeAltMonths": "*",
        "timeAltOffset": 0,
        "timeAltOffsetType": "none",
        "timeAltOffsetMultiplier": 60000,
        "once": false,
        "onceDelay": 0.1,
        "recalcTime": 2,
        "x": 170,
        "y": 1060,
        "wires": [
            [
                "34b74c20.cc6c0c"
            ]
        ]
    },
    {
        "id": "34b74c20.cc6c0c",
        "type": "function",
        "z": "73b7c891.499c78",
        "name": "",
        "func": "if (msg.topic == \"turnOnSunrise\"){\n    msg.rce = \"INVERTER: Richiesta ON da sun-position\";\n} else if (msg.topic == \"turnOffSunset\"){\n    msg.rce = \"INVERTER: Richiesta OFF da sun-position\";\n} else if (msg.topic == \"hmiSwitch\"){\n    msg.rce = \"INVERTER: Richiesta switch INT da HMI\";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 1060,
        "wires": [
            [
                "3200adb2.62039a",
                "4b844ba5.07291c",
                "eed9a3a8.6e4a2"
            ]
        ]
    },
    {
        "id": "b6391832.531ae",
        "type": "function",
        "z": "3d691d23.14dac2",
        "name": "energy2Money",
        "func": "var energy = msg.payload;\nvar costoEnergia = energy * 0.0634;\nvar costoPerditeDiRete = energy / 100 * 20 * 0.0634;\nvar costoDispacciamento = energy * 0.018294;\nvar costoSbilanciamento = energy * 0.000128;\nvar quotaEnergia = energy * 0.00761;\nvar quotaEnergiaPerequativi = energy * 0.00072;\n\nvar costoTotale = costoEnergia + costoPerditeDiRete + costoDispacciamento + costoSbilanciamento + quotaEnergia + quotaEnergiaPerequativi;\nmsg.payload = {\n    energyCost : Number(costoTotale.toFixed(2))\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 200,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "8fead9b7.594978",
        "type": "subflow:3d691d23.14dac2",
        "z": "73b7c891.499c78",
        "x": 1240,
        "y": 700,
        "wires": [
            [
                "5e0d9995.7c6ff8",
                "5091a593.13dea4"
            ]
        ]
    },
    {
        "id": "c2d2fac7.dc61c",
        "type": "function",
        "z": "d0a57a20.e89aa",
        "name": "energy2Money",
        "func": "var energia = msg.payload;\nconst PREZZO_MEDIO_KW = 0.18;\n\nvar costoTotale = energia * 0.18;\nmsg.payload = costoTotale;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 200,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "5091a593.13dea4",
        "type": "ui_text",
        "z": "73b7c891.499c78",
        "group": "1a572bc4.5062c4",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Spesa risparmiata",
        "format": "{{msg.payload.energyCost}} €",
        "layout": "row-spread",
        "x": 1410,
        "y": 740,
        "wires": []
    },
    {
        "id": "e9dfe549.fe0678",
        "type": "delay",
        "z": "f6bd4cff.b20c7",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "hours",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1300,
        "y": 560,
        "wires": [
            [
                "dfe63515.42ccd"
            ]
        ]
    },
    {
        "id": "dfe63515.42ccd",
        "type": "function",
        "z": "f6bd4cff.b20c7",
        "name": "Tentativo ripresa ricarica",
        "func": "var powerVal = flow.get('powerVal') || 0;\nif (powerVal < 1000.0){\n    msg.rce = \"RICARICA NISSAN: Ripresa ricarica automatica\";\n    msg.payload = 1;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1350,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "2c7c38.62b2d3c8",
        "type": "function",
        "z": "af47c860.21273",
        "name": "BME280",
        "func": "var temperatureVal;\nvar humidityVal;\nvar pressureVal;\nvar dewpointVal\n\ntemperatureVal = msg.payload.BME280.Temperature;\nhumidityVal = msg.payload.BME280.Humidity;\npressureVal = msg.payload.BME280.Pressure;\ndewpointVal = msg.payload.BME280.DewPoint;\n\nmsg.payload = {\n    temperature : temperatureVal,\n    humidity : humidityVal,\n    pressure : pressureVal,\n    dewpoint : dewpointVal\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 660,
        "y": 160,
        "wires": [
            [
                "3eca5251.0f30c6",
                "d9c0c610.602188",
                "48ca3099.6f0ec",
                "2aa0a906.37244e",
                "b32fb244.38ed58",
                "4a03085e.222bb",
                "98af3603.f6171",
                "24a4eed3.c8eefa",
                "12fbc5c3.e9ceba",
                "ad9aaaaa.91f35"
            ]
        ]
    },
    {
        "id": "df0d23dc.984eb",
        "type": "json",
        "z": "d4fae0b8.1d7718",
        "d": true,
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 310,
        "y": 1260,
        "wires": [
            [
                "88ef5141.00dc08",
                "132eb598.dbdf42"
            ]
        ]
    },
    {
        "id": "f7853a60.e9ed9",
        "type": "mqtt in",
        "z": "d4fae0b8.1d7718",
        "d": true,
        "name": "",
        "topic": "boincGrid/S7",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 110,
        "y": 1260,
        "wires": [
            [
                "df0d23dc.984eb"
            ]
        ]
    },
    {
        "id": "2e7da48f.e12f84",
        "type": "mqtt in",
        "z": "d4fae0b8.1d7718",
        "d": true,
        "name": "",
        "topic": "boincGrid/mediaTab",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 130,
        "y": 1300,
        "wires": [
            [
                "df0d23dc.984eb"
            ]
        ]
    },
    {
        "id": "2770f984.df4bde",
        "type": "mqtt in",
        "z": "d4fae0b8.1d7718",
        "d": true,
        "name": "",
        "topic": "boincGrid/S3neo",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 120,
        "y": 1340,
        "wires": [
            [
                "df0d23dc.984eb"
            ]
        ]
    },
    {
        "id": "88ef5141.00dc08",
        "type": "function",
        "z": "d4fae0b8.1d7718",
        "d": true,
        "name": "BOINC Grid Management",
        "func": "var startCharge = 20;\nvar stopCharge = 80;\n\nvar S7ChgOk = flow.get('S7ChgOk') || true;\nvar mediaTabChgOk = flow.get('mediaTabChgOk') || true;\nvar S3neoChgOk = flow.get('S3neoChgOk') || true;\n//flow.set('relay', relay);\n\nswitch (msg.payload.device){\n    case \"S7\":\n        if (msg.payload.battery < startCharge){\n            S7ChgOk = false;\n            flow.set('S7ChgOk', S7ChgOk);\n        } else if(msg.payload.battery > stopCharge){\n            S7ChgOk = true;\n            flow.set('S7ChgOk', S7ChgOk);\n        }\n        break;\n    case \"mediaTab\":\n        if (msg.payload.battery < startCharge){\n            mediaTabChgOk = false;\n            flow.set('mediaTabChgOk', mediaTabChgOk);\n        } else if(msg.payload.battery > stopCharge){\n            mediaTabChgOk = true;\n            flow.set('mediaTabChgOk', mediaTabChgOk);\n        }\n        break;\n    case \"S3neo\":\n        if (msg.payload.battery < startCharge){\n            S3neoChgOk = false;\n            flow.set('S3neoChgOk', S3neoChgOk);\n        } else if(msg.payload.battery > stopCharge){\n            S3neoChgOk = true;\n            flow.set('S3neoChgOk', S3neoChgOk);\n        }\n        break\n}\n\nif(!S7ChgOk || !mediaTabChgOk || !S3neoChgOk){\n    msg.payload = 1;\n    msg.rce = \"BOINC Grid: Richiesta ricarica grid\";\n} else{\n    msg.payload = 0;\n    msg.rce = \"BOINC Grid: Carica sufficiente\";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 1300,
        "wires": [
            [
                "3a6463f8.89e57c"
            ]
        ]
    },
    {
        "id": "3a6463f8.89e57c",
        "type": "mqtt out",
        "z": "d4fae0b8.1d7718",
        "d": true,
        "name": "",
        "topic": "boincGrid/request",
        "qos": "0",
        "retain": "",
        "broker": "ee95ae30.7fefe8",
        "x": 770,
        "y": 1300,
        "wires": []
    },
    {
        "id": "132eb598.dbdf42",
        "type": "switch",
        "z": "d4fae0b8.1d7718",
        "d": true,
        "name": "",
        "property": "payload.device",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "S7",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "mediaTab",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "S3neo",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 470,
        "y": 1260,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "c608be70.c8dca",
        "type": "mqtt in",
        "z": "c0642d23.ec7808",
        "name": "",
        "topic": "tele/tasmotaSolarNode/STATE",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 220,
        "y": 80,
        "wires": [
            [
                "6e0913c7.047094"
            ]
        ]
    },
    {
        "id": "6e0913c7.047094",
        "type": "json",
        "z": "c0642d23.ec7808",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 450,
        "y": 80,
        "wires": [
            [
                "9f155ec1.2dd0a"
            ]
        ]
    },
    {
        "id": "9f155ec1.2dd0a",
        "type": "function",
        "z": "c0642d23.ec7808",
        "name": "",
        "func": "flow.set('relayStatus', msg.payload.POWER)\n\nif(msg.payload.POWER === \"ON\"){\n    msg.payload = {\n        \"POWER\" : 100\n    }\n}else if(msg.payload.POWER === \"OFF\"){\n    msg.payload = {\n        \"POWER\" : 0\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "fc1d155.e078068",
        "type": "comment",
        "z": "d4fae0b8.1d7718",
        "name": "Reset statistiche - 2h dopo Zenith solare",
        "info": "",
        "x": 200,
        "y": 1020,
        "wires": []
    },
    {
        "id": "12617c76.f2cf5c",
        "type": "time-inject",
        "z": "d4fae0b8.1d7718",
        "name": "",
        "nameInt": "⏲ solar noon↷ = true",
        "positionConfig": "ea6aed1e.d46f38",
        "props": [
            {
                "p": "",
                "pt": "msgPayload",
                "v": "true",
                "vt": "bool",
                "o": "",
                "oT": "none",
                "oM": "60000",
                "f": 0,
                "fS": 0,
                "fT": "UNIX timestamp (ms)",
                "fI": "0",
                "next": true,
                "days": ""
            }
        ],
        "injectTypeSelect": "time",
        "intervalCount": 1,
        "intervalCountType": "num",
        "intervalCountMultiplier": 60000,
        "time": "solarNoon",
        "timeType": "pdsTime",
        "offset": "2",
        "offsetType": "num",
        "offsetMultiplier": "3600000",
        "timeEnd": "",
        "timeEndType": "entered",
        "timeEndOffset": 0,
        "timeEndOffsetType": "none",
        "timeEndOffsetMultiplier": 60000,
        "timeDays": "*",
        "timeOnlyOddDays": false,
        "timeOnlyEvenDays": false,
        "timeMonths": "*",
        "timedatestart": "",
        "timedateend": "",
        "property": "",
        "propertyType": "none",
        "propertyCompare": "true",
        "propertyThreshold": "",
        "propertyThresholdType": "num",
        "timeAlt": "",
        "timeAltType": "entered",
        "timeAltDays": "*",
        "timeAltOnlyOddDays": false,
        "timeAltOnlyEvenDays": false,
        "timeAltMonths": "*",
        "timeAltOffset": 0,
        "timeAltOffsetType": "none",
        "timeAltOffsetMultiplier": 60000,
        "once": false,
        "onceDelay": 0.1,
        "recalcTime": 2,
        "x": 160,
        "y": 1060,
        "wires": [
            [
                "7b2c770d.584e7"
            ]
        ]
    },
    {
        "id": "7b2c770d.584e7",
        "type": "mqtt out",
        "z": "d4fae0b8.1d7718",
        "name": "",
        "topic": "rasHome/measures/minMaxDailyReset",
        "qos": "",
        "retain": "",
        "broker": "ee95ae30.7fefe8",
        "x": 510,
        "y": 1060,
        "wires": []
    },
    {
        "id": "239602e5.064826",
        "type": "mqtt in",
        "z": "46a757ab.7b1178",
        "name": "",
        "topic": "rasHome/measures/minMaxDailyReset",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 210,
        "y": 420,
        "wires": [
            [
                "fb8b0604.90802"
            ]
        ]
    },
    {
        "id": "261a5d7f.e308ea",
        "type": "mqtt in",
        "z": "f2a638ae.d93ca8",
        "name": "",
        "topic": "rasHome/measures/minMaxDailyReset",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 210,
        "y": 440,
        "wires": [
            [
                "34e3c111.c09e76"
            ]
        ]
    },
    {
        "id": "325e6920.9f03ae",
        "type": "mqtt in",
        "z": "c0642d23.ec7808",
        "name": "",
        "topic": "rasHome/measures/dailyReset",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 490,
        "y": 480,
        "wires": [
            [
                "5b83fb59.062034"
            ]
        ]
    },
    {
        "id": "cd69c94d.59ef78",
        "type": "comment",
        "z": "c0642d23.ec7808",
        "name": "Inserzione FV",
        "info": "",
        "x": 390,
        "y": 720,
        "wires": []
    },
    {
        "id": "6ab7042e.ab6e1c",
        "type": "mqtt out",
        "z": "c0642d23.ec7808",
        "name": "",
        "topic": "cmnd/tasmotaSolarNode/POWER0",
        "qos": "0",
        "retain": "false",
        "broker": "ee95ae30.7fefe8",
        "x": 1480,
        "y": 940,
        "wires": []
    },
    {
        "id": "600739f0.cbec2",
        "type": "function",
        "z": "c0642d23.ec7808",
        "name": "",
        "func": "var FV1Status = flow.get('FV1Status'); //Int 1 and 2\nvar FV2Status = flow.get('FV2Status'); //Int 3 and 4\nvar BATStatus = flow.get('BATStatus'); //Int 5 and 6\nvar PHONStatus = flow.get('PHONStatus'); //Int 7\nvar VENTStatus = flow.get('VENTStatus'); //Int 8\n\n//FV1\nif((\"POWER1\" in msg.payload) && (\"POWER2\" in msg.payload)){\n    if(msg.payload.POWER1 === \"OFF\" && msg.payload.POWER2 === \"OFF\"){\n        FV1Status = 0;\n    }\n    else if(msg.payload.POWER1 === \"ON\" && msg.payload.POWER2 === \"ON\"){\n        FV1Status = 1;\n    }\n    else{\n        FV1Status = 2\n    }\n}\n\n//FV2\nif((\"POWER3\" in msg.payload) && (\"POWER4\" in msg.payload)){\n    if(msg.payload.POWER3 === \"OFF\" && msg.payload.POWER4 === \"OFF\"){\n        FV2Status = 0\n    }\n    else if(msg.payload.POWER3 === \"ON\" && msg.payload.POWER4 === \"ON\"){\n        FV2Status = 1\n    }\n    else{\n        FV2Status = 2\n    }\n}\n\n//BAT\nif((\"POWER5\" in msg.payload) && (\"POWER6\" in msg.payload)){\n    if(msg.payload.POWER5 === \"OFF\" && msg.payload.POWER6 === \"OFF\"){\n        BATStatus = 0\n    }\n    else if(msg.payload.POWER5 === \"ON\" && msg.payload.POWER6 === \"ON\"){\n        BATStatus = 1;\n    }\n    else{\n        BATStatus = 2;\n    }\n}\n\n//PHONE\nif(msg.payload.POWER7 === \"OFF\"){\n    PHONStatus = 0\n}\nelse if(msg.payload.POWER7 === \"ON\"){\n    PHONStatus = 1\n}\n\n//VENT\nif(msg.payload.POWER8 === \"OFF\"){\n    VENTStatus = 0\n}\nelse if(msg.payload.POWER8 === \"ON\"){\n    VENTStatus = 1\n}\n\nflow.set('FV1Status', FV1Status);\nflow.set('FV2Status', FV2Status);\nflow.set('BATStatus', BATStatus);\nflow.set('PHONStatus', PHONStatus);\nflow.set('VENTStatus', VENTStatus);\n\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "x": 770,
        "y": 680,
        "wires": []
    },
    {
        "id": "22402011.c203b",
        "type": "trigger",
        "z": "c0642d23.ec7808",
        "name": "Empty trigger 1s",
        "op1": "",
        "op2": "{}",
        "op1type": "nul",
        "op2type": "json",
        "duration": "1",
        "extend": true,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "outputs": 1,
        "x": 1240,
        "y": 940,
        "wires": [
            [
                "6ab7042e.ab6e1c"
            ]
        ]
    },
    {
        "id": "ca244c84.0fd37",
        "type": "within-time-switch",
        "z": "c0642d23.ec7808",
        "name": "",
        "positionConfig": "ea6aed1e.d46f38",
        "startTime": "sunrise",
        "startTimeType": "pdsTime",
        "startOffset": "3",
        "startOffsetType": "num",
        "startOffsetMultiplier": 3600000,
        "endTime": "sunset",
        "endTimeType": "pdsTime",
        "endOffset": "-3",
        "endOffsetType": "num",
        "endOffsetMultiplier": 3600000,
        "timeDays": "*",
        "timeOnlyOddDays": false,
        "timeOnlyEvenDays": false,
        "timeMonths": "*",
        "timedatestart": "",
        "timedateend": "",
        "propertyStart": "",
        "propertyStartType": "none",
        "propertyStartCompare": "true",
        "propertyStartThreshold": "",
        "propertyStartThresholdType": "num",
        "startTimeAlt": "",
        "startTimeAltType": "entered",
        "startOffsetAlt": 0,
        "startOffsetAltType": "none",
        "startOffsetAltMultiplier": 60000,
        "propertyEnd": "",
        "propertyEndType": "none",
        "propertyEndCompare": "true",
        "propertyEndThreshold": "",
        "propertyEndThresholdType": "num",
        "endTimeAlt": "",
        "endTimeAltType": "entered",
        "endOffsetAlt": 0,
        "endOffsetAltType": "none",
        "endOffsetAltMultiplier": 60000,
        "tsCompare": "0",
        "x": 850,
        "y": 800,
        "wires": [
            [
                "3a48bfd0.0ce9a"
            ],
            []
        ]
    },
    {
        "id": "d2f77f8.a08598",
        "type": "function",
        "z": "c0642d23.ec7808",
        "name": "Detatch Int on Pow",
        "func": "//Acquire data from database\nvar lastPower = msg.payload.ENERGY.Power;\nvar relay = flow.get('relayStatus');\n\n//Setpoints variables\nvar maxPower = 200;\nvar minPower = 20;\n\n//Check if Power is in range\nif((lastPower < minPower) && (relay === \"ON\")){\n    msg.rce = \"SOLARNODE - RICHIESTA DISINSERZIONE PHONE PER BASSA POTENZA (\" + lastPower + \" W)\";\n    msg.payload = 0;\n} else if((lastPower > minPower) && (relay ===\"OFF\")){\n    msg.rce = \"SOLARNODE - RICHIESTA INSERZIONE PHONE PER POTENZA SUFFICIENTE (\" + lastPower + \" W)\";\n    msg.payload = 1;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 800,
        "wires": [
            [
                "ca244c84.0fd37"
            ]
        ]
    },
    {
        "id": "80d0b44.4ffe8c8",
        "type": "function",
        "z": "c0642d23.ec7808",
        "name": "Vent on inside cabinet",
        "func": "//Acquire data from database\nvar lastCabinetTemperature = msg.payload[0].last_temperature;\nvar lastOutsideTemperature = msg.payload[0].last_outsideTemperature;\nvar timeLastPowerStr = msg.payload[0].time;\nflow.set('lastCabinetTemperature', lastCabinetTemperature);\n\n//Elaborate times\nvar lastPowerDate = new Date(timeLastPowerStr);\nvar lastPowerTime = lastPowerDate.getTime();\nvar currentDate = new Date();\nvar currentTime = currentDate.getTime();\n\n//Setpoints variables\nvar maxAgeValue = 600000; //10min\nvar onTemp = 30;\nvar allTemp = 35;\nvar offTemp = 25;\n\n//State variables\nvar tempH = false;\nvar tempHH = false;\nvar timeOk = false;\nvar request = 0;\n\nif((currentTime - lastPowerTime) < maxAgeValue){\n    timeOk = true;\n    if (lastCabinetTemperature >= allTemp){\n        tempH = true;\n        tempHH = true;\n        request = 2;\n        msg.rce = \"SOLARNODE - TEMPERATURA ARMADIO ALTA\";\n    } else if (lastCabinetTemperature >= onTemp){\n        tempH = true;\n        tempHH = false;\n        request = 1;\n        msg.rce = \"SOLARNODE - TEMPERATURA ARMADIO TROPPO ALTA\";\n    }\n    else if(lastCabinetTemperature < offTemp){\n        tempH = false;\n        tempHH = false;\n        request = 0;\n        msg.rce = \"SOLARNODE - TEMPERATURA ARMADIO NORMALE\";\n    }\n}\n\nmsg.payload = {\n        request : request,\n        tempHigh : tempH,\n        tempAllarm : tempHH,\n        timeOk : timeOk\n    }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 680,
        "y": 1020,
        "wires": [
            [
                "c54a1214.4563a"
            ]
        ]
    },
    {
        "id": "2eafb0ae.c9c14",
        "type": "function",
        "z": "c0642d23.ec7808",
        "name": "Preparazione interruttori VENT",
        "func": "var FV1Status = flow.get('FV1Status'); //Int 1 and 2\nvar FV2Status = flow.get('FV2Status'); //Int 3 and 4\nvar BATStatus = flow.get('BATStatus'); //Int 5 and 6\nvar PHONStatus = flow.get('PHONStatus'); //Int 7\nvar VENTStatus = flow.get('VENTStatus'); //Int 8\n\nswitch(msg.payload.request) {\n  case 0:\n      //Richiede l'apertura dell'interruttore\n    msg.payload = {\n        reqFV1 : -1,\n        reqFV2 : -1,\n        reqBAT : -1,\n        reqPHON : -1,\n        reqVENT : 0,\n        reqINV : -1\n    }\n    msg.rce = \"SOLARNODE - SPEGNIMENTO VENTOLA\";\n    break;\n  case 1:\n      //Apri l'interruttore della batteria prima di chiudere l'interruttore\n    msg.payload = {\n        reqFV1 : -1,\n        reqFV2 : -1,\n        reqBAT : -1,\n        reqPHON : -1,\n        reqVENT : 1,\n        reqINV : -1\n    }\n    msg.rce = \"SOLARNODE - ACCENSIONE VENTOLA\";\n    break;\n  default:\n    return;\n} \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1210,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "c54a1214.4563a",
        "type": "rbe",
        "z": "c0642d23.ec7808",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 910,
        "y": 1020,
        "wires": [
            [
                "2eafb0ae.c9c14",
                "b301b632.a45318"
            ]
        ]
    },
    {
        "id": "b301b632.a45318",
        "type": "function",
        "z": "c0642d23.ec7808",
        "name": "Invio misure",
        "func": "var lastCabinetTemperature = flow.get('lastCabinetTemperature');\nvar lastState = flow.get('lastState');\n\nvar alarmStr = \"\";\nvar tempStr = \"Temperatura quadro:\" + lastCabinetTemperature + \"°C\\n\";\n\n//Genero la stringa della data\nvar currentdate = new Date();\nvar datetimeStr = currentdate.getDate() + \"/\" + (currentdate.getMonth()+1) + \"/\" + currentdate.getFullYear() + \" - \" + currentdate.getHours() + \":\" +currentdate.getMinutes() + \":\" + currentdate.getSeconds();\n\n//Genero stringa di allarme\nif(msg.payload.tempAllarm){\n    alarmStr = \"Temperatura elevata!. Sgancio di EMERGENZA!!\\n\"\n    flow.set('lastState', 2);\n}\nelse if(msg.payload.tempHigh){\n    alarmStr = \"Temperatura alta. Richiesta avvio ventole.\\n\"\n    flow.set('lastState', 1);\n}\nelse if (lastState > 0){\n    if(lastState == 1){\n        alarmStr = \"Temperatura rientrata. Richiesta arresto ventole.\\n\"\n    }\n    else if(lastState == 2){\n        alarmStr = \"Temperatura rientrata. Richiesta arresto ventole. Ripristino manuale.\\n\"\n    }\n    flow.set('lastState', 0);\n}\n\n//msg_text = datetimeStr + '\\nDati Esterno Solar Server:\\nTemperatura: ';\nmsg.payload = datetimeStr + alarmStr + tempStr;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1150,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "572c5c0.dc260a4",
        "type": "mqtt in",
        "z": "c0642d23.ec7808",
        "name": "",
        "topic": "tele/tasmotaInverter/SENSOR",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 260,
        "y": 800,
        "wires": [
            [
                "3a7a34a1.2f1674"
            ]
        ]
    },
    {
        "id": "3a7a34a1.2f1674",
        "type": "json",
        "z": "c0642d23.ec7808",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 470,
        "y": 800,
        "wires": [
            [
                "d2f77f8.a08598"
            ]
        ]
    },
    {
        "id": "15bbbed4.12c8b1",
        "type": "comment",
        "z": "c0642d23.ec7808",
        "name": "Controllo inverter",
        "info": "",
        "x": 220,
        "y": 720,
        "wires": []
    },
    {
        "id": "aaa5f53b.44409",
        "type": "comment",
        "z": "c0642d23.ec7808",
        "name": "Ins/Disenserzione FV su orario",
        "info": "",
        "x": 270,
        "y": 840,
        "wires": []
    },
    {
        "id": "fd7120b.204a0e",
        "type": "mqtt in",
        "z": "c0642d23.ec7808",
        "name": "",
        "topic": "boincGrid/request",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 600,
        "y": 880,
        "wires": [
            [
                "c7c22520.80cf28"
            ]
        ]
    },
    {
        "id": "c7c22520.80cf28",
        "type": "json",
        "z": "c0642d23.ec7808",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 750,
        "y": 880,
        "wires": [
            [
                "b1bf0cac.a57df"
            ]
        ]
    },
    {
        "id": "b1bf0cac.a57df",
        "type": "time-range-switch",
        "z": "c0642d23.ec7808",
        "name": "",
        "lat": "",
        "lon": "",
        "startTime": "19:30",
        "endTime": "06:00",
        "startOffset": 0,
        "endOffset": 0,
        "x": 890,
        "y": 880,
        "wires": [
            [
                "3a48bfd0.0ce9a"
            ],
            []
        ]
    },
    {
        "id": "7b3f2b78.79e254",
        "type": "mqtt out",
        "z": "c0642d23.ec7808",
        "name": "",
        "topic": "cmnd/tasmotaSolarNode/POWER1",
        "qos": "",
        "retain": "",
        "broker": "ee95ae30.7fefe8",
        "x": 1300,
        "y": 820,
        "wires": []
    },
    {
        "id": "71ecd3f0.a057e4",
        "type": "mqtt out",
        "z": "c0642d23.ec7808",
        "name": "",
        "topic": "rashome/rce",
        "qos": "0",
        "retain": "false",
        "broker": "ee95ae30.7fefe8",
        "x": 1410,
        "y": 880,
        "wires": []
    },
    {
        "id": "3a48bfd0.0ce9a",
        "type": "function",
        "z": "c0642d23.ec7808",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1050,
        "y": 840,
        "wires": [
            [
                "7b3f2b78.79e254",
                "22402011.c203b",
                "6d6e2918.3b5d38"
            ]
        ]
    },
    {
        "id": "c11eee84.24c788",
        "type": "comment",
        "z": "d4fae0b8.1d7718",
        "name": "Aggiornamento misure all'avvio",
        "info": "",
        "x": 170,
        "y": 1100,
        "wires": []
    },
    {
        "id": "a04f6afb.466708",
        "type": "inject",
        "z": "d4fae0b8.1d7718",
        "name": "Boot",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 90,
        "y": 1140,
        "wires": [
            [
                "9e1ceefa.62e47"
            ]
        ]
    },
    {
        "id": "9e1ceefa.62e47",
        "type": "mqtt out",
        "z": "d4fae0b8.1d7718",
        "name": "",
        "topic": "rasHome/measures/refreshOnBoot",
        "qos": "",
        "retain": "",
        "broker": "ee95ae30.7fefe8",
        "x": 380,
        "y": 1140,
        "wires": []
    },
    {
        "id": "80868f28.869c68",
        "type": "mqtt in",
        "z": "f6bd4cff.b20c7",
        "name": "",
        "topic": "rasHome/measures/refreshOnBoot",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 180,
        "y": 680,
        "wires": [
            [
                "fd8be8fe.4436d8"
            ]
        ]
    },
    {
        "id": "5d1f23c2.4035dc",
        "type": "mqtt in",
        "z": "e987eb50.a7ba78",
        "name": "",
        "topic": "rasHome/measures/refreshOnBoot",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 200,
        "y": 880,
        "wires": [
            [
                "4434b330.12340c"
            ]
        ]
    },
    {
        "id": "46855caf.94963c",
        "type": "mqtt in",
        "z": "73b7c891.499c78",
        "name": "",
        "topic": "rasHome/measures/refreshOnBoot",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 200,
        "y": 880,
        "wires": [
            [
                "5948a3fe.06968c"
            ]
        ]
    },
    {
        "id": "c85517a4.a9db5",
        "type": "mqtt in",
        "z": "c0642d23.ec7808",
        "name": "",
        "topic": "rasHome/measures/refreshOnBoot",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 260,
        "y": 180,
        "wires": [
            [
                "8eda742.f286688"
            ]
        ]
    },
    {
        "id": "d6ea204d.72744",
        "type": "comment",
        "z": "d4fae0b8.1d7718",
        "name": "Telegram",
        "info": "",
        "x": 100,
        "y": 1380,
        "wires": []
    },
    {
        "id": "ebc5c909.34a69",
        "type": "telegrambot-notify",
        "z": "d4fae0b8.1d7718",
        "name": "",
        "bot": "c4e585d7.106718",
        "chatId": "282556504",
        "message": "",
        "parseMode": "",
        "x": 720,
        "y": 1420,
        "wires": []
    },
    {
        "id": "bc0e493d.b4126",
        "type": "mqtt in",
        "z": "d4fae0b8.1d7718",
        "name": "",
        "topic": "rasHome/sala/telegramMsgOut",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 170,
        "y": 1420,
        "wires": [
            [
                "ebc5c909.34a69"
            ]
        ]
    },
    {
        "id": "53674d83.1f4c1c",
        "type": "mqtt out",
        "z": "46a757ab.7b1178",
        "name": "",
        "topic": "rasHome/sala/telegramMsgOut",
        "qos": "0",
        "retain": "false",
        "broker": "ee95ae30.7fefe8",
        "x": 730,
        "y": 460,
        "wires": []
    },
    {
        "id": "26be3679.563eb2",
        "type": "mqtt out",
        "z": "f2a638ae.d93ca8",
        "name": "",
        "topic": "rasHome/serverRoom/telegramMsgOut",
        "qos": "0",
        "retain": "false",
        "broker": "ee95ae30.7fefe8",
        "x": 800,
        "y": 480,
        "wires": []
    },
    {
        "id": "12008dca.e2765a",
        "type": "mqtt in",
        "z": "d4fae0b8.1d7718",
        "name": "",
        "topic": "rasHome/serverRoom/telegramMsgOut",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 190,
        "y": 1460,
        "wires": [
            [
                "ebc5c909.34a69"
            ]
        ]
    },
    {
        "id": "b210359e.e80878",
        "type": "mqtt out",
        "z": "7aa2da03.bd1f7c",
        "name": "",
        "topic": "rasHome/soffitta/telegramMsgOut",
        "qos": "0",
        "retain": "false",
        "broker": "ee95ae30.7fefe8",
        "x": 740,
        "y": 400,
        "wires": []
    },
    {
        "id": "7befb976.e0de",
        "type": "mqtt out",
        "z": "d4025d43.ce8fc",
        "name": "",
        "topic": "rasHome/camera/telegramMsgOut",
        "qos": "0",
        "retain": "false",
        "broker": "ee95ae30.7fefe8",
        "x": 720,
        "y": 460,
        "wires": []
    },
    {
        "id": "fb69601c.3518d",
        "type": "mqtt out",
        "z": "73b7c891.499c78",
        "name": "",
        "topic": "rasYard/inverter/telegramMsgOut",
        "qos": "0",
        "retain": "false",
        "broker": "ee95ae30.7fefe8",
        "x": 1180,
        "y": 1280,
        "wires": []
    },
    {
        "id": "bbb70943.d221f",
        "type": "mqtt out",
        "z": "af47c860.21273",
        "d": true,
        "name": "",
        "topic": "rasYard/solarNode/telegramMsgOut",
        "qos": "0",
        "retain": "false",
        "broker": "ee95ae30.7fefe8",
        "x": 400,
        "y": 480,
        "wires": []
    },
    {
        "id": "a9423cf6.d6523",
        "type": "mqtt in",
        "z": "d4fae0b8.1d7718",
        "name": "",
        "topic": "rasHome/camera/telegramMsgOut",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 180,
        "y": 1500,
        "wires": [
            [
                "ebc5c909.34a69"
            ]
        ]
    },
    {
        "id": "4f82c89d.eee8b8",
        "type": "mqtt in",
        "z": "d4fae0b8.1d7718",
        "name": "",
        "topic": "rasHome/soffitta/telegramMsgOut",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 170,
        "y": 1540,
        "wires": [
            [
                "ebc5c909.34a69"
            ]
        ]
    },
    {
        "id": "28c0fd6d.12ae5a",
        "type": "mqtt in",
        "z": "d4fae0b8.1d7718",
        "name": "",
        "topic": "rasHome/contatore/telegramMsgOut",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 180,
        "y": 1580,
        "wires": [
            [
                "ebc5c909.34a69"
            ]
        ]
    },
    {
        "id": "72fbd2d.2ef052c",
        "type": "mqtt in",
        "z": "d4fae0b8.1d7718",
        "name": "",
        "topic": "rasYard/inverter/telegramMsgOut",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 170,
        "y": 1620,
        "wires": [
            [
                "ebc5c909.34a69"
            ]
        ]
    },
    {
        "id": "35c4af41.978a58",
        "type": "mqtt in",
        "z": "d4fae0b8.1d7718",
        "name": "",
        "topic": "rasYard/ricaricaNissan/telegramMsgOut",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 190,
        "y": 1660,
        "wires": [
            [
                "ebc5c909.34a69"
            ]
        ]
    },
    {
        "id": "c4e88271.c7adc",
        "type": "mqtt in",
        "z": "d4fae0b8.1d7718",
        "name": "",
        "topic": "rasYard/solarNode/telegramMsgOut",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 180,
        "y": 1700,
        "wires": [
            [
                "ebc5c909.34a69"
            ]
        ]
    },
    {
        "id": "6d6e2918.3b5d38",
        "type": "change",
        "z": "c0642d23.ec7808",
        "name": "payload2rce",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "rce",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "rce",
                "pt": "flow",
                "to": "rce",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 880,
        "wires": [
            [
                "71ecd3f0.a057e4"
            ]
        ]
    },
    {
        "id": "eed9a3a8.6e4a2",
        "type": "change",
        "z": "73b7c891.499c78",
        "name": "payload2rce",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "rce",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "rce",
                "pt": "flow",
                "to": "rce",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 1100,
        "wires": [
            [
                "b04d4776.165a18"
            ]
        ]
    },
    {
        "id": "156268a6.23bc27",
        "type": "exec",
        "z": "d4fae0b8.1d7718",
        "command": "espeak -v it",
        "addpay": true,
        "append": " --stdout | aplay",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 570,
        "y": 980,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "7aa6bd12.4ceb2c",
        "type": "inject",
        "z": "d4fae0b8.1d7718",
        "d": true,
        "name": "eSpeak Payload",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "\"ciao da nodred\"",
        "payloadType": "str",
        "x": 140,
        "y": 980,
        "wires": [
            [
                "156268a6.23bc27"
            ]
        ]
    },
    {
        "id": "2fe8e937.5d54ae",
        "type": "mqtt out",
        "z": "e987eb50.a7ba78",
        "name": "",
        "topic": "rasYard/ricaricaNissan/POWER/richiestaRicarica",
        "qos": "0",
        "retain": "false",
        "broker": "ee95ae30.7fefe8",
        "x": 1080,
        "y": 1240,
        "wires": []
    },
    {
        "id": "49b9677e.fd26b8",
        "type": "mqtt in",
        "z": "e987eb50.a7ba78",
        "name": "",
        "topic": "rasYard/ricaricaNissan/POWER/richiestaRicarica",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 240,
        "y": 1060,
        "wires": [
            [
                "64aef12a.ee3378"
            ]
        ]
    },
    {
        "id": "84f3b0e6.754d",
        "type": "change",
        "z": "e987eb50.a7ba78",
        "name": "payload2rce",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "rce",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "rce",
                "pt": "flow",
                "to": "rce",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 1200,
        "wires": [
            [
                "735951a0.c00aa8"
            ]
        ]
    },
    {
        "id": "7875fa35.fbb004",
        "type": "mqtt in",
        "z": "d4fae0b8.1d7718",
        "name": "",
        "topic": "rasYard/ricaricaNissan/rce",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 150,
        "y": 600,
        "wires": [
            [
                "36afdfa8.2f71c8"
            ]
        ]
    },
    {
        "id": "a74e0a7b.759f38",
        "type": "change",
        "z": "e987eb50.a7ba78",
        "name": "payload2rce",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "rce",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "rce",
                "pt": "flow",
                "to": "rce",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 1100,
        "wires": [
            [
                "cf993547.ac96b"
            ]
        ]
    },
    {
        "id": "cf993547.ac96b",
        "type": "mqtt out",
        "z": "e987eb50.a7ba78",
        "name": "",
        "topic": "rasYard/ricaricaNissan/rce",
        "qos": "0",
        "retain": "false",
        "broker": "ee95ae30.7fefe8",
        "x": 1210,
        "y": 1100,
        "wires": []
    },
    {
        "id": "64aef12a.ee3378",
        "type": "json",
        "z": "e987eb50.a7ba78",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 490,
        "y": 1060,
        "wires": [
            [
                "47b4975.6e0d968"
            ]
        ]
    },
    {
        "id": "32ebd609.8aa2c2",
        "type": "mqtt out",
        "z": "e987eb50.a7ba78",
        "name": "",
        "topic": "rasYard/ricaricaNissan/POWER/richiestaRicarica",
        "qos": "0",
        "retain": "false",
        "broker": "ee95ae30.7fefe8",
        "x": 890,
        "y": 1580,
        "wires": []
    },
    {
        "id": "40567a2e.45714c",
        "type": "change",
        "z": "e987eb50.a7ba78",
        "name": "payload2rce",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "rce",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "rce",
                "pt": "flow",
                "to": "rce",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 1620,
        "wires": [
            [
                "1e3ac765.3fa791"
            ]
        ]
    },
    {
        "id": "98f9c3e.8fbca4",
        "type": "mqtt out",
        "z": "e987eb50.a7ba78",
        "name": "",
        "topic": "rasYard/ricaricaNissan/dataReceived",
        "qos": "",
        "retain": "",
        "broker": "ee95ae30.7fefe8",
        "x": 690,
        "y": 140,
        "wires": []
    },
    {
        "id": "a01d8694.b2bef",
        "type": "change",
        "z": "e987eb50.a7ba78",
        "name": "blinkOnReceive",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 100,
        "wires": [
            [
                "98f9c3e.8fbca4"
            ]
        ]
    },
    {
        "id": "367babb9.7ede24",
        "type": "mqtt in",
        "z": "e987eb50.a7ba78",
        "name": "",
        "topic": "rasYard/ricaricaNissan/dataReceived",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 180,
        "y": 1540,
        "wires": [
            [
                "a0c1da59.eb17c",
                "b38c22b3.521338"
            ]
        ]
    },
    {
        "id": "ddd05b95.37f6c8",
        "type": "function",
        "z": "e987eb50.a7ba78",
        "name": "Calculate delay to F2",
        "func": "const ON = 1;\nconst OFF = 0;\n\nvar currentdate = new Date();\nvar triggerDate = new Date();\nvar timedOutActivation;\ntriggerDate.setHours(23);\ntriggerDate.setMinutes(0);\n\nfunction startCharge(){\n    return msg.payload >= 1;\n}\nfunction isEconomyTime(){\n    return currentdate > triggerDate;\n}\n\nif (startCharge()){\n    if (isEconomyTime()){\n        msg.rce = \"Avvio ricarica\"\n        msg.payload = ON;\n    }\n    else{\n        var delay = triggerDate - currentdate;\n        msg.payload = OFF;\n        msg.rce = \"Ricarica prenotata. Inserzione tra \" + ((delay)/60000).toFixed(0) + \"Minuti\";\n        //node.send(msg);\n        timedOutActivation = setTimeout(function(){\n            msg.payload = ON;\n            msg.rce = \"Avvio ricarica prenotata\";\n            node.send(msg); // setTimeout is an async function\n        }, delay);\n    }\n}\nelse {\n    msg.rce = \"Prenotazione ricarica annullata\";\n    clearTimeout(timedOutActivation);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 760,
        "y": 1200,
        "wires": [
            [
                "2fe8e937.5d54ae",
                "84f3b0e6.754d"
            ]
        ]
    },
    {
        "id": "47b4975.6e0d968",
        "type": "function",
        "z": "e987eb50.a7ba78",
        "name": "msg rce",
        "func": "if (msg.topic == \"googleHome\"){\n    if (msg.payload === 1){\n        msg.rce = \"NISSAN: Avvio ricarica da Google\"\n    } else{\n        msg.rce = \"NISSAN: Arresto ricarica da Google\"\n    }\n} else if (msg.topic == \"rasYard/ricaricaNissan/POWER/richiestaRicarica\"){\n    if (msg.payload === 1){\n        msg.rce = \"NISSAN: Avvio ricarica da gestore ricarica\"\n    } else{\n        msg.rce = \"NISSAN: Arresto ricarica da gestore ricarica\"\n    }\n} else if (msg.topic == \"hmiSwitch\"){\n    msg.rce = \"NISSAN: Richiesta switch INT da HMI\"\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 840,
        "y": 1060,
        "wires": [
            [
                "798b25a1.311f3c",
                "4d875189.8793e8",
                "a74e0a7b.759f38"
            ]
        ]
    },
    {
        "id": "53515e64.2dc45",
        "type": "mqtt in",
        "z": "d4fae0b8.1d7718",
        "name": "",
        "topic": "rashome/inverter/rce",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 130,
        "y": 640,
        "wires": [
            [
                "36afdfa8.2f71c8"
            ]
        ]
    },
    {
        "id": "77e97bc.f94c384",
        "type": "function",
        "z": "e987eb50.a7ba78",
        "name": "ON",
        "func": "if (msg.payload >= 1){\n    msg.payload = 1;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 710,
        "y": 1240,
        "wires": [
            [
                "2fe8e937.5d54ae"
            ]
        ]
    },
    {
        "id": "832964b1.d133d8",
        "type": "function",
        "z": "e987eb50.a7ba78",
        "name": "energyToCost_F3",
        "func": "var energia = msg.payload;\nconst PREZZO_MEDIO_KW = 0.18;\n\nvar costoTotale = energia * PREZZO_MEDIO_KW;\nmsg.payload = costoTotale.toFixed(2);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1270,
        "y": 660,
        "wires": [
            [
                "f347d7d1.57c6b",
                "d7eae73c.ccf818"
            ]
        ]
    },
    {
        "id": "9d9dae1b.65f218",
        "type": "function",
        "z": "e987eb50.a7ba78",
        "name": "energy2Money",
        "func": "var energia = msg.payload;\nconst PREZZO_MEDIO_KW = 0.18;\n\nvar costoTotale = energia * 0.18;\nmsg.payload = costoTotale.toFixed(2);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 1420,
        "wires": [
            [
                "430bfe57.9b21"
            ]
        ]
    },
    {
        "id": "93b14f51.77b228",
        "type": "change",
        "z": "f6bd4cff.b20c7",
        "name": "payload2rce",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "rce",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "rce",
                "pt": "flow",
                "to": "rce",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1730,
        "y": 600,
        "wires": [
            [
                "db843270.a24648",
                "d3448d4c.47663"
            ]
        ]
    },
    {
        "id": "c4b55fb5.172c58",
        "type": "conf ping",
        "z": "92f9eb20.694dc8",
        "name": "",
        "host": "192.168.0.81",
        "timeout": "5",
        "requests": "1",
        "x": 330,
        "y": 580,
        "wires": [
            [
                "b5940ab7.1017a8"
            ]
        ]
    },
    {
        "id": "fb22a014.a31a98",
        "type": "comment",
        "z": "295673c6.e0b2c4",
        "name": "Sonoff basic Scale - 192.168.0.83",
        "info": "",
        "x": 650,
        "y": 140,
        "wires": []
    },
    {
        "id": "5b7fce8f.6a6a88",
        "type": "ui_button",
        "z": "295673c6.e0b2c4",
        "name": "Pulsante switch interruttore",
        "group": "7c9364c.4aa5a1c",
        "order": 1,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Luce Scale",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "power_settings_new",
        "payload": "2",
        "payloadType": "num",
        "topic": "",
        "x": 640,
        "y": 180,
        "wires": [
            [
                "b8966a2a.030a48"
            ]
        ],
        "outputLabels": [
            "msg.background"
        ]
    },
    {
        "id": "5858f6a7.0e8578",
        "type": "mqtt in",
        "z": "295673c6.e0b2c4",
        "name": "",
        "topic": "stat/tasmotaLuceScale/POWER",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 170,
        "y": 200,
        "wires": [
            [
                "a4681f23.ec5c78",
                "75d216dc.e0443"
            ]
        ]
    },
    {
        "id": "b8966a2a.030a48",
        "type": "mqtt out",
        "z": "295673c6.e0b2c4",
        "name": "",
        "topic": "cmnd/tasmotaLuceScale/POWER",
        "qos": "",
        "retain": "",
        "broker": "ee95ae30.7fefe8",
        "x": 1080,
        "y": 180,
        "wires": []
    },
    {
        "id": "7006c683.fc2e78",
        "type": "nora-light",
        "z": "295673c6.e0b2c4",
        "devicename": "Luce Scale",
        "lightcolor": false,
        "brightnesscontrol": false,
        "turnonwhenbrightnesschanges": true,
        "passthru": false,
        "statepayload": true,
        "brightnessoverride": "",
        "roomhint": "Scale",
        "name": "Luce Scale",
        "nora": "e264142d.421a28",
        "topic": "",
        "onvalue": "1",
        "onvalueType": "num",
        "offvalue": "0",
        "offvalueType": "num",
        "x": 710,
        "y": 220,
        "wires": [
            [
                "67fdda03.0702b4"
            ]
        ]
    },
    {
        "id": "a4681f23.ec5c78",
        "type": "function",
        "z": "295673c6.e0b2c4",
        "name": "mode",
        "func": "if(msg.payload === \"ON\"){\n    msg.payload = true;\n}\nelse if(msg.payload === \"OFF\"){\n    msg.payload = false;\n}\n\nmsg.payload = \"{\\\"on\\\":\" + msg.payload + \"}\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 220,
        "wires": [
            [
                "df6ad308.9fd1"
            ]
        ]
    },
    {
        "id": "67fdda03.0702b4",
        "type": "function",
        "z": "295673c6.e0b2c4",
        "name": "mode",
        "func": "if(msg.payload.on === true){\n    msg.payload = 1;\n}\nelse if(msg.payload.on === false){\n    msg.payload = 0;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 850,
        "y": 220,
        "wires": [
            [
                "b8966a2a.030a48"
            ]
        ]
    },
    {
        "id": "df6ad308.9fd1",
        "type": "json",
        "z": "295673c6.e0b2c4",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 220,
        "wires": [
            [
                "7006c683.fc2e78"
            ]
        ]
    },
    {
        "id": "291f7b62.684a74",
        "type": "function",
        "z": "f6bd4cff.b20c7",
        "name": "",
        "func": "msg.payload = msg.payload.power.toFixed(0)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1010,
        "y": 200,
        "wires": [
            [
                "49be6c5.5b61f94",
                "e4121ccc.4f7ce8"
            ]
        ]
    },
    {
        "id": "b537b18e.1e8948",
        "type": "function",
        "z": "e987eb50.a7ba78",
        "name": "",
        "func": "msg.payload = msg.payload.power.toFixed(0)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1250,
        "y": 220,
        "wires": [
            [
                "6f7e6b6a.86c174",
                "714fe196.c8d6d",
                "9dbfdd80.edef5"
            ]
        ]
    },
    {
        "id": "37426923.391d76",
        "type": "function",
        "z": "e987eb50.a7ba78",
        "name": "",
        "func": "msg.payload = msg.payload.voltage.toFixed(0)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1030,
        "y": 60,
        "wires": [
            [
                "7e7193ee.c7c72c"
            ]
        ]
    },
    {
        "id": "c9c346e3.bbe86",
        "type": "function",
        "z": "e987eb50.a7ba78",
        "name": "",
        "func": "msg.payload = msg.payload.current.toFixed(0)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1010,
        "y": 160,
        "wires": [
            [
                "cd25c7c6.6062d"
            ]
        ]
    },
    {
        "id": "809b2a4a.d71f3",
        "type": "ui_button",
        "z": "f2a638ae.d93ca8",
        "name": "",
        "group": "d4d505c6.d93fc8",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Sveglia NAS",
        "tooltip": "",
        "color": "red",
        "bgcolor": "lime",
        "icon": "",
        "payload": "{\"rce\":\"NAS: Richiesta risveglio da HMI\"}",
        "payloadType": "json",
        "topic": "",
        "x": 350,
        "y": 600,
        "wires": [
            [
                "803cc887.2441b"
            ]
        ]
    },
    {
        "id": "483de3cd.b0a034",
        "type": "telegrambot-command",
        "z": "f2a638ae.d93ca8",
        "name": "",
        "bot": "c4e585d7.106718",
        "command": "/sveglia_nas",
        "commandType": "str",
        "commandCase": false,
        "x": 150,
        "y": 640,
        "wires": [
            [
                "3e11b9d6.005f66"
            ]
        ]
    },
    {
        "id": "b37076b0.79b8a8",
        "type": "comment",
        "z": "f2a638ae.d93ca8",
        "name": "Comandi Telegram + WOL",
        "info": "",
        "x": 170,
        "y": 540,
        "wires": []
    },
    {
        "id": "41dade50.13862",
        "type": "nora-switch",
        "z": "f2a638ae.d93ca8",
        "devicename": "NAS",
        "roomhint": "Server Room",
        "name": "",
        "passthru": false,
        "nora": "e264142d.421a28",
        "topic": "",
        "onvalue": "{\"rce\":\"NAS: Richiesta risveglio da Google\"}",
        "onvalueType": "json",
        "offvalue": "{\"rce\":\"NAS: Richiesta dummy da Google\"}",
        "offvalueType": "json",
        "x": 390,
        "y": 720,
        "wires": [
            [
                "b8928e42.568388",
                "803cc887.2441b"
            ]
        ]
    },
    {
        "id": "b8928e42.568388",
        "type": "function",
        "z": "f2a638ae.d93ca8",
        "name": "reset node",
        "func": "msg.payload = {\n    on : false\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 760,
        "wires": [
            [
                "41dade50.13862"
            ]
        ]
    },
    {
        "id": "606ae473.1ccdfc",
        "type": "wake on lan",
        "z": "f2a638ae.d93ca8",
        "mac": "70:85:c2:49:f6:9f",
        "host": "",
        "udpport": 9,
        "name": "",
        "x": 790,
        "y": 600,
        "wires": []
    },
    {
        "id": "c7849a38.0a7f28",
        "type": "mqtt out",
        "z": "f2a638ae.d93ca8",
        "name": "",
        "topic": "rashome/rce",
        "qos": "0",
        "retain": "false",
        "broker": "ee95ae30.7fefe8",
        "x": 950,
        "y": 640,
        "wires": []
    },
    {
        "id": "a2086944.a80e38",
        "type": "change",
        "z": "f2a638ae.d93ca8",
        "name": "payload2rce",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.rce",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 640,
        "wires": [
            [
                "c7849a38.0a7f28"
            ]
        ]
    },
    {
        "id": "803cc887.2441b",
        "type": "function",
        "z": "f2a638ae.d93ca8",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 600,
        "wires": [
            [
                "a2086944.a80e38",
                "606ae473.1ccdfc"
            ]
        ]
    },
    {
        "id": "3e11b9d6.005f66",
        "type": "change",
        "z": "f2a638ae.d93ca8",
        "name": "TelegramPayload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"rce\" : \"NAS: Richiesta risveglio da Telegram\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 640,
        "wires": [
            [
                "803cc887.2441b"
            ]
        ]
    },
    {
        "id": "88356ddb.d49cc8",
        "type": "conf ping",
        "z": "92f9eb20.694dc8",
        "name": "",
        "host": "192.168.0.82",
        "timeout": "5",
        "requests": "1",
        "x": 330,
        "y": 620,
        "wires": [
            [
                "ab629d00.0fbd58"
            ]
        ]
    },
    {
        "id": "5b2e0606.aa7ae",
        "type": "conf ping",
        "z": "92f9eb20.694dc8",
        "name": "",
        "host": "192.168.0.83",
        "timeout": "5",
        "requests": "1",
        "x": 330,
        "y": 660,
        "wires": [
            [
                "e1f6a9d7.3ce13"
            ]
        ]
    },
    {
        "id": "e1f6a9d7.3ce13",
        "type": "function",
        "z": "92f9eb20.694dc8",
        "name": "Online status",
        "func": "if (msg.payload >= 1.0){\n    msg.payload = \"ON\";\n}\nelse{\n    msg.payload = \"OFF\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 660,
        "wires": [
            [
                "6b616d7f.19a364"
            ]
        ]
    },
    {
        "id": "ab629d00.0fbd58",
        "type": "function",
        "z": "92f9eb20.694dc8",
        "name": "Online status",
        "func": "if (msg.payload >= 1.0){\n    msg.payload = \"ON\";\n}\nelse{\n    msg.payload = \"OFF\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 620,
        "wires": [
            [
                "4262c3c.ed14dbc"
            ]
        ]
    },
    {
        "id": "b5940ab7.1017a8",
        "type": "function",
        "z": "92f9eb20.694dc8",
        "name": "Online status",
        "func": "if (msg.payload >= 1.0){\n    msg.payload = \"ON\";\n}\nelse{\n    msg.payload = \"OFF\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 580,
        "wires": [
            [
                "c948be60.4188b"
            ]
        ]
    },
    {
        "id": "885220ca.cfb5b8",
        "type": "function",
        "z": "92f9eb20.694dc8",
        "name": "Online status",
        "func": "if (msg.payload >= 1.0){\n    msg.payload = \"ON\";\n}\nelse{\n    msg.payload = \"OFF\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 540,
        "wires": [
            [
                "8bb6061a.916b4"
            ]
        ]
    },
    {
        "id": "265f5634.d821fa",
        "type": "function",
        "z": "92f9eb20.694dc8",
        "name": "Online status",
        "func": "if (msg.payload >= 1.0){\n    msg.payload = \"ON\";\n}\nelse{\n    msg.payload = \"OFF\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 500,
        "wires": [
            [
                "b2a256fd.dc7df"
            ]
        ]
    },
    {
        "id": "7098657.4d2b19c",
        "type": "function",
        "z": "92f9eb20.694dc8",
        "name": "Online status",
        "func": "if (msg.payload >= 1.0){\n    msg.payload = \"ON\";\n}\nelse{\n    msg.payload = \"OFF\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 460,
        "wires": [
            [
                "3796f1c9.084dbe"
            ]
        ]
    },
    {
        "id": "82413e86.2a9a08",
        "type": "function",
        "z": "92f9eb20.694dc8",
        "name": "Online status",
        "func": "if (msg.payload >= 1.0){\n    msg.payload = \"ON\";\n}\nelse{\n    msg.payload = \"OFF\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 420,
        "wires": [
            [
                "48fbf8c.c57d808"
            ]
        ]
    },
    {
        "id": "48c1400d.65522",
        "type": "function",
        "z": "92f9eb20.694dc8",
        "name": "Online status",
        "func": "if (msg.payload >= 1.0){\n    msg.payload = \"ON\";\n}\nelse{\n    msg.payload = \"OFF\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 380,
        "wires": [
            [
                "f8b0d0e8.d92aa"
            ]
        ]
    },
    {
        "id": "f14400b3.f3bca8",
        "type": "function",
        "z": "92f9eb20.694dc8",
        "name": "Online status",
        "func": "if (msg.payload >= 1.0){\n    msg.payload = \"ON\";\n}\nelse{\n    msg.payload = \"OFF\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 860,
        "wires": [
            [
                "b83949bf.2c4548"
            ]
        ]
    },
    {
        "id": "bf92cb38.9decb8",
        "type": "function",
        "z": "92f9eb20.694dc8",
        "name": "Online status",
        "func": "if (msg.payload >= 1.0){\n    msg.payload = \"ON\";\n}\nelse{\n    msg.payload = \"OFF\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 340,
        "wires": [
            [
                "363beafa.02a66e"
            ]
        ]
    },
    {
        "id": "46483723.1f3088",
        "type": "function",
        "z": "92f9eb20.694dc8",
        "name": "Online status",
        "func": "if (msg.payload >= 1.0){\n    msg.payload = \"ON\";\n}\nelse{\n    msg.payload = \"OFF\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 240,
        "wires": [
            [
                "689d96a6.31712"
            ]
        ]
    },
    {
        "id": "8f63279d.0df24",
        "type": "function",
        "z": "92f9eb20.694dc8",
        "name": "Online status",
        "func": "if (msg.payload >= 1.0){\n    msg.payload = \"ON\";\n}\nelse{\n    msg.payload = \"OFF\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 200,
        "wires": [
            [
                "14dbe1a3.4e02fe"
            ]
        ]
    },
    {
        "id": "9bfc7fd0.3453f",
        "type": "function",
        "z": "92f9eb20.694dc8",
        "name": "Online status",
        "func": "if (msg.payload >= 1.0){\n    msg.payload = \"ON\";\n}\nelse{\n    msg.payload = \"OFF\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 160,
        "wires": [
            [
                "4f82eeaa.6528a8"
            ]
        ]
    },
    {
        "id": "fb4e5f54.f8d5a",
        "type": "function",
        "z": "92f9eb20.694dc8",
        "name": "Online status",
        "func": "if (msg.payload >= 1.0){\n    msg.payload = \"ON\";\n}\nelse{\n    msg.payload = \"OFF\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 120,
        "wires": [
            [
                "726f0fd2.25ca8"
            ]
        ]
    },
    {
        "id": "65b8cfd9.c5bcf",
        "type": "function",
        "z": "92f9eb20.694dc8",
        "name": "Online status",
        "func": "if (msg.payload >= 1.0){\n    msg.payload = \"ON\";\n}\nelse{\n    msg.payload = \"OFF\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 80,
        "wires": [
            [
                "991e9fc3.b8bf2"
            ]
        ]
    },
    {
        "id": "3a1c91db.604546",
        "type": "comment",
        "z": "46a757ab.7b1178",
        "name": "ESP12 Soggiorno - 192.168.0.84",
        "info": "",
        "x": 190,
        "y": 520,
        "wires": []
    },
    {
        "id": "430f9fa2.33aca",
        "type": "ui_button",
        "z": "46a757ab.7b1178",
        "name": "Pulsante switch interruttore",
        "group": "261dd92c.ffff5e",
        "order": 3,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Luce Sala",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "power_settings_new",
        "payload": "2",
        "payloadType": "num",
        "topic": "",
        "x": 660,
        "y": 560,
        "wires": [
            [
                "2cc1658e.e0ae8a"
            ]
        ],
        "outputLabels": [
            "msg.background"
        ]
    },
    {
        "id": "9dcbaa38.1c1398",
        "type": "mqtt in",
        "z": "46a757ab.7b1178",
        "name": "",
        "topic": "stat/tasmotaLuceSala/POWER",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 190,
        "y": 560,
        "wires": [
            [
                "a847aa9c.89cde",
                "585992d5.c0b574"
            ]
        ]
    },
    {
        "id": "2cc1658e.e0ae8a",
        "type": "mqtt out",
        "z": "46a757ab.7b1178",
        "name": "",
        "topic": "cmnd/tasmotaLuceSala/POWER",
        "qos": "",
        "retain": "",
        "broker": "ee95ae30.7fefe8",
        "x": 990,
        "y": 560,
        "wires": []
    },
    {
        "id": "8d1f15f0.69aaa",
        "type": "nora-light",
        "z": "46a757ab.7b1178",
        "devicename": "Luce Sala",
        "lightcolor": false,
        "brightnesscontrol": false,
        "turnonwhenbrightnesschanges": true,
        "passthru": false,
        "statepayload": true,
        "brightnessoverride": "",
        "roomhint": "Soggiorno",
        "name": "Luce Sala",
        "nora": "e264142d.421a28",
        "topic": "",
        "onvalue": "1",
        "onvalueType": "num",
        "offvalue": "0",
        "offvalueType": "num",
        "x": 720,
        "y": 600,
        "wires": [
            [
                "2cc1658e.e0ae8a"
            ]
        ]
    },
    {
        "id": "a847aa9c.89cde",
        "type": "function",
        "z": "46a757ab.7b1178",
        "name": "mode",
        "func": "if(msg.payload === \"ON\"){\n    msg.payload = true;\n}\nelse if(msg.payload === \"OFF\"){\n    msg.payload = false;\n}\n\nmsg.payload = \"{\\\"on\\\":\" + msg.payload + \"}\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 600,
        "wires": [
            [
                "3271b3a7.f6446c"
            ]
        ]
    },
    {
        "id": "3271b3a7.f6446c",
        "type": "json",
        "z": "46a757ab.7b1178",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 590,
        "y": 600,
        "wires": [
            [
                "8d1f15f0.69aaa"
            ]
        ]
    },
    {
        "id": "896553b9.978dc8",
        "type": "conf ping",
        "z": "92f9eb20.694dc8",
        "name": "",
        "host": "192.168.0.84",
        "timeout": "5",
        "requests": "1",
        "x": 330,
        "y": 700,
        "wires": [
            [
                "d743fcbe.09128"
            ]
        ]
    },
    {
        "id": "d743fcbe.09128",
        "type": "function",
        "z": "92f9eb20.694dc8",
        "name": "Online status",
        "func": "if (msg.payload >= 1.0){\n    msg.payload = \"ON\";\n}\nelse{\n    msg.payload = \"OFF\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 700,
        "wires": [
            [
                "f11909d8.fd7608"
            ]
        ]
    },
    {
        "id": "ea69fe72.eed0c8",
        "type": "conf ping",
        "z": "92f9eb20.694dc8",
        "name": "",
        "host": "192.168.0.85",
        "timeout": "5",
        "requests": "1",
        "x": 330,
        "y": 740,
        "wires": [
            [
                "c279e25.bb1862"
            ]
        ]
    },
    {
        "id": "c279e25.bb1862",
        "type": "function",
        "z": "92f9eb20.694dc8",
        "name": "Online status",
        "func": "if (msg.payload >= 1.0){\n    msg.payload = \"ON\";\n}\nelse{\n    msg.payload = \"OFF\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 740,
        "wires": [
            [
                "e2ddadf7.b70cf8"
            ]
        ]
    },
    {
        "id": "dcc6fa4b.7eb5d8",
        "type": "comment",
        "z": "7aa2da03.bd1f7c",
        "name": "Sonoff Soggiorno - 192.168.0.85",
        "info": "",
        "x": 170,
        "y": 460,
        "wires": []
    },
    {
        "id": "c0177a9f.55558",
        "type": "ui_button",
        "z": "7aa2da03.bd1f7c",
        "name": "Pulsante switch interruttore",
        "group": "c66d2e37.c9d248",
        "order": 3,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Luce Soffitta",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "power_settings_new",
        "payload": "2",
        "payloadType": "num",
        "topic": "",
        "x": 660,
        "y": 500,
        "wires": [
            [
                "331dec6f.f1f7bc"
            ]
        ],
        "outputLabels": [
            "msg.background"
        ]
    },
    {
        "id": "404e85ac.cf468c",
        "type": "mqtt in",
        "z": "7aa2da03.bd1f7c",
        "name": "",
        "topic": "stat/tasmotaLuceSoffitta/POWER",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 170,
        "y": 500,
        "wires": [
            [
                "e1ad6fdf.9642b",
                "d8d9bb2.463e648"
            ]
        ]
    },
    {
        "id": "331dec6f.f1f7bc",
        "type": "mqtt out",
        "z": "7aa2da03.bd1f7c",
        "name": "",
        "topic": "cmnd/tasmotaLuceSoffitta/POWER",
        "qos": "",
        "retain": "",
        "broker": "ee95ae30.7fefe8",
        "x": 960,
        "y": 480,
        "wires": []
    },
    {
        "id": "db89fe53.1ba03",
        "type": "nora-light",
        "z": "7aa2da03.bd1f7c",
        "devicename": "Luce Soffitta",
        "lightcolor": false,
        "brightnesscontrol": false,
        "turnonwhenbrightnesschanges": true,
        "passthru": false,
        "statepayload": true,
        "brightnessoverride": "",
        "roomhint": "Soffitta",
        "name": "Luce Soffitta",
        "nora": "e264142d.421a28",
        "topic": "",
        "onvalue": "1",
        "onvalueType": "num",
        "offvalue": "0",
        "offvalueType": "num",
        "x": 710,
        "y": 540,
        "wires": [
            [
                "331dec6f.f1f7bc"
            ]
        ]
    },
    {
        "id": "e1ad6fdf.9642b",
        "type": "function",
        "z": "7aa2da03.bd1f7c",
        "name": "mode",
        "func": "if(msg.payload === \"ON\"){\n    msg.payload = true;\n}\nelse if(msg.payload === \"OFF\"){\n    msg.payload = false;\n}\n\nmsg.payload = \"{\\\"on\\\":\" + msg.payload + \"}\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 540,
        "wires": [
            [
                "de990279.a2fbd8"
            ]
        ]
    },
    {
        "id": "de990279.a2fbd8",
        "type": "json",
        "z": "7aa2da03.bd1f7c",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 540,
        "wires": [
            [
                "db89fe53.1ba03"
            ]
        ]
    },
    {
        "id": "d3448d4c.47663",
        "type": "mqtt out",
        "z": "f6bd4cff.b20c7",
        "name": "",
        "topic": "rasHome/contatore/telegramMsgOut",
        "qos": "0",
        "retain": "false",
        "broker": "ee95ae30.7fefe8",
        "x": 2010,
        "y": 640,
        "wires": []
    },
    {
        "id": "bd6613f4.4f9a58",
        "type": "calculator",
        "z": "e987eb50.a7ba78",
        "name": "",
        "inputMsgField": "payload",
        "outputMsgField": "payload",
        "operation": "rdec",
        "constant": "1",
        "round": false,
        "decimals": "0",
        "x": 720,
        "y": 1340,
        "wires": [
            [
                "48fccdbf.62ffc4"
            ]
        ]
    },
    {
        "id": "c0faa362.abbbb",
        "type": "tuya-smart-device-generic",
        "z": "f2a638ae.d93ca8",
        "d": true,
        "x": 330,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "a0e154b.3bfe828",
        "type": "inject",
        "z": "f2a638ae.d93ca8",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"deviceVirtualId\":\"51817282840d8e5f0b30\",\"deviceKey\":\"6621e3a98dd5117d\",\"deviceName\":\"Stampante 3D\",\"payload\":{\"dps\":{\"1\":true}}}",
        "payloadType": "json",
        "x": 130,
        "y": 780,
        "wires": [
            [
                "c0faa362.abbbb"
            ]
        ]
    },
    {
        "id": "78a2e018.63d378",
        "type": "inject",
        "z": "f2a638ae.d93ca8",
        "name": "on",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"deviceVirtualId\":\"51817282840d8e5f0b30\",\"deviceKey\":\"6621e3a98dd5117d\",\"deviceName\":\"Stampante 3D\",\"operation\":\"SET\",\"payload\":{\"dps\":1,\"set\":true}}",
        "payloadType": "json",
        "x": 130,
        "y": 820,
        "wires": [
            [
                "c0faa362.abbbb"
            ]
        ]
    },
    {
        "id": "ba6986cf.34fcc8",
        "type": "inject",
        "z": "f2a638ae.d93ca8",
        "name": "on",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"deviceVirtualId\":\"51817282840d8e5f0b30\",\"deviceKey\":\"6621e3a98dd5117d\",\"deviceName\":\"Stampante 3D\",\"operation\":\"SET\",\"payload\":{\"dps\":1,\"set\":false}}",
        "payloadType": "json",
        "x": 130,
        "y": 860,
        "wires": [
            [
                "c0faa362.abbbb"
            ]
        ]
    },
    {
        "id": "2dc3fc65.fd27fc",
        "type": "mqtt in",
        "z": "d4fae0b8.1d7718",
        "name": "",
        "topic": "rasHome/ventilatore/rce",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 140,
        "y": 680,
        "wires": [
            [
                "36afdfa8.2f71c8"
            ]
        ]
    },
    {
        "id": "883db943.00f6c",
        "type": "subflow:c0642d23.ec7808",
        "z": "af47c860.21273",
        "d": true,
        "name": "",
        "env": [],
        "x": 140,
        "y": 480,
        "wires": [
            [
                "bbb70943.d221f"
            ],
            [
                "bbb70943.d221f"
            ]
        ]
    },
    {
        "id": "8fbd9e14.28f378",
        "type": "ui_button",
        "z": "5b5ae0eb.cb95b",
        "name": "Pulsante switch interruttore",
        "group": "261dd92c.ffff5e",
        "order": 1,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Luce Cucina",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "power_settings_new",
        "payload": "2",
        "payloadType": "num",
        "topic": "",
        "x": 660,
        "y": 80,
        "wires": [
            [
                "9471aab.7078d58"
            ]
        ],
        "outputLabels": [
            "msg.background"
        ]
    },
    {
        "id": "a3ea4f18.9629a8",
        "type": "mqtt in",
        "z": "5b5ae0eb.cb95b",
        "name": "",
        "topic": "stat/tasmotaLuceCucina/POWER",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 190,
        "y": 100,
        "wires": [
            [
                "3cbd95b0.d519a2",
                "bdac8619.5e4d9"
            ]
        ]
    },
    {
        "id": "9471aab.7078d58",
        "type": "mqtt out",
        "z": "5b5ae0eb.cb95b",
        "name": "",
        "topic": "cmnd/tasmotaLuceCucina/POWER",
        "qos": "",
        "retain": "",
        "broker": "ee95ae30.7fefe8",
        "x": 1080,
        "y": 80,
        "wires": []
    },
    {
        "id": "f31d0f20.58a0f",
        "type": "nora-light",
        "z": "5b5ae0eb.cb95b",
        "devicename": "Luce Cucina",
        "lightcolor": false,
        "brightnesscontrol": false,
        "turnonwhenbrightnesschanges": true,
        "passthru": false,
        "statepayload": true,
        "brightnessoverride": "",
        "roomhint": "Cucina",
        "name": "Luce Cucina",
        "nora": "e264142d.421a28",
        "topic": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "offvalue": "false",
        "offvalueType": "bool",
        "x": 730,
        "y": 120,
        "wires": [
            [
                "d78207ac.b30f6"
            ]
        ]
    },
    {
        "id": "3cbd95b0.d519a2",
        "type": "function",
        "z": "5b5ae0eb.cb95b",
        "name": "mode",
        "func": "if(msg.payload === \"ON\"){\n    msg.payload = true;\n}\nelse if(msg.payload === \"OFF\"){\n    msg.payload = false;\n}\n\nmsg.payload = \"{\\\"on\\\":\" + msg.payload + \"}\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 120,
        "wires": [
            [
                "7392217a.dac64"
            ]
        ]
    },
    {
        "id": "d78207ac.b30f6",
        "type": "function",
        "z": "5b5ae0eb.cb95b",
        "name": "mode",
        "func": "if(msg.payload.on === true){\n    msg.payload = 1;\n}\nelse if(msg.payload.on === false){\n    msg.payload = 0;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 870,
        "y": 120,
        "wires": [
            [
                "9471aab.7078d58"
            ]
        ]
    },
    {
        "id": "7392217a.dac64",
        "type": "json",
        "z": "5b5ae0eb.cb95b",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 590,
        "y": 120,
        "wires": [
            [
                "f31d0f20.58a0f"
            ]
        ]
    },
    {
        "id": "ef4bf93a.c12908",
        "type": "comment",
        "z": "5b5ae0eb.cb95b",
        "name": "Switch ESP-01S Cucina - 192.168.0.82",
        "info": "",
        "x": 690,
        "y": 40,
        "wires": []
    },
    {
        "id": "3457714d.01eb26",
        "type": "mqtt out",
        "z": "5b5ae0eb.cb95b",
        "name": "",
        "topic": "rasHome/ventilatore/rce",
        "qos": "0",
        "retain": "false",
        "broker": "ee95ae30.7fefe8",
        "x": 1530,
        "y": 380,
        "wires": []
    },
    {
        "id": "82320b49.e23f6",
        "type": "change",
        "z": "5b5ae0eb.cb95b",
        "name": "payload2rce",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "rce",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "rce",
                "pt": "flow",
                "to": "rce",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 380,
        "wires": [
            [
                "3457714d.01eb26"
            ]
        ]
    },
    {
        "id": "a362cec9.215f5",
        "type": "rbe",
        "z": "5b5ae0eb.cb95b",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 1170,
        "y": 380,
        "wires": [
            [
                "82320b49.e23f6",
                "3d618cdf.06da84"
            ]
        ]
    },
    {
        "id": "34f99bb7.6a8a24",
        "type": "function",
        "z": "5b5ae0eb.cb95b",
        "name": "Rafferddamento Invernale Cucina",
        "func": "var temperature = msg.payload.temperature || context.get('temperature');\nvar humidity = msg.payload.humidity ||  context.get('humidity');\n\nvar mode = msg.payload.mode || context.get('mode');\nvar setpoint = msg.payload.setpoint || context.get('setpoint');\n    \nfunction temperatureIsValid(){\n    return (temperature > 0) && (temperature !== undefined);\n}\n\nif ((mode == \"cool\")){\n    if (temperature >= setpoint){\n        msg.payload = 1;\n        msg.rce = \"TERMOSTATO: soglia avvio raffreddamento\";\n    }\n    else if(temperature < setpoint){\n        msg.payload = 0;\n        msg.rce = \"TERMOSTATO: soglia arresto raffreddamento\";\n    }\n}\nelse if (mode == \"off\"){\n    msg.payload = 0;\n    msg.rce = \"TERMOSTATO: termostato disattivato\";\n}\n\ncontext.set('mode', mode);\ncontext.set('setpoint', setpoint);\ncontext.set('temperature', temperature);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 960,
        "y": 380,
        "wires": [
            [
                "a362cec9.215f5"
            ]
        ]
    },
    {
        "id": "3d618cdf.06da84",
        "type": "mqtt out",
        "z": "5b5ae0eb.cb95b",
        "name": "",
        "topic": "cmnd/tasmotaVentola/POWER",
        "qos": "",
        "retain": "",
        "broker": "ee95ae30.7fefe8",
        "x": 1390,
        "y": 200,
        "wires": []
    },
    {
        "id": "2a7d3b2d.e5c94c",
        "type": "nora-thermostat",
        "z": "5b5ae0eb.cb95b",
        "devicename": "Termostato Cucina",
        "roomhint": "Cucina",
        "name": "",
        "modes": "off,cool,on,fan-only",
        "unit": "C",
        "topic": "",
        "passthru": true,
        "commandOnly": false,
        "queryOnly": false,
        "bufferRangeCelsius": 2,
        "nora": "e264142d.421a28",
        "x": 690,
        "y": 280,
        "wires": [
            [
                "34f99bb7.6a8a24",
                "ca69fbd4.033798",
                "2b006c38.7cd30c"
            ]
        ]
    },
    {
        "id": "5c28b76b.037db8",
        "type": "ui_button",
        "z": "5b5ae0eb.cb95b",
        "name": "Pulsante switch interruttore",
        "group": "7c9364c.4aa5a1c",
        "order": 1,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Ventola",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "power_settings_new",
        "payload": "2",
        "payloadType": "num",
        "topic": "",
        "x": 720,
        "y": 200,
        "wires": [
            [
                "3d618cdf.06da84"
            ]
        ],
        "outputLabels": [
            "msg.background"
        ]
    },
    {
        "id": "ca69fbd4.033798",
        "type": "function",
        "z": "5b5ae0eb.cb95b",
        "name": "",
        "func": "if ('setpoint' in msg.payload){\n    msg.payload = msg.payload.setpoint;\n    return msg;\n}\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "x": 890,
        "y": 320,
        "wires": [
            [
                "b0bee383.e31af"
            ]
        ]
    },
    {
        "id": "2b006c38.7cd30c",
        "type": "function",
        "z": "5b5ae0eb.cb95b",
        "name": "thermostatSTATE",
        "func": "if('mode' in msg.payload){\n    if(msg.payload.mode === \"cool\"){\n        msg.payload = \"ON\";\n    }\n    else{\n        msg.payload = \"OFF\";\n    }\n    return msg;\n}\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "x": 930,
        "y": 280,
        "wires": [
            [
                "77c27203.604f24"
            ]
        ]
    },
    {
        "id": "48c66fa0.9b234",
        "type": "function",
        "z": "5b5ae0eb.cb95b",
        "name": "temperatureSTATE",
        "func": "const SETPOINT_MIN = 15.0;\nconst SETPOINT_MAX = 30.0;\n\nvar temperature = msg.payload.DHT11.Temperature;\nvar humidity = msg.payload.DHT11.Humidity;\nmsg.payload = {};\nmsg.payload.temperature = temperature;\nmsg.payload.humidity = humidity;\nmsg.payload.setpointLow = SETPOINT_MIN;\nmsg.payload.setpointHigh = SETPOINT_MAX;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 280,
        "wires": [
            [
                "2a7d3b2d.e5c94c"
            ]
        ]
    },
    {
        "id": "34a9ccf0.850ac4",
        "type": "function",
        "z": "5b5ae0eb.cb95b",
        "name": "thermostatSTATE",
        "func": "var status = msg.payload;\nmsg.payload = {};\n\nif(status === \"ON\"){\n    msg.payload.mode = \"cool\";\n}\nelse if(status === \"OFF\"){\n    msg.payload.mode = \"off\";\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 240,
        "wires": [
            [
                "2a7d3b2d.e5c94c"
            ]
        ]
    },
    {
        "id": "9dbc1a75.b69a3",
        "type": "function",
        "z": "5b5ae0eb.cb95b",
        "name": "temperatureSETPOINT",
        "func": "var setpoint = msg.payload;\nmsg.payload = {};\nmsg.payload.setpoint = setpoint;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 320,
        "wires": [
            [
                "2a7d3b2d.e5c94c"
            ]
        ]
    },
    {
        "id": "642b0f9.103e77",
        "type": "json",
        "z": "5b5ae0eb.cb95b",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 330,
        "y": 280,
        "wires": [
            [
                "48c66fa0.9b234"
            ]
        ]
    },
    {
        "id": "1115c448.d0a8f4",
        "type": "mqtt in",
        "z": "5b5ae0eb.cb95b",
        "name": "",
        "topic": "tele/tasmotaSala/SENSOR",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 150,
        "y": 280,
        "wires": [
            [
                "642b0f9.103e77"
            ]
        ]
    },
    {
        "id": "4076f296.8cf20c",
        "type": "mqtt in",
        "z": "5b5ae0eb.cb95b",
        "name": "",
        "topic": "stat/tasmotaVentola/POWER",
        "qos": "2",
        "datatype": "auto",
        "broker": "ee95ae30.7fefe8",
        "x": 180,
        "y": 200,
        "wires": [
            [
                "24cf0f75.840ae"
            ]
        ]
    },
    {
        "id": "8dc53b5f.4bba88",
        "type": "comment",
        "z": "5b5ae0eb.cb95b",
        "name": "SonOff Ventilatore - 192.168.0.81",
        "info": "",
        "x": 170,
        "y": 160,
        "wires": []
    },
    {
        "id": "23f01ba8.b19e44",
        "type": "comment",
        "z": "e987eb50.a7ba78",
        "name": "Gestione ricarica",
        "info": "",
        "x": 120,
        "y": 1500,
        "wires": []
    },
    {
        "id": "98af3603.f6171",
        "type": "change",
        "z": "af47c860.21273",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "outside_min_temp",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 320,
        "wires": [
            [
                "c0a55ef4.5ab16"
            ]
        ]
    },
    {
        "id": "24a4eed3.c8eefa",
        "type": "change",
        "z": "af47c860.21273",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "outside_max_temp",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 360,
        "wires": [
            [
                "de323967.4509a"
            ]
        ]
    },
    {
        "id": "12fbc5c3.e9ceba",
        "type": "change",
        "z": "af47c860.21273",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "outside_min_umid",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 400,
        "wires": [
            [
                "e2e6cedd.618018"
            ]
        ]
    },
    {
        "id": "ad9aaaaa.91f35",
        "type": "change",
        "z": "af47c860.21273",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "outside_max_umid",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 440,
        "wires": [
            [
                "3c8dba7a.a92ab6"
            ]
        ]
    },
    {
        "id": "b38c22b3.521338",
        "type": "function",
        "z": "e987eb50.a7ba78",
        "name": "Charge Control v2.1",
        "func": "const MINUTE_FOR_BATTERY_BALANCING = 60;\nconst STANDBY_POWER = 5;\nconst ENERGY_1_PERC = 0.4;\n\nvar energyTotalVal = flow.get('energyTotalVal');\nvar energyStartChargeVal = flow.get('energyStartChargeVal') || 0;\nvar energyStopChargeVal = flow.get('energyStopChargeVal') || 0;\nvar energyToChargeVal = flow.get('energyToChargeVal') || 0;\nvar energyPercToChargeVal = flow.get('energyPercToChargeVal');\nvar relayStatus = flow.get('relayStatus');\nvar powerVal = flow.get('powerVal');\n\nvar timeStartBalancing = context.get('timeStartBalancing');\nvar batteryBalancingStarted = context.get('batteryBalancingStarted');\nvar timeoutForBalancing;\n\nfunction isCharged(){\n    return energyTotalVal >= energyStopChargeVal;\n}\nfunction isStandby(){\n    return powerVal < STANDBY_POWER;\n}\nfunction isBalanced(){\n    now = new Date();\n    \n\t\tcontext.set('watchdogBalancing', now);\n\t\tcontext.set('difBalancing', now - timeStartBalancing);\n    return ((now - timeStartBalancing) > (MINUTE_FOR_BATTERY_BALANCING * 60000));\n}\nfunction balanceBattery(){\n\tif (batteryBalancingStarted){\n\t\tif (isBalanced()){\n\t\t    msg.payload = 0;\n\t\t\tvar energyCharged = energyTotalVal - energyStartChargeVal;\n\t\t\tvar energyPercCharged = energyCharged / ENERGY_1_PERC;\n\t\t\tmsg.rce = \"RICARICA NISSAN: Ricarica e bilanciamento batteria completato (\" + energyCharged.toFixed(2) + \" kWh/\" + energyPercCharged + \"%)\";\n\t\t    node.send(msg);\n\t\t}\n\t}\n\telse{\n\t\ttimeStartBalancing = new Date();\n        context.set('timeStartBalancing', timeStartBalancing);\n        context.set('batteryBalancingStarted', true);\n        msg.rce = \"RICARICA NISSAN: Avvio bilanciamento batteria\";\n        node.send(msg);\n\t}\n}\n\n\nif(relayStatus === \"ON\") {\n    if (isCharged()) {\n        msg.rce = \"RICARICA NISSAN: Ricarica completa (\" + energyToChargeVal + \" kWh/\" + energyPercToChargeVal + \"%)\";\n        msg.payload = 0;\n        node.send(msg);\n    }\n    else if (isStandby()) {\n\t\ttimeoutForBalancing = setTimeout(balanceBattery(), 60000);\n    }\n}\nelse{\n    context.set('batteryBalancingStarted', false);\n    clearTimeout(timeoutForBalancing);\n}\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 1620,
        "wires": [
            [
                "40567a2e.45714c"
            ]
        ]
    },
    {
        "id": "b5017095.10f46",
        "type": "inject",
        "z": "e987eb50.a7ba78",
        "d": true,
        "name": "",
        "repeat": "10",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 310,
        "y": 1780,
        "wires": [
            [
                "a34afe93.7b6548"
            ]
        ]
    },
    {
        "id": "9664fd3c.68c368",
        "type": "debug",
        "z": "e987eb50.a7ba78",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 820,
        "y": 1800,
        "wires": []
    },
    {
        "id": "a34afe93.7b6548",
        "type": "function",
        "z": "e987eb50.a7ba78",
        "name": "Charge Control v3.0",
        "func": "const MAX_BATTERY_CAPACITY = 40.0;\nconst ENERGY_1_PERC = MAX_BATTERY_CAPACITY / 100.0;\n\nlet energyValue = flow.get('energyTotalVal') || 0;\nlet energyPercToChargeVal = flow.get('energyPercToChargeVal') || 0;\n\nfunction ChargerController(){\n    let chargeStatus = false;\n    let energyPercToCharge = 0;\n    let energyValue = 0;\n    let energyValAtStart = 0;\n    let energyValAtStop = 0;\n    let energyCharged = 0;\n    \n    this.update = function(){\n        if (energyValue >= energyValAtStop){\n            chargeStatus = true;\n        }\n        energyCharged = energyValue - energyValAtStart;\n    }\n    this.startCharge = function(){\n        chargeStatus = false;\n        energyValAtStart =  energyValue;\n        energyValAtStop = Number((ENERGY_1_PERC * energyPercToCharge + energyValAtStop).toFixed(2));\n    }\n    this.stopCharge = function(){\n        chargeStatus = true;\n        energyCharged = energyValue - energyValAtStart;\n    }\n    this.setPercToCharge = function(value){\n        energyPercToCharge = value;\n    }\n    this.setCurrentEnergyValue = function(value){\n        energyValue = value;\n    }\n    this.getChargedEnergy = function(){\n        return energyCharged;\n    }\n    this.getChargedStatus = function(){\n        return chargeStatus;\n    }\n    this.getEnergyToCharge = function(){\n        return energyValAtStop - energyValAtStart;\n    }\n}\n\nconst STANDBY_POWER = 5;\nconst POWER_CHARGING_STATE = 2000;\n\nfunction PowerMonitor(){\n    let isBalancing = false\n    let isCharging = false;\n    let isStandby = false;\n    this.updatePowerValue = function(powerVal){\n        if (powerVal < STANDBY_POWER){\n            isBalancing = false\n            isCharging = false;\n            isStandby = true;\n        }\n        else if(powerVal > POWER_CHARGING_STATE){\n            isBalancing = false\n            isCharging = true;\n            isStandby = false;\n        }\n        else{\n            isBalancing = true\n            isCharging = true;\n            isStandby = false;\n        }\n    }\n    this.getStandbyStatus = function(){\n        return isStandby;\n    }\n    this.getBalancingStatus = function(){\n        return isBalancing;\n    }\n    this.getChargingStatus = function(){\n        return isCharging;\n    }\n}\n\nlet chargerController =  context.get('chargerController') || new ChargerController();\nchargerController.setPercToCharge(energyPercToChargeVal);\nchargerController.setCurrentEnergyValue(energyValue);\nchargerController.update();\n\nif (chargerController.getChargedStatus()){\n    chargerController.stopCharge();\n    msg.rce(\"RICARICA NISSAN: Ricarica completata\");\n    msg.payload = 0;\n}\n\nif(energyPercToChargeVal >0 && !chargerController.getChargedStatus()){\n    chargerController.startCharge();\n    msg.rce(\"RICARICA NISSAN: Ricarica avviata\");\n    msg.payload = 1;\n}\n\nlet powerMonitor = context.get('powerMonitor') || new PowerMonitor();\npowerMonitor.updatePowerValue(powerVal);\n\nlet waitingLoad = context.get('waitingLoad') || 0;\nlet timoutWaitingLoad = context.get('timoutWaitingLoad') || 0;\n\nif (powerMonitor.getStandbyStatus()) {\n    if (powerVal >0){\n        if(!waitingLoad){\n        timoutWaitingLoad = setTimeout(function(){\n\t\t    msg.rce = \"RICARICA NISSAN: Sgancio per assenza carico collegato\";\n            msg.payload = 0;\n            waitingLoad = 0;\n            node.send(msg);}, 300000);}\n        waitingLoad = 1;\n    }\n    else{\n        clearTimeout(timoutWaitingLoad);\n        waitingLoad = 0;\n    }\n}\n\ncontext.set('powerMonitor', powerMonitor);\ncontext.set('chargerController', chargerController);\ncontext.set('timoutWaitingLoad', timoutWaitingLoad);\ncontext.set('waitingLoad', waitingLoad);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 1800,
        "wires": [
            [
                "9664fd3c.68c368"
            ]
        ]
    },
    {
        "id": "a9aebf7f.0f93d8",
        "type": "inject",
        "z": "af47c860.21273",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 210,
        "y": 560,
        "wires": [
            [
                "d3a3a3c0.e7289",
                "329a8487.bd6094"
            ]
        ]
    },
    {
        "id": "d3a3a3c0.e7289",
        "type": "influxdb in",
        "z": "af47c860.21273",
        "d": true,
        "influxdb": "95c76cc2.f1041",
        "name": "",
        "query": "SELECT min(\"temperature\") FROM \"Meteo\".\"autogen\".\"Cortile\" WHERE time > now() - 1d AND time < now()",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 490,
        "y": 540,
        "wires": [
            [
                "e880a6c2.074918"
            ]
        ]
    },
    {
        "id": "e880a6c2.074918",
        "type": "debug",
        "z": "af47c860.21273",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 650,
        "y": 540,
        "wires": []
    },
    {
        "id": "329a8487.bd6094",
        "type": "influxdb in",
        "z": "af47c860.21273",
        "d": true,
        "influxdb": "95c76cc2.f1041",
        "name": "",
        "query": "SELECT max(\"temperature\") FROM \"Meteo\".\"autogen\".\"Cortile\" WHERE time > now() - 1d AND time < now()",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 490,
        "y": 580,
        "wires": [
            [
                "e880a6c2.074918"
            ]
        ]
    },
    {
        "id": "11643f3c.566741",
        "type": "openhab2-in",
        "z": "e987eb50.a7ba78",
        "name": "",
        "controller": "5d0ef44d.6ae5c4",
        "itemname": "setpointPercRicarica",
        "x": 130,
        "y": 1240,
        "wires": [
            [
                "ae16a399.4da198"
            ],
            []
        ]
    },
    {
        "id": "fa76c7fc.58d76",
        "type": "openhab2-in",
        "z": "f2a638ae.d93ca8",
        "name": "",
        "controller": "5d0ef44d.6ae5c4",
        "itemname": "NAS",
        "x": 390,
        "y": 680,
        "wires": [
            [
                "803cc887.2441b"
            ],
            []
        ]
    },
    {
        "id": "8d6e42ed.3fc558",
        "type": "openhab2-in",
        "z": "5b5ae0eb.cb95b",
        "name": "",
        "controller": "5d0ef44d.6ae5c4",
        "itemname": "statoTermostato",
        "x": 120,
        "y": 240,
        "wires": [
            [
                "34a9ccf0.850ac4"
            ],
            []
        ]
    },
    {
        "id": "2bb5a94a.3f24ce",
        "type": "openhab2-in",
        "z": "5b5ae0eb.cb95b",
        "name": "",
        "controller": "5d0ef44d.6ae5c4",
        "itemname": "Setpoint_Termostato",
        "x": 130,
        "y": 320,
        "wires": [
            [
                "9dbc1a75.b69a3"
            ],
            []
        ]
    },
    {
        "id": "b0bee383.e31af",
        "type": "openhab2-out",
        "z": "5b5ae0eb.cb95b",
        "name": "",
        "controller": "5d0ef44d.6ae5c4",
        "itemname": "Setpoint_Termostato",
        "topic": "ItemUpdate",
        "payload": "",
        "x": 1080,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "77c27203.604f24",
        "type": "openhab2-out",
        "z": "5b5ae0eb.cb95b",
        "name": "",
        "controller": "5d0ef44d.6ae5c4",
        "itemname": "statoTermostato",
        "topic": "ItemUpdate",
        "payload": "",
        "x": 1160,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "c0a55ef4.5ab16",
        "type": "openhab2-out",
        "z": "af47c860.21273",
        "name": "",
        "controller": "5d0ef44d.6ae5c4",
        "itemname": "Min_Temp_Outside",
        "topic": "ItemUpdate",
        "payload": "",
        "x": 1110,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "de323967.4509a",
        "type": "openhab2-out",
        "z": "af47c860.21273",
        "name": "",
        "controller": "5d0ef44d.6ae5c4",
        "itemname": "Max_Temp_Outside",
        "topic": "ItemUpdate",
        "payload": "",
        "x": 1120,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "e2e6cedd.618018",
        "type": "openhab2-out",
        "z": "af47c860.21273",
        "name": "",
        "controller": "5d0ef44d.6ae5c4",
        "itemname": "Min_Hum_Outside",
        "topic": "ItemUpdate",
        "payload": "",
        "x": 1110,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "3c8dba7a.a92ab6",
        "type": "openhab2-out",
        "z": "af47c860.21273",
        "name": "",
        "controller": "5d0ef44d.6ae5c4",
        "itemname": "Max_Hum_Outside",
        "topic": "ItemUpdate",
        "payload": "",
        "x": 1110,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "cf2aff4e.9d3588",
        "type": "ui_led",
        "z": "73b7c891.499c78",
        "order": 10,
        "group": "1a572bc4.5062c4",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "OFF",
                "valueType": "str"
            },
            {
                "color": "green",
                "value": "ON",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "STATO CARICO",
        "x": 760,
        "y": 1380,
        "wires": []
    },
    {
        "id": "6ba5f4b5.d66c84",
        "type": "ui_led",
        "z": "5b5ae0eb.cb95b",
        "order": 4,
        "group": "add34066.c25a9",
        "width": 0,
        "height": 0,
        "label": "INT Telefoni",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "0",
                "valueType": "num"
            },
            {
                "color": "green",
                "value": "1",
                "valueType": "num"
            },
            {
                "color": "PURPLE",
                "value": "2",
                "valueType": "num"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "INT Telefoni",
        "x": 990,
        "y": 580,
        "wires": []
    },
    {
        "id": "f9f3406e.719e2",
        "type": "ui_led",
        "z": "e987eb50.a7ba78",
        "order": 4,
        "group": "4f75689c.e4dd2",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "OFF",
                "valueType": "str"
            },
            {
                "color": "green",
                "value": "ON",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "STATO CARICO",
        "x": 760,
        "y": 400,
        "wires": []
    },
    {
        "id": "75c509dc.2bb598",
        "type": "ui_led",
        "z": "295673c6.e0b2c4",
        "order": 2,
        "group": "f07457d0.8f2ba8",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "OFF",
                "valueType": "str"
            },
            {
                "color": "green",
                "value": "ON",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "STATO CARICO",
        "x": 420,
        "y": 60,
        "wires": []
    },
    {
        "id": "75d216dc.e0443",
        "type": "ui_led",
        "z": "295673c6.e0b2c4",
        "order": 2,
        "group": "7c9364c.4aa5a1c",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "OFF",
                "valueType": "str"
            },
            {
                "color": "green",
                "value": "ON",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "STATO CARICO",
        "x": 420,
        "y": 180,
        "wires": []
    },
    {
        "id": "c5f08f2a.abde18",
        "type": "ui_led",
        "z": "92f9eb20.694dc8",
        "order": 3,
        "group": "a0262ea6.472a3",
        "width": 0,
        "height": 0,
        "label": "NAS",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "OFF",
                "valueType": "str"
            },
            {
                "color": "green",
                "value": "ON",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "NAS",
        "x": 670,
        "y": 780,
        "wires": []
    },
    {
        "id": "c948be60.4188b",
        "type": "ui_led",
        "z": "92f9eb20.694dc8",
        "order": 3,
        "group": "a0262ea6.472a3",
        "width": 0,
        "height": 0,
        "label": "Ventilatore",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "OFF",
                "valueType": "str"
            },
            {
                "color": "green",
                "value": "ON",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "Ventilatore",
        "x": 690,
        "y": 580,
        "wires": []
    },
    {
        "id": "8bb6061a.916b4",
        "type": "ui_led",
        "z": "92f9eb20.694dc8",
        "order": 3,
        "group": "a0262ea6.472a3",
        "width": 0,
        "height": 0,
        "label": "Ricarica Nissan",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "OFF",
                "valueType": "str"
            },
            {
                "color": "green",
                "value": "ON",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "Ricarica Nissan",
        "x": 700,
        "y": 540,
        "wires": []
    },
    {
        "id": "b2a256fd.dc7df",
        "type": "ui_led",
        "z": "92f9eb20.694dc8",
        "order": 3,
        "group": "a0262ea6.472a3",
        "width": 0,
        "height": 0,
        "label": "DHT11 Camera",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "OFF",
                "valueType": "str"
            },
            {
                "color": "green",
                "value": "ON",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "DHT11 Camera",
        "x": 700,
        "y": 500,
        "wires": []
    },
    {
        "id": "3796f1c9.084dbe",
        "type": "ui_led",
        "z": "92f9eb20.694dc8",
        "order": 3,
        "group": "a0262ea6.472a3",
        "width": 0,
        "height": 0,
        "label": "Inverter",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "OFF",
                "valueType": "str"
            },
            {
                "color": "green",
                "value": "ON",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "Inverter",
        "x": 680,
        "y": 460,
        "wires": []
    },
    {
        "id": "48fbf8c.c57d808",
        "type": "ui_led",
        "z": "92f9eb20.694dc8",
        "order": 3,
        "group": "a0262ea6.472a3",
        "width": 0,
        "height": 0,
        "label": "Contatore",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "OFF",
                "valueType": "str"
            },
            {
                "color": "green",
                "value": "ON",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "Contatore",
        "x": 680,
        "y": 420,
        "wires": []
    },
    {
        "id": "f8b0d0e8.d92aa",
        "type": "ui_led",
        "z": "92f9eb20.694dc8",
        "order": 3,
        "group": "a0262ea6.472a3",
        "width": 0,
        "height": 0,
        "label": "Termostato",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "OFF",
                "valueType": "str"
            },
            {
                "color": "green",
                "value": "ON",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "Termostato",
        "x": 690,
        "y": 380,
        "wires": []
    },
    {
        "id": "363beafa.02a66e",
        "type": "ui_led",
        "z": "92f9eb20.694dc8",
        "order": 3,
        "group": "a0262ea6.472a3",
        "width": 0,
        "height": 0,
        "label": "Luce cortile",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "OFF",
                "valueType": "str"
            },
            {
                "color": "green",
                "value": "ON",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "Luce cortile",
        "x": 690,
        "y": 340,
        "wires": []
    },
    {
        "id": "b83949bf.2c4548",
        "type": "ui_led",
        "z": "92f9eb20.694dc8",
        "order": 3,
        "group": "a0262ea6.472a3",
        "width": 0,
        "height": 0,
        "label": "PI-Hole",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "OFF",
                "valueType": "str"
            },
            {
                "color": "green",
                "value": "ON",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "PI-Hole",
        "x": 680,
        "y": 860,
        "wires": []
    },
    {
        "id": "4262c3c.ed14dbc",
        "type": "ui_led",
        "z": "92f9eb20.694dc8",
        "order": 3,
        "group": "a0262ea6.472a3",
        "width": 0,
        "height": 0,
        "label": "Luce Cucina",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "OFF",
                "valueType": "str"
            },
            {
                "color": "green",
                "value": "ON",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "Luce Cucina",
        "x": 690,
        "y": 620,
        "wires": []
    },
    {
        "id": "6b616d7f.19a364",
        "type": "ui_led",
        "z": "92f9eb20.694dc8",
        "order": 3,
        "group": "a0262ea6.472a3",
        "width": 0,
        "height": 0,
        "label": "Luce Scale",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "OFF",
                "valueType": "str"
            },
            {
                "color": "green",
                "value": "ON",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "Luce Scale",
        "x": 690,
        "y": 660,
        "wires": []
    },
    {
        "id": "726f0fd2.25ca8",
        "type": "ui_led",
        "z": "92f9eb20.694dc8",
        "order": 3,
        "group": "a0262ea6.472a3",
        "width": 0,
        "height": 0,
        "label": "DHT11 Server",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "OFF",
                "valueType": "str"
            },
            {
                "color": "green",
                "value": "ON",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "DHT11 Server",
        "x": 700,
        "y": 120,
        "wires": []
    },
    {
        "id": "4f82eeaa.6528a8",
        "type": "ui_led",
        "z": "92f9eb20.694dc8",
        "order": 3,
        "group": "a0262ea6.472a3",
        "width": 0,
        "height": 0,
        "label": "DHT11 Soffitta",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "OFF",
                "valueType": "str"
            },
            {
                "color": "green",
                "value": "ON",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "DHT11 Soffitta",
        "x": 700,
        "y": 160,
        "wires": []
    },
    {
        "id": "14dbe1a3.4e02fe",
        "type": "ui_led",
        "z": "92f9eb20.694dc8",
        "order": 3,
        "group": "a0262ea6.472a3",
        "width": 0,
        "height": 0,
        "label": "DHT11 Sala",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "OFF",
                "valueType": "str"
            },
            {
                "color": "green",
                "value": "ON",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "DHT11 Sala",
        "x": 690,
        "y": 200,
        "wires": []
    },
    {
        "id": "689d96a6.31712",
        "type": "ui_led",
        "z": "92f9eb20.694dc8",
        "order": 3,
        "group": "a0262ea6.472a3",
        "width": 0,
        "height": 0,
        "label": "SolarNode",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "OFF",
                "valueType": "str"
            },
            {
                "color": "green",
                "value": "ON",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "SolarNode",
        "x": 690,
        "y": 240,
        "wires": []
    },
    {
        "id": "991e9fc3.b8bf2",
        "type": "ui_led",
        "z": "92f9eb20.694dc8",
        "order": 3,
        "group": "a0262ea6.472a3",
        "width": 0,
        "height": 0,
        "label": "Router",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "OFF",
                "valueType": "str"
            },
            {
                "color": "green",
                "value": "ON",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "Router",
        "x": 670,
        "y": 80,
        "wires": []
    },
    {
        "id": "585992d5.c0b574",
        "type": "ui_led",
        "z": "46a757ab.7b1178",
        "order": 4,
        "group": "261dd92c.ffff5e",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "OFF",
                "valueType": "str"
            },
            {
                "color": "green",
                "value": "ON",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "STATO CARICO",
        "x": 440,
        "y": 560,
        "wires": []
    },
    {
        "id": "f11909d8.fd7608",
        "type": "ui_led",
        "z": "92f9eb20.694dc8",
        "order": 3,
        "group": "a0262ea6.472a3",
        "width": 0,
        "height": 0,
        "label": "Luce Sala",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "OFF",
                "valueType": "str"
            },
            {
                "color": "green",
                "value": "ON",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "Luce Sala",
        "x": 680,
        "y": 700,
        "wires": []
    },
    {
        "id": "e2ddadf7.b70cf8",
        "type": "ui_led",
        "z": "92f9eb20.694dc8",
        "order": 3,
        "group": "a0262ea6.472a3",
        "width": 0,
        "height": 0,
        "label": "Luce Soffitta",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "OFF",
                "valueType": "str"
            },
            {
                "color": "green",
                "value": "ON",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "Luce Soffitta",
        "x": 690,
        "y": 740,
        "wires": []
    },
    {
        "id": "d8d9bb2.463e648",
        "type": "ui_led",
        "z": "7aa2da03.bd1f7c",
        "order": 4,
        "group": "c66d2e37.c9d248",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "OFF",
                "valueType": "str"
            },
            {
                "color": "green",
                "value": "ON",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "STATO CARICO",
        "x": 420,
        "y": 500,
        "wires": []
    },
    {
        "id": "bdac8619.5e4d9",
        "type": "ui_led",
        "z": "5b5ae0eb.cb95b",
        "order": 2,
        "group": "261dd92c.ffff5e",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "OFF",
                "valueType": "str"
            },
            {
                "color": "green",
                "value": "ON",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "STATO CARICO",
        "x": 440,
        "y": 80,
        "wires": []
    },
    {
        "id": "24cf0f75.840ae",
        "type": "ui_led",
        "z": "5b5ae0eb.cb95b",
        "order": 2,
        "group": "7c9364c.4aa5a1c",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "OFF",
                "valueType": "str"
            },
            {
                "color": "green",
                "value": "ON",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "STATO CARICO",
        "x": 500,
        "y": 200,
        "wires": []
    },
    {
        "id": "fbb85211.39792",
        "type": "speedtest",
        "z": "92f9eb20.694dc8",
        "name": "",
        "maxTime": 5000,
        "x": 380,
        "y": 1100,
        "wires": [
            [
                "acbd84b8.5ff8e",
                "e7fa6778.8f28f8",
                "9dc610d0.3efc2",
                "7a995ac8.eefd2c",
                "5719c03d.75cea8",
                "3c478cef.e4644c",
                "24ba01db.d46af6",
                "4527be3e.c136d"
            ]
        ]
    },
    {
        "id": "9baf8181.434448",
        "type": "Uptime",
        "z": "d4fae0b8.1d7718",
        "name": "",
        "x": 380,
        "y": 300,
        "wires": [
            [
                "3fc9bb32.101e8c"
            ]
        ]
    },
    {
        "id": "f9f7f2ca.a81098",
        "type": "ui_text",
        "z": "d4fae0b8.1d7718",
        "group": "a63d0a.95063af8",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Uptime",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 700,
        "y": 300,
        "wires": []
    },
    {
        "id": "eae9efb0.53c768",
        "type": "debug",
        "z": "d4fae0b8.1d7718",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 420,
        "wires": []
    },
    {
        "id": "bbf0e7aa.0f196",
        "type": "Loadavg",
        "z": "d4fae0b8.1d7718",
        "name": "",
        "x": 380,
        "y": 340,
        "wires": [
            [
                "eae9efb0.53c768",
                "6ae62968.d9ab6"
            ]
        ]
    },
    {
        "id": "ff7a348.c8c4a48",
        "type": "change",
        "z": "d4fae0b8.1d7718",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.cpus[1].speed",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 180,
        "wires": [
            [
                "444d0124.f1eea"
            ]
        ]
    },
    {
        "id": "444d0124.f1eea",
        "type": "ui_level",
        "z": "d4fae0b8.1d7718",
        "group": "a63d0a.95063af8",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "CPU 1",
        "label": "CPU",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": "1600",
        "segWarn": "",
        "segHigh": "",
        "unit": "",
        "layout": "sh",
        "channelA": "",
        "channelB": "",
        "decimals": 0,
        "animations": "soft",
        "shape": "3",
        "colorschema": "fixed",
        "textoptions": "default",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "segments",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 690,
        "y": 180,
        "wires": []
    },
    {
        "id": "3fc9bb32.101e8c",
        "type": "function",
        "z": "d4fae0b8.1d7718",
        "name": "",
        "func": "var uptime = new Date (msg.payload.uptime);\nmsg.payload = uptime.getDate() + \"d:\" + uptime.getHours() \n    + \"h:\" + uptime.getMinutes() + \"m:\" + uptime.getSeconds() + \"s\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 520,
        "y": 300,
        "wires": [
            [
                "f9f7f2ca.a81098"
            ]
        ]
    },
    {
        "id": "cc813a9b.7cfe9",
        "type": "ui_button",
        "z": "d4fae0b8.1d7718",
        "name": "Refresh",
        "group": "a63d0a.95063af8",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "REFRESH",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "autorenew",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 120,
        "y": 120,
        "wires": [
            [
                "9baf8181.434448",
                "79e74f12.c7f1a",
                "4c7d06fd.580db",
                "71da91cb.d05d88",
                "bbf0e7aa.0f196"
            ]
        ]
    },
    {
        "id": "cf6d9558.d6238",
        "type": "ui_text",
        "z": "d4fae0b8.1d7718",
        "group": "a63d0a.95063af8",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Load Avg.",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 700,
        "y": 340,
        "wires": []
    },
    {
        "id": "6ae62968.d9ab6",
        "type": "function",
        "z": "d4fae0b8.1d7718",
        "name": "",
        "func": "var msg.payload = msg.payload.loadavg[0] + \" \" + msg.payload.loadavg[1] + \" \" + msg.payload.loadavg[2];\nreturn msg;",
        "outputs": 1,
        "noerr": 4,
        "initialize": "",
        "finalize": "",
        "x": 520,
        "y": 340,
        "wires": [
            [
                "cf6d9558.d6238",
                "eae9efb0.53c768"
            ]
        ]
    }
]